<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xxf:dialog
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:ev="http://www.w3.org/2001/xml-events"
    xmlns:xi="http://www.w3.org/2001/XInclude"
    xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
    xmlns:saxon="http://saxon.sf.net/"

    id="fb-database-service-dialog"
    level="modal"
    close="true"
    draggable="true"
    model="fb-database-service-model">

    <xf:label model="fr-form-model" ref="$form-resources/dialog-database-services/label"/>
    <xf:var   model="fr-form-model" name="form-resources" value="$form-resources"/>

    <xf:var name="instance" value="instance('fb-database-service-instance')"/>
    <fr:grid>
        <xh:tr>
            <xh:td>
                <xf:input ref="name" id="fb-database-service-name-input" incremental="true">
                    <xf:label ref="$form-resources/dialog-database-services/service-name/label"/>
                    <xf:hint ref="$form-resources/dialog-database-services/service-name/hint"/>
                </xf:input>
            </xh:td>
        </xh:tr>
        <xh:tr>
            <xh:td>
                <xf:input ref="datasource" incremental="true">
                    <xf:label ref="$form-resources/dialog-database-services/datasource/label"/>
                    <xf:hint ref="$form-resources/dialog-database-services/datasource/hint"/>
                </xf:input>
            </xh:td>
        </xh:tr>
        <xh:tr>
            <xh:td>
                <xf:textarea ref="query" incremental="true">
                    <xf:label ref="$form-resources/dialog-database-services/query/label"/>
                    <xf:hint ref="$form-resources/dialog-database-services/query/hint"/>
                </xf:textarea>
            </xh:td>
        </xh:tr>
    </fr:grid>
    <xh:div class="fr-dialog-buttons">
        <xf:group>
            <xh:div class="pull-left">
                <!-- Delete button -->
                <xf:trigger ref="$instance/delete-trigger" appearance="xxf:danger" id="fb-database-service-delete">
                    <xf:label>
                        <xf:output value="$form-resources/remove/label"/>
                    </xf:label>

                    <xf:action ev:event="DOMActivate">
                        <!-- Ask confirmation -->
                        <xxf:show dialog="fb-confirmation-dialog">
                            <xf:property name="fr:message"
                                             value="concat($form-resources/messages/delete-service, ' ''',
                                                         $instance/name,
                                                         '''?')"/>
                            <xf:property name="fr:confirmation-target" value="'fb-database-service-delete'"/>
                        </xxf:show>
                    </xf:action>
                    <xf:action ev:event="fb-confirmation-yes">
                        <!-- Delete stuff and close dialog -->
                        <xf:delete ref="$model/(fb:submission[@id = $instance/submission-id], fb:instance[@id = $instance/instance-id])"/>
                        <xxf:hide dialog="fb-database-service-dialog"/>
                    </xf:action>
                </xf:trigger>
            </xh:div>
            <!-- Test button -->
            <!-- TODO: testing is disabled for now, implement in the future -->
            <xf:trigger ref="save-test-trigger[false()]">
                <xf:label>
                    <xh:img src="/forms/orbeon/builder/images/play.png" alt=""/>
                    <xf:output value="$form-resources/dialog-database-services/test/label"/>
                </xf:label>

                <!-- Test submission -->
                <xf:action ev:event="DOMActivate">
                    <!-- Clear response -->
                    <xf:setvalue iterate="response/*[not(*)]" ref="."/>
                    <xf:delete ref="response/headers/header"/>

                    <!-- Toggle back response submission -->
                    <xf:toggle case="fb-service-dialog-none"/>

                    <!-- Send submission -->
                    <xf:send submission="fb-test-database-service-submission"/>
                </xf:action>

                <!-- Common response actions -->
                <xf:action ev:event="xforms-submit-done xforms-submit-error" ev:observer="fb-test-database-service-submission">
                    <xf:toggle case="fb-service-dialog-response"/>
                    <xf:action context="response">
                        <xf:setvalue ref="resource-uri" value="event('resource-uri')"/>
                        <xf:setvalue ref="status-code" value="event('response-status-code')"/>
                        <xf:delete ref="headers/header"/>
                        <xf:insert context="headers" origin="event('response-headers')"/>
                        <!-- Handle response body -->
                        <xf:var name="error-body" value="event('response-body')"/>
                        <xf:setvalue if="$error-body" ref="content" value="if ($error-body castable as xs:string)
                            then $error-body else saxon:serialize($error-body, xxf:instance('fr-xsl-output-instance'))"/>
                    </xf:action>
                </xf:action>
                <!-- Error actions -->
                <xf:action ev:event="xforms-submit-error" ev:observer="fb-test-database-service-submission">
                    <xf:action context="response">
                        <xf:setvalue ref="error-type" value="event('error-type')"/>
                    </xf:action>
                </xf:action>
            </xf:trigger>
            <!-- Save button -->
            <xf:trigger ref="save-test-trigger" appearance="xxf:primary">
                <xf:label>
                    <xf:output value="$form-resources/dialog-database-services/save/label"/>
                </xf:label>
                <!-- Save changes to form -->
                <xf:action ev:event="DOMActivate" xmlns:sql="http://orbeon.org/oxf/xml/sql">
                    <!-- Actual id of the submission and instance -->
                    <xf:var name="submission-id" value="$instance/submission-id"/>
                    <xf:var name="instance-id" value="$instance/instance-id"/>

                    <!-- Insert new submission if needed -->
                    <xf:action if="empty($model/fb:submission[@id = $submission-id])">
                        <xf:insert context="$model" ref="xf:* | fb:instance | fb:submission" origin="instance('fb-database-submission-template')"/>
                        <xf:setvalue ref="$model/fb:submission[last()]/@id" value="$submission-id"/>
                    </xf:action>
                    <xf:var name="submission" value="$model/fb:submission[@id = $submission-id]"/>

                    <!-- Insert new instance just before submission if needed -->
                    <xf:action if="empty($model/fb:instance[@id = $instance-id])">
                        <xf:insert ref="$submission" position="before" origin="instance('fb-database-instance-template')"/>
                        <!-- Don't reuse $submission because it might be out of date due to the insertion before! -->
                        <!-- See https://github.com/orbeon/orbeon-forms/issues/934 -->
                        <xf:setvalue ref="$model/fb:submission[@id = $submission-id]/preceding-sibling::fb:instance[1]/@id" value="$instance-id"/>
                    </xf:action>

                    <!-- Set instance content -->
                    <xf:action context="$model/fb:instance[@id = $instance-id]/*">
                        <!-- Get query template -->
                        <xf:var name="sql-query" value="xxf:extract-document(instance('fb-database-query-template'), '#all')/*" as="element()"/>
                        <!-- Set datasource -->
                        <xf:setvalue ref="$sql-query/sql:datasource" value="$instance/datasource"/>
                        <!-- Set query -->
                        <xf:delete ref="$sql-query/sql:query"/>
                        <xf:insert context="$sql-query" ref="*" origin="saxon:parse($instance/query-xml)/*"/>
                        <!-- Set request instance -->
                        <xf:setvalue ref="." value="saxon:serialize($sql-query, xxf:instance('fr-xsl-output-instance'))"/>
                    </xf:action>

                    <!-- Hide dialog -->
                    <xxf:hide dialog="fb-database-service-dialog"/>
                </xf:action>
            </xf:trigger>
            <xf:output value="$form-resources/or/label"/>
            <xf:trigger appearance="minimal">
                <xf:label>
                    <xf:output value="$form-resources/cancel/label"/>
                </xf:label>
                <!-- Hide dialog -->
                <xxf:hide ev:event="DOMActivate" dialog="fb-database-service-dialog"/>
            </xf:trigger>
        </xf:group>
    </xh:div>

    <!-- Initialize dialog -->
    <xf:action ev:event="xxforms-dialog-open" xmlns:sql="http://orbeon.org/oxf/xml/sql">
        <xf:var name="submission-name" value="event('submission-name')"/>

        <!-- Clear instance entirely -->
        <xf:setvalue iterate="$instance//*[not(*)]" ref="."/>
        <xf:setvalue ref="$instance/datasource" value="instance('fb-database-query-template')/sql:datasource"/>
        <xf:setvalue ref="$instance/query" value="instance('fb-database-query-template')/sql:query"/>

        <!-- Copy parameters if any -->
        <xf:action if="$submission-name">
            <xf:setvalue ref="$instance/name" value="$submission-name"/>
            <xf:setvalue ref="$instance/initial-name" value="$submission-name"/>
            <xf:var name="submission" value="$model/fb:submission[@id = concat($submission-name, '-submission')]"/>
            <!-- Get query -->
            <xf:var name="query-instance" value="$model/fb:instance[@id = concat($submission-name, '-instance')]"/>
            <xf:action if="xxf:non-blank($query-instance/*)">
                <!-- Assume there is a serialized query -->
                <xf:var name="sql-query" value="saxon:parse($query-instance/*)/*" as="element()"/>
                <!-- Restore datasource -->
                <xf:setvalue ref="$instance/datasource" value="$sql-query/sql:datasource"/>
                <!-- Serialize sql:query and remove containing element -->
                <xf:setvalue ref="$instance/query" value="substring-before(substring-after(saxon:serialize($sql-query/sql:query, xxf:instance('fr-xsl-output-instance')), '>'), '&lt;/sql:query>')"/>
            </xf:action>
        </xf:action>
    </xf:action>

    <!-- Model for the submission editor -->
    <xf:model id="fb-database-service-model">

        <xf:var name="model" value="xxf:instance('fb-form-instance')/xh:head/xf:model[@id = 'fr-form-model']"/>

        <xf:instance id="fb-database-service-instance">
            <submission valid="true">
                <name/>
                <initial-name/>
                <submission-id/>
                <instance-id/>
                <datasource/>
                <query/>
                <query-xml/>
                <response/>
                <delete-trigger/>
                <save-test-trigger/>
            </submission>
        </xf:instance>

        <!-- Enable/disable trigger -->
        <xf:setvalue ev:event="xxforms-invalid" ev:observer="fb-database-service-instance" ref="@valid">false</xf:setvalue>
        <xf:setvalue ev:event="xxforms-valid"   ev:observer="fb-database-service-instance" ref="@valid">true</xf:setvalue>

        <xf:bind ref="instance('fb-database-service-instance')">
            <!-- Make sure that the name is not already in use  -->
            <xf:bind
                ref="name"
                type="xs:NCName"
                required="true()"
                constraint="(xxf:non-blank() and xxf:trim() = ../initial-name)
                                or not(../submission-id = $model/fb:submission/@id
                                    or ../instance-id = $model/fb:instance/@id)"
                readonly="xxf:non-blank(../initial-name)"/>
            <xf:bind ref="submission-id" calculate="concat(../name, '-submission')"/>
            <xf:bind ref="instance-id" calculate="concat(../name, '-instance')"/>
            <!-- TODO: type of datasource. What's the format? jdbc/foobar? a/b/c? use regexp -->
            <xf:bind ref="datasource" type="xs:string" required="true()"/>
            <!-- Check that the resulting XML document is well-formed -->
            <xf:bind ref="query-xml" type="xxf:XML"
                         calculate="concat('&lt;sql:query xmlns:sql=''http://orbeon.org/oxf/xml/sql''>', ../query, '&lt;/sql:query>')"/>
            <xf:bind ref="query" constraint="valid(../query-xml)" required="true()"/>

            <xf:bind ref="delete-trigger" relevant="xxf:non-blank(../initial-name)"/>
            <xf:bind ref="save-test-trigger" readonly="../@valid = 'false'"/>
        </xf:bind>

        <!-- Template for the submission -->
        <xf:instance
            id="fb-database-submission-template"
            xxf:readonly="true"
            xxf:exclude-result-prefixes="pipeline xhtml xs xsi xi xxi fr fb saxon xbl exforms">
            <fb:submission
                id=""
                class="fr-database-service"
                resource="/fr/service/custom/orbeon/database"
                method="post"
                serialization="application/xml"/>
        </xf:instance>

        <!-- Template for inserting an instance -->
        <xf:instance
            id="fb-database-instance-template"
            xxf:readonly="true"
            xxf:exclude-result-prefixes="pipeline xhtml xs xsi xi xxi fr fb saxon xbl exforms">
            <fb:instance
                id=""
                class="fr-database-service"
                xxf:exclude-result-prefixes="#all">
                <body/>
            </fb:instance>
        </xf:instance>

        <!-- Template for the instance containing the SQL query -->
        <xf:instance id="fb-database-query-template" xxf:readonly="true" xxf:exclude-result-prefixes="#all">
            <sql:config xmlns:sql="http://orbeon.org/oxf/xml/sql">
                <sql:datasource/>
                <sql:query xmlns:xs="http://www.w3.org/2001/XMLSchema">SELECT * FROM customers
WHERE first_name = &lt;sql:param type="xs:string" select=""/></sql:query>
            </sql:config>
        </xf:instance>

        <!-- Submission to test a service -->
        <xf:submission
            id="fb-test-database-service-submission"
            ref="saxon:parse(instance('fb-database-service-instance')/sql)/*"
            method="post"
            resource="/fr/service/custom/orbeon/database"
            replace="text"
            target="instance('fb-database-service-instance')/response"/>

    </xf:model>

</xxf:dialog>
