<!--
  Copyright (C) 2020 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl">

    <xbl:binding
        id="fr-attachment"
        element="fr|attachment"
        xxbl:mode="binding lhha javascript-lifecycle"
        xxbl:container="span"
        xxbl:label-for="fr-attachment-elem">

        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Single File Attachment</display-name>
            <display-name lang="es">Archivos Adjuntos</display-name>
            <display-name lang="fi">Tiedoston liittäminen</display-name>
            <display-name lang="fr">Fichier joint unique</display-name>
            <display-name lang="ru">Загрузка файла</display-name>
            <display-name lang="it">File allegato</display-name>
            <display-name lang="de">Einzelner Dateianhang</display-name>
            <display-name lang="sv">Fil som bilaga</display-name>
            <display-name lang="nl">Bestandsbijlage</display-name>
            <display-name lang="pt">Anexar ficheiro</display-name>
            <icon>
                <icon-class>fa fa-fw fa-file-o</icon-class>
            </icon>
            <templates>
                <bind type="xf:anyURI"/>
                <instance filename="" mediatype="" size=""/>
                <view>
                     <fr:attachment id="" ref="" class="fr-attachment">
                        <xf:label ref=""/>
                        <xf:hint  ref=""/>
                        <xf:help  ref=""/>
                        <xf:alert ref=""/>
                    </fr:attachment>
                </view>
            </templates>
            <control-details>
                <xf:model xmlns="">

                    <xf:action event="xforms-model-construct-done">
                        <xf:action iterate="instance('local')/*">
                            <xf:var name="c" value="."/>
                            <xf:setvalue
                                ref="$c"
                                value="(instance()/@*[name() = name($c)], $c/@default)[1]"/>
                        </xf:action>
                    </xf:action>

                    <xf:instance id="local" xxf:exclude-result-prefixes="#all">
                        <_>
                            <allow-download default="true"/>
                            <show-size      default="true"/>
                        </_>
                    </xf:instance>

                    <xf:bind ref="instance('local')">
                        <xf:bind
                            ref="allow-download"
                            type="xs:boolean"/>
                    </xf:bind>

                    <xf:instance id="fr-form-resources" xxf:readonly="true" xxf:exclude-result-prefixes="#all">
                        <_>
                            <resource xml:lang="en">
                                <allow-download>Allow download</allow-download>
                                <show-size>Show size</show-size>
                            </resource>
                            <resource xml:lang="fr">
                                <allow-download>Permettre le téléchargement</allow-download>
                                <ow-si>Montrer la taille</ow-si>
                            </resource>
                        </_>
                    </xf:instance>

                </xf:model>
                <fr:grid xmlns="" id="fb-editor-download-grid">
                    <fr:c x="1" y="1" w="12">
                        <fr:checkbox-input ref="instance('local')/allow-download" id="allow-download-control">
                            <xf:label ref="xxf:r('allow-download')"/>
                        </fr:checkbox-input>
                    </fr:c>
                    <!-- For now, don't support this, see comments in #4414.
                    <fr:c x="1" y="2" w="12">
                        <fr:checkbox-input ref="instance('local')/show-size" id="show-size-control">
                            <xf:label ref="xxf:r('show-size')"/>
                        </fr:checkbox-input>
                    </fr:c>
                    -->
                </fr:grid>
                <xf:action
                    id="fb-editor-download-action"
                    event="xforms-value-changed"
                    observer="
                        allow-download-control
                        show-size-control">

                    <xf:var
                        name="name"
                        value="name(event('xxf:binding'))"/>

                    <xf:var
                        name="new-value"
                        value="
                            let $binding := event('xxf:binding'),
                                $v       := string($binding),
                                $default := $binding/@default/string()
                            return
                                if ($v != $default) then
                                    $v
                                else
                                    ()
                        "/>

                    <xf:insert
                        context="instance()"
                        if="exists($new-value)"
                        origin="xf:attribute($name, $new-value)"/>
                    <xf:delete
                        if="empty($new-value)"
                        ref="instance()/@*[name() = $name]"/>
                </xf:action>
            </control-details>
        </metadata>

        <xbl:resources>
            <xbl:style src="/xbl/orbeon/attachment/attachment.css"/>
        </xbl:resources>

        <xbl:implementation>
            <xf:model xxf:custom-mips="">

                <!-- The upload takes place to the local instance first -->
                <xf:instance id="i" xxf:exclude-result-prefixes="#all">
                    <_ filename="" mediatype="" size=""/>
                </xf:instance>

                <!-- Propagate `base64Binary` -->
                <xf:bind
                    ref="
                        if (
                            local-name-from-QName(
                                xxf:type(
                                    xxf:binding('fr-attachment')
                                )
                            ) = 'base64Binary'
                        ) then
                            instance()
                        else
                            ()"
                    type="xf:base64Binary"/>

                <!-- Manual copy of upload constraints from the bound node -->
                <xf:bind
                    ref="instance()"
                    constraint="
                        for $binding in xxf:binding('fr-attachment')
                        return
                            (
                                for $mip in
                                    xxf:custom-mip(
                                        $binding,
                                        'upload-mediatypes'
                                    )
                                return
                                    xxf:upload-mediatypes($mip),
                                true()
                            )[1]
                            and
                            (
                                for $mip in
                                    xxf:custom-mip(
                                        $binding,
                                        'upload-max-size'
                                    )[. castable as xs:integer]
                                return
                                    xxf:upload-max-size(xs:integer($mip)),
                                true()
                            )[1]"/>

                <xf:instance id="orbeon-resources" xxf:readonly="true" xxf:exclude-result-prefixes="#all">
                    <_>
                        <resource xml:lang="en">
                            <drag-single>Drag file here or {0}select file{1}.</drag-single>
                            <drag-multiple>Drag files here or {0}select files{1}.</drag-multiple>
                            <download>Download</download>
                            <empty>No attachment.</empty>
                            <remove>Remove Attachment</remove>
                        </resource>
                        <resource xml:lang="es">
                            <drag-single>Arrastra el archivo aquí o {0}selecciona el archivo{1}.</drag-single>
                            <drag-multiple>Arrastra los archivos aquí o {0}selecciona los archivos{1}.</drag-multiple>
                            <download>Descargar</download>
                            <empty>No hay adjunto</empty>
                            <remove>Quitar archivo adjunto</remove>
                        </resource>
                        <resource xml:lang="fi">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Lataa</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="fr">
                            <drag-single>Déposer le fichier ici ou {0}sélectionner le fichier{1}.</drag-single>
                            <drag-multiple>Déposer les fichiers ici ou {0}sélectionner les fichiers{1}.</drag-multiple>
                            <download>Télécharger</download>
                            <empty>Pas de fichier joint.</empty>
                            <remove>Supprimer le fichier joint</remove>
                        </resource>
                        <resource xml:lang="ru">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Download</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="it">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Scaricare</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="de">
                            <drag-single>Ziehen Sie die Datei hierher oder {0}wählen Sie eine Datei aus{1}.</drag-single>
                            <drag-multiple>Ziehen Sie Dateien hierher oder {0}wählen Sie Dateien aus{1}.</drag-multiple>
                            <download>Herunterladen</download>
                            <empty>Kein Anhang</empty>
                            <remove>Anhang entfernen</remove>
                        </resource>
                        <resource xml:lang="sv">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Ladda ner</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="nl">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Download</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="pt">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Baixar</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="lt">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Parsisiųsti</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                        <resource xml:lang="da">
                            <drag-single todo="true">[Drag file here or {0}select file{1}.]</drag-single>
                            <drag-multiple todo="true">[Drag files here or {0}select files{1}.]</drag-multiple>
                            <download>Hent</download>
                            <empty todo="true">[No attachment.]</empty>
                            <remove todo="true">[Remove Attachment]</remove>
                        </resource>
                    </_>
                </xf:instance>
            </xf:model>
        </xbl:implementation>
        <xbl:template>

            <xf:var
                name="multiple"
                value="xxf:component-param-value('multiple') = 'true'"/>
            <xf:var
                name="binding"
                value="xxf:binding('fr-attachment')"/>
            <xf:var
                name="readonly"
                value="xxf:readonly($binding)"/>
            <xf:var
                name="view"
                value="xxf:readonly($binding) and property('xxf:readonly-appearance') = 'static'"/>
            <xf:var
                name="cant-take-upload"
                value="
                    $readonly or
                    (not(xxf:is-blank(string($binding))) and not($multiple))"/>

            <xh:div id="fr-attachment-elem" xxf:control="true" tabindex="-1">
                <fr:dnd-repeat
                    ref="
                        if ($multiple) then
                            (: Using `*:_` to support `_` in the instance being in non-empty default namespace :)
                            $binding/*:_[xxf:non-blank(string(.))]
                        else
                            $binding[xxf:non-blank(string(.))]">

                    <xh:div class="xforms-dnd-item xforms-dnd-moves">

                        <xh:i class="fr-attachment-icon fa fa-fw {
                            for $m in @mediatype/string()
                            return
                                if (starts-with($m, 'image/')) then
                                    'fa-file-image-o'
                                else if ($m = 'application/zip') then
                                    'fa-file-archive-o'
                                else if ($m = 'application/pdf') then
                                    'fa-file-pdf-o'
                                else if (starts-with($m, 'audio/')) then
                                    'fa-file-audio-o'
                                else if (starts-with($m, 'video/')) then
                                    'fa-file-video-o'
                                else if (starts-with($m, 'text/')) then
                                    'fa-file-text-o'
                                else if ($m = ('application/vnd.ms-excel', 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet')) then
                                    'fa-file-excel-o'
                                else if ($m = ('application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document')) then
                                    'fa-file-word-o'
                                else if ($m = ('application/vnd.ms-powerpoint', 'application/vnd.openxmlformats-officedocument.presentationml.presentation')) then
                                    'fa-file-powerpoint-o'
                                else
                                    'fa-file-o'
                        }"/>

                        <xf:var
                            name="disable-download"
                            value="fr:component-param-value('allow-download') = 'false' or fr:mode() = ('pdf', 'email')"/>

                        <xf:output
                            ref=".[$disable-download]"
                            value="@filename"
                            class="fr-attachment-filename"/>

                        <xf:output
                            appearance="xxf:download"
                            ref=".[not($disable-download)]"
                            class="fr-attachment-filename">

                            <xf:label ref="@filename"/>
                            <xf:filename  ref="@filename" />
                            <xf:mediatype ref="@mediatype"/>
                            <xf:header ref="fr:attachment-form-version()">
                                <xf:name>Orbeon-Form-Definition-Version</xf:name>
                                <xf:value value="."/>
                            </xf:header>
                            <xf:header ref="$binding[@fr:attachment-encrypted = 'true']">
                                <xf:name>Orbeon-Decrypt</xf:name>
                                <xf:value>true</xf:value>
                            </xf:header>
                        </xf:output>

                        <xf:output
                            xmlns:filemetadata="java:org.orbeon.oxf.xforms.control.controls.FileMetadata"
                            value="filemetadata:humanReadableBytes(@size)"
                            class="fr-attachment-size"/>

                        <xf:trigger ref="." appearance="minimal" class="fr-attachment-remove" xxf:title="{xxf:r('remove')}">
                            <xf:label><xh:i class="fa fa-fw fa-times"/></xf:label>
                            <xf:action event="DOMActivate">
                                <xf:action type="xpath" xmlns:upload="java:org.orbeon.oxf.xforms.control.controls.XFormsUploadControl">
                                    upload:deleteFileIfPossible(string(.))
                                </xf:action>
                                <xf:delete
                                    if="$multiple"
                                    ref="."/>
                                <xf:setvalue
                                    if="not($multiple)"
                                    iterate="., @filename, @mediatype, @size"
                                    ref="."/>
                            </xf:action>
                        </xf:trigger>

                    </xh:div>

                </fr:dnd-repeat>

                <xf:group
                    class="fr-attachment-empty"
                    ref="$binding[$view and (if ($multiple) then count(_[xxf:non-blank(string(.))]) = 0 else xxf:is-blank(string(.)))]">
                    <xf:output value="xxf:r('empty')"/>
                </xf:group>

                <xh:div class="{if ($cant-take-upload) then 'xforms-hidden' else ''}">
                    <xh:div class="fr-attachment-drop" role="button" tabindex="0">
                        <xf:output
                            value="
                                xxf:format-message(
                                    xxf:r(if ($multiple) then 'drag-multiple' else 'drag-single'),
                                    (
                                        '&lt;a href=&quot;javascript:void(0)&quot; class=&quot;fr-attachment-select&quot; role=&quot;button&quot;&gt;',
                                        '&lt;/a&gt;'
                                    )
                                )"
                            mediatype="text/html"/>
                    </xh:div>
                    <xf:upload
                        id="xf-upload"
                        class="fr-attachment-upload"
                        ref="if ($readonly) then '' else instance()"
                        xbl:attr="xxf:multiple=multiple"
                        accept="{
                            (
                                xxf:custom-mip($binding, 'upload-mediatypes'), (: 1st from common constraint :)
                                fr:component-param-value('accept')             (: 2nd because there might be a property always defined :)
                            )[xxf:non-blank()][1]
                        }"
                        xxf:title="{xxf:label('fr-attachment')}">

                        <xf:filename  ref="if ($readonly) then '' else @filename"/>
                        <xf:mediatype ref="if ($readonly) then '' else @mediatype"/>
                        <xxf:size     ref="if ($readonly) then '' else @size"/>

                        <!-- Propagate the value to the binding *before* propagating the event (for #3061) -->
                        <xf:action event="xxforms-upload-done">

                            <xf:insert
                                if="$multiple"
                                context="$binding"
                                ref="*"
                                origin="
                                    (: Create an `_` element respecting the default namespace in the instance, if any :)
                                    xf:element(
                                        resolve-QName('_', $binding),
                                        (instance()/@*, instance()/string())
                                    )
                                "/>

                            <xf:action if="not($multiple)">
                                <!-- TODO: move to function library for offline -->
                                <xf:action type="xpath" xmlns:upload="java:org.orbeon.oxf.xforms.control.controls.XFormsUploadControl">
                                    upload:deleteFileIfPossible(string($binding))
                                </xf:action>
                                <xf:setvalue
                                    ref="$binding"
                                    value="instance()"/>
                                <xf:insert
                                    context="$binding"
                                    origin="instance()/@*"/>
                            </xf:action>

                        </xf:action>

                        <!-- Retarget of upload events -->
                        <!-- NOTE: Duplicated logic in image-attachment.xbl -->
                        <xf:dispatch
                            event="xxforms-upload-start xxforms-upload-cancel"
                            targetid="fr-attachment"
                            name="{event('xxf:type')}"/>

                        <xf:dispatch
                            event="xxforms-upload-done"
                            propagate="stop"
                            defaultAction="cancel"

                            targetid="fr-attachment"
                            name="{event('xxf:type')}">
                            <xf:property name="file"           value="event('file')"/>
                            <xf:property name="filename"       value="event('filename')"/>
                            <xf:property name="content-type"   value="event('content-type')"/>
                            <xf:property name="content-length" value="event('content-length')"/>
                        </xf:dispatch>

                        <xf:dispatch
                            event="xxforms-upload-error"
                            propagate="stop"
                            defaultAction="cancel"

                            targetid="fr-attachment"
                            name="{event('xxf:type')}">
                            <xf:property name="error-type" value="event('error-type')"/>
                            <xf:property name="filename"   value="event('filename')"/>
                            <xf:property name="permitted"  value="event('permitted')"/>
                            <xf:property name="actual"     value="event('actual')"/>
                            <xf:property name="message"    value="event('message')"/>
                        </xf:dispatch>

                        <xf:dispatch
                            event="xforms-deselect"
                            propagate="stop"
                            defaultAction="cancel"

                            targetid="fr-attachment"
                            name="{event('xxf:type')}">
                        </xf:dispatch>

                        <xf:action event="xxforms-upload-done xxforms-upload-error">
                            <xf:setvalue
                                iterate="instance(), instance()/@*"
                                ref="."/>
                        </xf:action>

                    </xf:upload>
                </xh:div>
            </xh:div>

        </xbl:template>
    </xbl:binding>
</xbl:xbl>
