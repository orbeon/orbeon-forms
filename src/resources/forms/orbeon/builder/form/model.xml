<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xf:model xmlns:xh="http://www.w3.org/1999/xhtml"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
      xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
      xmlns:saxon="http://saxon.sf.net/"
      xmlns:xbl="http://www.w3.org/ns/xbl"
      xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
      xmlns:xpl="java:org.orbeon.oxf.pipeline.api.FunctionLibrary"
      xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilder"
      xmlns:toolboxOps="java:org.orbeon.oxf.fb.ToolboxOps"

      xxf:external-events="fb-show-test-dialog fb-update-control-lhha"
      xxf:noscript-support="false"
      xxf:xpath-analysis="false"
      xxf:expose-xpath-types="true"

      id="fr-form-model">

    <xf:var name="parameters" value="xxf:instance('fr-parameters-instance')"/>
    <xf:var name="app"        value="$parameters/app/string()"/>
    <xf:var name="form"       value="$parameters/form/string()"/>
    <xf:var name="mode"       value="$parameters/mode/string()"/>

    <!-- Public variable pointing to the current language -->
    <xf:var name="fb-lang" value="instance('fb-language-instance')"/>

    <xf:var name="is-pe" value="xpl:isPE()" as="xs:boolean"/>

    <!-- Other variables -->
    <!-- TODO: don't duplicate logic with what's in FormBuilderFunctions -->
    <xf:var name="model" value="xh:head/xf:model[@id = 'fr-form-model']"/>
    <xf:var name="metadata-instance" value="$model/xf:instance[@id = 'fr-form-metadata']/*"/>
    <xf:var name="resources" value="$model/xf:instance[@id = 'fr-form-resources']/*"/>
    <xf:var name="current-resources" value="($resources/resource[@xml:lang = $fb-lang])[1]"/>
    <xf:var name="body" value="xh:body//xf:group[xxf:has-class('fb-body')]"/>

    <xf:var name="component-bindings" value="instance('fb-components-instance')/xbl:xbl/xbl:binding" as="element(xbl:binding)*"/>

    <!-- FIXME: Probably remove once all usages are gone -->
    <xf:var name="current-td" value="id(instance('fb-variables')/selected-cell, instance('fb-form-instance'))" as="element()?"/>

    <!-- Main instance -->
    <!-- Index ids on fb-form-instance for performance -->
    <xf:instance id="fb-form-instance" xxf:index="id"><dummy/></xf:instance>
    <xf:instance id="fr-form-instance" src="oxf:/forms/orbeon/builder/form/template.xml"/>

    <!-- Annotate form data passed and store it into fb-form-instance -->
    <xf:action ev:event="fr-annotate-data">
        <!-- First store into a temporary document so that multiple inserts won't cause repeat processing until we are done -->
        <xf:var name="temp" value="xxf:create-document()"/>
        <xf:insert
            context="$temp"
            origin="
                xxf:call-xpl(
                    'oxf:/forms/orbeon/builder/form/annotate.xpl',
                    (
                        'data',
                        'bindings'
                    ),
                    (
                        event('data'),
                        instance('fb-components-instance')
                    ),
                    'data'
                )"
            />

        <xf:action type="xpath">
            fbf:initializeGrids($temp),
            fbf:deleteSectionTemplateContentHolders($temp)
        </xf:action>

        <!--<xf:message level="xxf:log-info" value="saxon:serialize($temp, 'xml')"/>-->

        <xf:insert ref="instance('fb-form-instance')" origin="$temp"/>

        <!-- RRR so that all binds are up to date for the rest of the initialization -->
        <xf:rebuild/>
        <xf:recalculate/>
        <xf:revalidate/>

    </xf:action>

    <!-- If needed, update current language after data got annotated. Do this in separate action so that model variables are up to date. -->
    <xf:action ev:event="fr-annotate-data">
        <xf:setvalue
            if="not($fb-lang = $resources/resource/@xml:lang)"
            ref="$fb-lang"
            value="$resources/resource[1]/@xml:lang"/>
    </xf:action>

    <!-- Initialization entry point. Form data must be ready and the Form Runner language must have been set. -->
    <xf:action ev:event="xforms-model-construct-done" if="not($mode = ('summary', 'home')) and $app != '*' and $form != '*'">
        <xf:dispatch name="fb-data-ready" targetid="fr-form-model"/>
    </xf:action>

    <!-- Mode != "new": annotate loaded data and copy it to fb-form-instance -->
    <xf:action ev:event="fb-data-ready" if="not($mode = 'new')">

        <!-- Load toolbox if mode is not new. This also annotates the form when loading is done via fr-annotate-data. -->
        <xf:var
            name="metadata"
            value="instance('fr-form-instance')/
                       xh:head/
                           xf:model[@id = 'fr-form-model']/
                               xf:instance[@id = 'fr-form-metadata']/
                                   *"/>
        <xf:send submission="fb-load-toolbox">
            <xf:property name="app"  value="$metadata/application-name"/>
            <xf:property name="form" value="$metadata/form-name"/>
        </xf:send>

        <!-- RRR so that all binds are up to date for the rest of the initialization -->
        <xf:rebuild/>
        <xf:recalculate/>
        <xf:revalidate/>

    </xf:action>

    <!-- Mode = "new": just annotate template -->
    <xf:action ev:event="fb-data-ready" if="$mode = 'new'">

        <!-- Point to template -->
        <xf:var name="template" value="instance('fr-form-instance')"/>

        <!-- Set language in all blank @xml:lang on template -->
        <xf:setvalue
            iterate="$template//@xml:lang[normalize-space() = '']"
            ref="."
            value="xxf:instance('fr-language-instance')"/>

        <!-- Set initial form and first section titles on template -->
        <xf:var name="form-resources" model="fr-resources-model" value="$fr-form-resources"/>
        <xf:setvalue
            ref="fbf:metadataInstanceRoot($template)/title"
            value="$form-resources/template/untitled-form"/>
        <xf:setvalue
            ref="fbf:resourcesInstanceRoot($template)/resource/section-1/label"
            value="$form-resources/template/untitled-section"/>

        <!-- Annotate data -->
        <!-- NOTE: RRR done by fr-annotate-data -->
        <xf:dispatch targetid="fr-form-model" name="fr-annotate-data">
            <xf:property name="data" value="$template"/>
        </xf:dispatch>

        <!-- Free fr-form-instance -->
        <xf:insert ref="instance('fr-form-instance')" origin="xxf:element('dummy')"/>

        <!-- Mark data as safe. Once user sets metadata from dialog, data will be marked dirty automatically.  -->
        <xf:action type="xpath" xmlns:process="java:org.orbeon.oxf.fr.process.SimpleProcess">
            process:runProcess('oxf.fr.detail.process', 'set-data-status(status = "safe")')
        </xf:action>

    </xf:action>

    <!-- Run the rest of the initialization. Do this in separate action so that model variables are up to date. -->
    <xf:action ev:event="fb-data-ready">

        <!-- NOTE: $fb-lang has already been set by fr-annotate-data above -->

        <!-- Check permissions if there are roles -->
        <xf:var name="has-roles" value="not(xxf:instance('fb-permissions')/@has-roles = 'false')"/>
        <xf:action if="$has-roles">
            <xf:var name="metadata-app"  value="bind('application-name-bind')"/>
            <xf:var name="metadata-form" value="bind('form-name-bind')"/>
            <xf:var name="permissions"   value="xxf:instance('fb-permissions')"/>

            <xf:action if="$mode = 'new'">
                <!-- New form -->
                <xf:action if="not($permissions/app/@name = '*')">

                    <xf:var name="initial-app-value" value="$permissions/app[1]/@name[normalize-space() != '']"/>

                    <xf:action if="empty($initial-app-value)" type="xpath">
                        frf:sendError(403)
                    </xf:action>

                    <!-- Set default value for app if we only support specific app names -->
                    <xf:setvalue ref="$metadata-app" value="$initial-app-value"/>

                    <xf:action if="not($permissions/app[1]/form/@name = '*')">
                        <!-- Set default value for form if we only support specific form names -->
                        <xf:setvalue ref="$metadata-form" value="$permissions/app[1]/form[1]/@name"/>
                    </xf:action>
                </xf:action>
            </xf:action>
            <xf:action if="not($mode = 'new')">
                <!-- Existing form -->

                <!-- If roles don't match then access is unauthorized. See similar logic in FR. -->
                <xf:action if="not(   exists($permissions/app[@name = '*'])
                                   or exists($permissions/app[@name = $metadata-app]/form[@name = ('*', $metadata-form)]))"
                           type="xpath">
                    frf:sendError(403)
                </xf:action>
            </xf:action>
        </xf:action>

        <!-- Handle user agent -->
        <xf:setvalue ref="instance('fb-user-agent-instance')/minimal-ie-version" value="fbf:MinimalIEVersion()"/>
        <xf:setvalue ref="instance('fb-user-agent-instance')/is-supported-browser" value="fbf:isBrowserSupported()"/>

        <xf:rebuild/>
        <xf:recalculate/>
        <xf:revalidate/>

    </xf:action>

    <!-- De-annotate data before saving -->
    <xf:action ev:event="fr-data-save-prepare">
        <xf:insert
            ref="instance('fr-form-instance')"
            origin="
                xxf:call-xpl(
                    'oxf:/forms/orbeon/builder/form/deannotate.xpl',
                    'data',
                    instance('fb-form-instance'),
                    'data'
                )"
            />
    </xf:action>

    <!-- Update attachment URLs, if any, after saving -->
    <xf:action ev:event="fr-data-save-done">
        <xf:action iterate="event('before-urls')">
            <xf:var name="p" value="position()"/>
            <xf:var name="before" value="."/>
            <xf:var name="after" value="event('after-urls')[$p]"/>

            <xf:setvalue ref="instance('fb-form-instance')/root()//(*[not(*)] | @*)[normalize-space() = $before]" value="$after"/>
        </xf:action>

        <!-- Free fr-form-instance and re-mark data as safe -->
        <xf:insert ref="instance('fr-form-instance')" origin="xxf:element('dummy')"/>
        <xf:action type="xpath" xmlns:process="java:org.orbeon.oxf.fr.process.SimpleProcess">
            process:runProcess('oxf.fr.detail.process', 'set-data-status(status = "safe")')
        </xf:action>

    </xf:action>

    <!-- Form is ready -->
    <xf:action ev:event="xforms-ready">
        <!-- Open form settings if mode is "new" -->
        <xxf:show if="$mode = 'new'" dialog="dialog-form-settings">
            <xf:property name="mode"        value="'new'"/>
            <xf:property name="title"       value="bind('title-bind')"/>
            <xf:property name="description" value="bind('description-bind')"/>
        </xxf:show>
    </xf:action>

    <!-- Annotated form instance -->
    <xf:bind id="fb-form-binds" ref="instance('fb-form-instance')">
        <xf:bind ref="xh:head">
            <xf:bind ref="xf:model[@id = 'fr-form-model']">
                <!-- Form metadata (also used by Form Runner) -->
                <xf:bind ref="xf:instance[@id = 'fr-form-metadata']/*">
                    <xf:bind id="application-name-bind" ref="application-name"/>
                    <xf:bind id="form-name-bind"        ref="form-name"/>
                    <xf:bind id="title-bind"            ref="title[@xml:lang = $fb-lang]"/>
                    <xf:bind id="description-bind"      ref="description[@xml:lang = $fb-lang]"/>
                    <xf:bind id="logo-bind"             ref="logo"/>
                </xf:bind>
                <!-- Global attachments (also used by Form Runner) -->
                <xf:bind ref="xf:instance[@id = 'fr-form-attachments']/*">
                    <xf:bind id="css-attachment-bind"   ref="css" type="xs:anyURI"/>
                    <xf:bind id="pdf-attachment-bind"   ref="pdf" type="xs:anyURI"/>
                </xf:bind>
            </xf:bind>
        </xf:bind>
        <!-- Keep all @edit-ref attributes pointing to the right spot -->
        <xf:bind ref=".//@edit-ref" calculate="concat('xxf:instance(''fb-form-instance'')/root()', ../saxon:path())"/>
    </xf:bind>

    <!-- Metadata for Form Builder itself -->
    <xf:instance id="fr-form-metadata" xxf:readonly="true">
        <metadata>
            <application-name>orbeon</application-name>
            <form-name>builder</form-name>
            <title xml:lang="en">Form Builder</title>
            <description xml:lang="en">Orbeon Form Builder allows you to easily build forms right from your web browser and without programming.</description>
            <title xml:lang="fr">Form Builder</title>
            <description xml:lang="fr">Orbeon Form Builder vous permet d'éditer des formulaires directement depuis votre navigateur et sans programmation.</description>
            <title xml:lang="ru">Мастер форм</title>
            <description xml:lang="ru">Мастер форм позволяет легко создавать шаблоны форм запросов.</description>
            <title xml:lang="pt">Form Builder</title>
            <description xml:lang="pt">Orbeon Form Builder permite que criar facilmente formulários directamente do seu navegador e sem programação.</description>
            <author>Orbeon, Inc.</author>
            <logo mediatype="image/png" filename="orbeon-logo-trimmed-transparent-30.png" size="">/apps/fr/style/orbeon-logo-trimmed-transparent-30.png</logo>
        </metadata>
    </xf:instance>

    <!-- Similar to fr-triggers-instance, but for FB-specific buttons -->
    <xf:instance id="fb-triggers-instance">
        <triggers>
            <data-status/>
            <publish/>
            <save-as/>
            <other/>
        </triggers>
    </xf:instance>

    <xf:instance id="fb-static-upload">
        <static-upload>
            <empty/>
            <non-empty>content</non-empty>
        </static-upload>
    </xf:instance>

    <xf:bind ref="instance('fb-triggers-instance')">
        <xf:bind ref="publish"
                 readonly="not(../data-status = 'clean')
                           or xxf:instance('fr-error-summary-instance')/valid = false()
                           or xxf:pending-uploads() > 0"/>

        <!-- Condition for disabling Save as… button -->
        <!-- HACK: Not sure why, but if we don't put a calculate here (which is useless), then the readonly is not evaluated on recalculate -->
        <xf:bind ref="save-as" readonly="$mode != 'edit'" calculate="$mode"/>
    </xf:bind>

    <!-- HACK: Bind has inter-model dependency -->
    <xf:recalculate ev:event="xxforms-value-changed" ev:observer="fr-parameters-instance"/>

    <!-- Synchronize data status -->
    <xf:setvalue
        event="fr-data-status-changed"
        observer="fr-persistence-model"
        ref="instance('fb-triggers-instance')/data-status"
        value="event('data-status')"/>

    <!-- All form resources -->
    <xf:instance
        id="fr-form-resources"
        src="oxf:/forms/orbeon/builder/form/resources.xml"
        xxf:readonly="true"
        xxf:cache="true"/>

    <!-- Instance containing the current language of the form being edited -->
    <xf:instance id="fb-language-instance">
        <lang/>
    </xf:instance>

    <!-- Store user-agent details -->
    <xf:instance id="fb-user-agent-instance">
        <user-agent>
            <minimal-ie-version/>
            <is-supported-browser/>
        </user-agent>
    </xf:instance>

    <!-- Submission to test the form -->
    <!-- NOTE: Submit form to testing service with section templates XBL included -->
    <xf:submission
        id="fb-test-form-submission"
        ref="
            xxf:call-xpl(
                'oxf:/forms/orbeon/builder/form/add-template-bindings.xpl',
                (
                    'data',
                    'bindings'
                ),
                (
                    xxf:call-xpl(
                        'oxf:/forms/orbeon/builder/form/deannotate.xpl',
                        'data',
                        instance('fb-form-instance'),
                        'data'
                    ),
                    xxf:instance('fb-components-instance')
                ),
                'data'
            )"
        method="post"
        replace="all"
        resource="/fr/{bind('application-name-bind')}/{bind('form-name-bind')}/test?{xxf:get-query-string()}"
        xxf:target="fb-test-iframe"
        xxf:show-progress="false"
    />

    <!-- Global variables -->
    <xf:instance id="fb-variables">
        <variables>
            <selected-cell/>        <!-- Currently selected cell td id -->

            <!-- TODO: move to dialog-language.xml -->
            <new-language/>
            <new-language-trigger/>

            <!-- Toolbox -->
            <section-trigger/>
            <grid-trigger/>
            <control-trigger/>

            <!-- Number of open dialogs -->
            <!-- TODO: could use a native function for this -->
            <dialogs-open>0</dialogs-open>

            <!-- XPath errors -->
            <rr>calculate</rr>
            <calculate-errors>0</calculate-errors>
            <validate-errors>0</validate-errors>
            <xpath-errors>0</xpath-errors>
        </variables>
    </xf:instance>

    <xf:action ev:observer="fb" ev:event="fb-update-section-label" xxf:phantom="true">
        <xf:setvalue ref="$current-resources/*[name() = fbf:controlNameFromId(event('xxf:targetid'))]/label" value="event('label')"/>
    </xf:action>
    <xf:action ev:observer="fb" ev:event="fb-update-control-lhha" xxf:phantom="true">
        <xf:setvalue ref="$current-resources/*[name() = fbf:controlNameFromId(event('xxf:targetid'))]/*[name() = event('lhha')]" value="event('value')"/>
        <xf:action type="xpath">fbf:setControlLHHAMediatype(instance('fb-form-instance'), fbf:controlNameFromId(event('xxf:targetid')), event('lhha'), event('isHtml') = 'true')</xf:action>
    </xf:action>
    <xf:var name="variables" value="instance('fb-variables')"/>
    <xf:var name="selected-cell" value="$variables/selected-cell"/>

    <xf:bind ref="$variables">
        <!-- TODO: move to dialog-language.xml -->
        <xf:bind ref="new-language-trigger" readonly="normalize-space(../new-language) = ''"/>
        <!-- Make buttons readonly depending on whether items can be inserted -->
        <xf:bind ref="section-trigger"  readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertSection($body))"/>
        <xf:bind ref="grid-trigger"     readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertGrid($body))"/>
        <xf:bind ref="control-trigger"  readonly="$current-td/ancestor::xbl:binding or not(toolboxOps:canInsertControl($body))"/>
        <!-- Sum calculate and validate MIP error counts -->
        <xf:bind ref="xpath-errors" calculate="../calculate-errors + ../validate-errors"/>
    </xf:bind>

    <!-- These actions track MIP XPath errors in the edited form's model. We keep track of XPath errors occurring on
         revalidate and recalculate independently, which should be reliable given that the edit form doesn't enable
         XPath dependencies. -->
    <xf:action ev:event="fb-xforms-model-construct" context="$variables">
        <xf:setvalue ref="rr">calculate</xf:setvalue>
        <xf:setvalue ref="calculate-errors">0</xf:setvalue>
        <xf:setvalue ref="validate-errors">0</xf:setvalue>
    </xf:action>

    <xf:action ev:event="fb-xforms-recalculate" context="$variables">
        <xf:setvalue ref="rr">calculate</xf:setvalue>
        <xf:setvalue ref="calculate-errors">0</xf:setvalue>
    </xf:action>

    <xf:action ev:event="fb-xforms-revalidate" context="$variables">
        <xf:setvalue ref="rr">validate</xf:setvalue>
        <xf:setvalue ref="validate-errors">0</xf:setvalue>
    </xf:action>

    <xf:action ev:event="fb-xxforms-xpath-error" context="$variables">
        <xf:setvalue ref="if (rr = 'calculate') then calculate-errors else validate-errors" value=". + 1"/>
    </xf:action>

    <!-- Reset the displayed page as the iframe might show the result from a previous test -->
    <xxf:script ev:event="fb-test-form">
        $('#fb-test-iframe')[0].contentWindow.location.href = "about:blank";
        ORBEON.xforms.Document.dispatchEvent("fr-form-model", "fb-show-test-dialog");
    </xxf:script>

    <!-- Dispatched from the client, see above action -->
    <xf:action ev:event="fb-show-test-dialog">
        <xxf:show dialog="fb-test-dialog"/>
        <xf:send submission="fb-test-form-submission"/>
    </xf:action>

    <!-- Publish form operation -->
    <xf:action ev:event="fb-publish-form" type="xpath">
        for $annotated in
            xxf:call-xpl(
                'oxf:/forms/orbeon/builder/form/add-template-bindings.xpl',
                (
                    'data',
                    'bindings'
                ),
                (
                    xxf:call-xpl(
                        'oxf:/forms/orbeon/builder/form/add-migration.xpl',
                            (
                                'data',
                                'bindings'
                            ),
                            (
                            xxf:call-xpl(
                                'oxf:/forms/orbeon/builder/form/deannotate.xpl',
                                'data',
                                xxf:instance('fb-form-instance'),
                                'data'
                            ),
                            xxf:instance('fb-components-instance')
                        ),
                        'data'
                    ),
                    xxf:instance('fb-components-instance')
                ),
                'data'
            )
        return
            fbf:publish($annotated, event('app'), event('form'), event('document'), event('version'))
    </xf:action>

    <!-- These actions track how many dialogs are open at a given time -->
    <xf:setvalue ev:event="xxforms-dialog-open" ev:observer="#document"
        ref="$variables/dialogs-open" value="xs:integer(.) + 1"/>

    <xf:setvalue ev:event="xxforms-dialog-close" ev:observer="#document"
        ref="$variables/dialogs-open" value="xs:integer(.) - 1"/>

    <!-- Schema upload dialog -->
    <xf:instance id="fb-schema-upload-instance">
        <validation>
            <schema-uri filename="" mediatype="" size=""/>
            <schema>
                <!-- Content will be like this -->
                <!--<xs:schema>-->
                    <!--...-->
                <!--</xs:schema>-->
            </schema>
            <temp-type/>
        </validation>
    </xf:instance>

    <xf:bind ref="instance('fb-schema-upload-instance')">
        <xf:bind ref="temp-type" readonly="true()"/>
    </xf:bind>

    <!-- Submission to load the components library (see also home.xhtml) -->
    <xf:submission
        id="fb-load-toolbox"
        serialization="none"
        method="get"
        resource="/fr/service/custom/orbeon/builder/toolbox?application={event('app')}&amp;form={event('form')}"
        replace="instance"
        instance="fb-components-instance"
        xxf:readonly="true"
        xxf:cache="true">

        <xf:action ev:event="xforms-submit-done">
            <!-- Annotate form when the toolbox is loaded. This is needed to ensure the XBL for section templates is updated.
                 NOTE: The data in fr-form-instance must be up to date! -->
            <xf:dispatch targetid="fr-form-model" name="fr-annotate-data">
                <xf:property name="data" value="instance('fr-form-instance')"/>
            </xf:dispatch>

            <!-- Free fr-form-instance. Leave data as unsafe. -->
            <xf:insert ref="instance('fr-form-instance')" origin="xxf:element('dummy')"/>
        </xf:action>

    </xf:submission>

    <xf:instance id="fb-components-instance">
        <!-- This contains the components available for the currently edited form -->
        <components/>
    </xf:instance>

    <!-- Instance for metadata editor -->
    <xf:instance id="fb-metadata-instance">
        <metadata valid="true">
            <mode/> <!-- edit | save-as -->
            <toolbox>
                <schema/>
                <css/>
                <pdf/>
                <edit-source/>
                <custom-xml/>
                <permissions/>
                <services>
                    <http/>
                    <database/>
                </services>
                <actions/>
            </toolbox>
        </metadata>
    </xf:instance>

    <xf:bind ref="instance('fb-metadata-instance')">
        <xf:bind ref="toolbox/schema"            relevant="xxf:property('oxf.fb.menu.schema')"/>
        <xf:bind ref="toolbox/pdf"               relevant="xxf:property('oxf.fb.menu.pdf')"/>
        <xf:bind ref="toolbox/edit-source"       relevant="xxf:property('oxf.fb.menu.edit-source')"/>
        <xf:bind ref="toolbox/custom-xml"        relevant="xxf:property('oxf.fb.menu.custom-xml')"/>
        <xf:bind ref="toolbox/permissions"       relevant="xxf:property('oxf.fb.menu.permissions')"/>
        <xf:bind ref="toolbox/services/http"     relevant="xxf:property('oxf.fb.menu.services.http')"/>
        <xf:bind ref="toolbox/services/database" relevant="xxf:property('oxf.fb.menu.services.database')"/>
        <xf:bind ref="toolbox/actions"           relevant="xxf:property('oxf.fb.menu.actions')"/>
    </xf:bind>

    <!-- Cut/copy/paste instance -->
    <xf:instance id="fb-xcv-instance">
        <xcv>
            <control/>
            <holder/>
            <resources/>
            <bind/>
            <cut-trigger/>
            <copy-trigger/>
            <paste-trigger/>
        </xcv>
    </xf:instance>
    <xf:var name="xcv" value="instance('fb-xcv-instance')"/>

    <xf:bind ref="$xcv">
        <xf:bind ref="cut-trigger" readonly="not(exists($current-td/*))"/>
        <xf:bind ref="copy-trigger" readonly="not(exists($current-td/*))"/>
        <xf:bind ref="paste-trigger" readonly="not(exists(../control/*))"/>
    </xf:bind>

</xf:model>
