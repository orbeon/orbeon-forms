dist: focal
sudo: required
language: java
jdk:
- openjdk11
env:
  global:
    # See https://docs.google.com/document/d/1MqG8OW2kLGeedzbu6vb9D00tHljVabPA2tYwh3DB9UE/edit
    - secure: duj2NzncZG+oNk8ISitO697mne1EzAajvdRjw39yevKTMdMbf6cbMa+beo/3JW8xMbGxMLovfI4zK0Bykoo98VQVJan87tLGTQVmOKGboi0sYvOeun9jXUoT66tQAEtlL48S5nNoHKyF/dRaGgPRPMkfXiPdElAU9FDklm3rwQs=
    - secure: gWPaj/3IUfFU/MGqcB6AkD3MsAlLT9uBP5YZhgCZrgHXYIvyhEH9F+it17b5ibWq+i7boSs9G8HcCRwNdaNrlcN1ONDOVRW1f3syK2+HC947/FfzHE6jnamVbEAZMYr77WgR5eeqLQRl94Q2CRa3eW/6QERM99kt5nbRo3oPT/c=
    - secure: X+82NUnipRkzqBAt4IOgVuW/kDd/m85MEExAxRAxqZ2R6ALCHRMYKpCSv47dW7qnX89EkkN8vEDQ1/5h8bnGY5i1a6b8mMVLS3tkRUtuqW9bL59TzEyVTS6hsWoNNKWL4rzqnDAXTyy4RB881ZGdkTR3nRjrmEZtbfVWLXQCQ+A=
    - secure: Ufv45EFdy9eKEjZ6Za7DAo7X/cAB16G8a9qNj+qvcCOBiZLTjXO8+1Hqj85R5dopZwYvHt0cVaIiPJ+/7z1DeQ9076g5UTdhnK+agPxMW7WPlf9QqXiIDMZbjBsmPEIjp4jF42QDjoxY/tPTsupW45yXkHCeroUAud2zwvDkb1c=
    - secure: aUeNCaFFahWf6pQGhp4PbkQu20W1trf6lvSaydNV/ktdsPCkqr3nhJoN0M0CpKM9tqIb2ELj5/E4uKgSylbS2vdhVD0ysue6QvcexpRsuD8cpzYHjSDJyNP2z534nyQzKCkYpBn04r9asN/Uh4xV90Ctz1FZNzzqV6BdRK6N4Vc=
    - secure: JNBlCeooGssOX+bxaxKX54Y4jey6HZZHJ99uY/m4HTfto4mmYotzLwusW0XI442XP4NruxHen0jsrSBII1GdjpfS3RVDE1exwiWrV3n+zTOdDLHR7WoDRkXKRFS10E6eEEDyHZPlukfQ8Dqff3Gt+VvyhCEfKZEd+IROLZPMr9U=
    - secure: ux2PYcexqnINtSThqHycgS5xZ1qHx6y50jYRkIFX6hM1ji8iYnHNm281e8WUhmWi1xzS+nrY6/DqzEicyYV2ry+P218OVLllWus3A/7X+DAVffWyoe4ezwbBFxFIyxWTro99ALby7boMT/ReAtjYYzjskLBtgudt5mkZzxQHDSM=
    - secure: SBCUP3cd+W4ELTXz8m0eFwd51F0h69vbdtThJfyU1cDVLnWvhHfREfMJcyYVAbY08Va/5dUQJPkbd5KWzDMktU4UbM4JXfDtyNq7JVcTZwtczCRSRU8LgFbdhATwkX/iTdhCpfH9sRZj/88z2Eyj4zMskWyGg996MsM5BL1sNzE=
  matrix:
    - TARGET=orbeon-dist
    - TARGET=test-unit
    - TARGET=test-db     DB=mysql
    - TARGET=test-db     DB=postgresql
    - TARGET=test-db     DB=sqlite
addons:
  postgresql: "9.5"
  artifacts:
    paths:
    - $(ls build/distrib/* | egrep -v '(embedding|proxy-portlet|xforms-filter|orbeon-auth)' | egrep -v '\-[CP]E\.(tgz|war)' | tr "\n" ":")
cache:
  directories:
  - "$HOME/.ivy2/cache"
  - "$HOME/.m2/repository"
  - "$HOME/.sbt/boot"
  - "$HOME/.sbt/launchers"
  - "$HOME/node_modules"
before_cache:
# Tricks to avoid unnecessary cache updates
- find $HOME/.ivy2 -name "ivydata-*.properties" -delete
- find $HOME/.sbt -name "*.lock" -delete
before_install:
  - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
  - sudo add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
  - sudo apt-get -y install docker-ce
  - sudo apt-get -y install ant
  - sudo sh -c '(echo "#!/usr/bin/env sh" && curl -L https://github.com/com-lihaoyi/Ammonite/releases/download/3.0.0-M0/2.13-3.0.0-M0) > /usr/local/bin/amm && chmod +x /usr/local/bin/amm'
  # Install SBT, pre-downloading the SBT launcher
  - echo "deb https://repo.scala-sbt.org/scalasbt/debian all main" | sudo tee /etc/apt/sources.list.d/sbt.list
  - echo "deb https://repo.scala-sbt.org/scalasbt/debian /" | sudo tee /etc/apt/sources.list.d/sbt_old.list
  - curl -sL "https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x2EE0EA64E40A89B84B2DF73499E82A75642AC823" | sudo -H gpg --no-default-keyring --keyring gnupg-ring:/etc/apt/trusted.gpg.d/scalasbt-release.gpg --import
  - sudo chmod 644 /etc/apt/trusted.gpg.d/scalasbt-release.gpg
  - sudo apt-get update
  - sudo apt-get install sbt
  - mkdir -p $HOME/.sbt/launchers/1.11.2
  - curl -L -o $HOME/.sbt/launchers/1.11.2/sbt-launch.jar https://repo1.maven.org/maven2/org/scala-sbt/sbt-launch/1.11.2/sbt-launch-1.11.2.jar
install:
# From https://docs.travis-ci.com/user/languages/java/: "Because there is no single standard way of installing project dependencies with Ant, you need to
# specify the exact command to run using install". Here we install npm dependencies for Node.js as we need them for integration tests.
- npm install
- nvm install 18
- nvm use 18
- |
  export SBT_OPTS="-Dfile.encoding=UTF-8"
  export NODE_OPTIONS="--no-deprecation" # Avoid warnings shown as errors running UglifyJS, to be removed when #6642 is done
before_script:
- sudo /etc/init.d/mysql stop # We use MySQL through Docker, so avoid conflict with port 3306
- if [ "$TARGET" == "test-unit"                              ]; then docker pull tomcat:8.5-jdk8-openjdk-slim; fi
- if [ "$TARGET" == "test-unit"                              ]; then docker pull kennethreitz/httpbin; fi
- if [ "$TARGET" == "test-unit"                              ]; then docker run -d --name httpbin -p 8084:80 kennethreitz/httpbin; fi
- if [ "$TARGET" == "test-db"                                ]; then echo $DOCKER_PASSWORD | docker login -u orbeon --password-stdin; fi
- if [ "$TARGET" == "test-db"   ] && [ "$DB" == "mysql"      ]; then docker run -d --name mysql -p 3306:3306 -e MYSQL_ALLOW_EMPTY_PASSWORD=yes mysql:5.7 --sql-mode=ALLOW_INVALID_DATES --character-set-server=utf8mb4 --collation-server=utf8mb4_bin; fi
- if [ "$TARGET" == "test-db"   ] && [ "$DB" == "postgresql" ]; then createuser --superuser orbeon; fi
- if [ "$TARGET" == "test-db"   ] && [ "$DB" == "postgresql" ]; then createdb --owner=orbeon orbeon; fi
script:
- if [ "$TARGET" == "orbeon-dist"                            ]; then ant orbeon-dist                  ; fi
- if [ "$TARGET" == "test-unit"                              ]; then sbt test:compile ; sbt test:test ; fi
- if [ "$TARGET" == "test-db"                                ]; then sbt test:compile ; sbt db:test   ; fi
