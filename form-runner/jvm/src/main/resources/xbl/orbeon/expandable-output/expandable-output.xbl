<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl">
    <xbl:binding id="fr-expandable-output" element="fr|expandable-output" xxbl:mode="lhha binding value">
        <xbl:resources>
            <xbl:style src="/xbl/orbeon/expandable-output/expandable-output.css"/>
        </xbl:resources>
        <xbl:implementation>
            <xf:model>
                <xf:instance>
                    <_>
                        <full-value/>
                        <short-value/>
                        <show-full/>
                        <max-characters/>
                        <tolerance/>
                    </_>
                </xf:instance>
                <xf:var
                    name="model-max-characters"
                    value="(max-characters, 0)[. castable as xs:integer][1]"/>
                <xf:var
                    name="model-tolerance"
                    value="(tolerance, 0)[. castable as xs:integer][1]"/>
                <xf:var
                    xmlns:utils="java:org.orbeon.oxf.util.StringUtils"
                    name="short-value"
                    value="utils:truncateWithEllipsis(full-value, $model-max-characters, $model-tolerance)"/>
                <xf:bind
                    ref="short-value"
                    calculate="$short-value"/>
                <xf:bind
                    ref="show-full"
                    calculate="if (string-length(../full-value) gt string-length(../short-value)) then 'false' else 'true'"/>
            </xf:model>
        </xbl:implementation>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/xbl.xsl"/>
                <xsl:template match="/*">
                    <xf:group appearance="xxf:internal">
                        <!-- Copy parameter values to state -->
                        <xf:group appearance="xxf:internal">
                            <xsl:copy-of select="xxbl:parameter(., 'max-characters')"/>
                            <xf:setvalue ev:event="xforms-enabled xforms-value-changed" ref="instance()/max-characters" value="$max-characters"/>
                        </xf:group>
                        <xf:group appearance="xxf:internal">
                            <xsl:copy-of select="xxbl:parameter(., 'tolerance')"/>
                            <xf:setvalue ev:event="xforms-enabled xforms-value-changed" ref="instance()/tolerance" value="$tolerance"/>
                        </xf:group>

                        <!-- Update local value when needed -->
                        <xf:var name="value" value="xxf:binding('fr-expandable-output')">
                            <xf:setvalue ev:event="xforms-enabled xforms-value-changed" ref="instance()/full-value" value="$value"/>
                        </xf:var>

                        <xh:span class="xbl-fr-expandable-output-output">
                            <xf:output ref="if (instance()/show-full = 'false') then instance()/short-value else instance()/full-value"/>
                            <xf:var name="full-different-than-short" value="string-length(instance()/full-value) != string-length(instance()/short-value)"/>
                            <xf:trigger ref=".[$full-different-than-short and instance()/show-full = 'false']" appearance="minimal">
                                <xf:label>Show more</xf:label>
                                <xf:setvalue ev:event="DOMActivate" ref="instance()/show-full">true</xf:setvalue>
                            </xf:trigger>
                            <xf:trigger ref=".[$full-different-than-short and instance()/show-full = 'true']" appearance="minimal">
                                <xf:label>Show less</xf:label>
                                <xf:setvalue ev:event="DOMActivate" ref="instance()/show-full">false</xf:setvalue>
                            </xf:trigger>
                        </xh:span>
                    </xf:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>