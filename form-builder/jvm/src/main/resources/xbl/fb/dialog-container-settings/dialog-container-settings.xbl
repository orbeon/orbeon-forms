<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
         xmlns:array="http://www.w3.org/2005/xpath-functions/array"
         xmlns:cell="java:org.orbeon.oxf.fr.NodeInfoCell"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
         xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilderXPathApi">

    <xbl:binding id="fb-dialog-container-settings" element="fb|dialog-container-settings" xxbl:mode="binding">
        <xbl:handlers>
            <!-- Read data upon dialog open -->
            <xbl:handler event="fb-show-dialog fb-load" phase="target" defaultAction="cancel">
                <xf:var name="form" value="xxf:binding('fb-dialog-container-settings')"/>

                <!-- Clear all local values -->
                <xf:setvalue iterate="$i//*[not(*)] | $i/*//@*" ref="."/>

                <xf:var name="control" value="event('container')"/>

                <xf:setvalue ref="$i/container-type"                 value="local-name($control)"/>
                <xf:setvalue ref="$i/original-control-name"          value="frf:getContainerNameOrEmpty($control)"/>
                <xf:setvalue ref="$i/control-name"                   value="$i/original-control-name"/>
                <xf:setvalue ref="$i/last-valid-control-name"        value="$i/original-control-name"/>

                <xf:action if="$i/container-type = 'section'">
                    <xf:setvalue ref="$i/initially-open"             value="not($control/@fb:open = 'false')"/>
                    <xf:setvalue ref="$i/collapsible"                value="(for $a in $control/@fb:collapsible return $a = 'true', 'default')[1]"/>
                </xf:action>
                <xf:action if="not($i/container-type = 'section')">
                    <xf:setvalue ref="$i/initially-open"             value="false()"/>
                    <xf:setvalue ref="$i/grid-columns"               value="if ($control/@columns = 24) then 24 else 12"/>
                    <xf:setvalue ref="$i/grid-height"                value="array:size(cell:analyze12ColumnGridAndFillHoles($control, false(), false()))"/>
                    <xf:setvalue ref="$i/can-migrate-grid-columns"   value="if ($control/@columns = 24) then fbf:canMigrateGridColumns($control, 24, 12) else fbf:canMigrateGridColumns($control, 12, 24)"/>
                    <xf:setvalue ref="$i/grid-tab-order"             value="if ($control/@tab-order = 'columns') then 'columns' else if ($control/@tab-order = 'rows') then 'rows' else 'default'"/>
                </xf:action>

                <xf:setvalue ref="$i/was-repeat"                     value="frf:isRepeat(fbf:findControlByNameOrEmpty($i/control-name))"/>
                <xf:setvalue ref="$i/is-repeat"                      value="$i/was-repeat"/>

                <xf:setvalue ref="$i/user-can-add-remove"            value="not($control/@fb:readonly = 'true')"/>
                <xf:setvalue ref="$i/number-rows"                    value="$control/@number-rows = 'true'"/>
                <xf:setvalue ref="$i/use-paging"                     value="$control/@fb:page-size = '1'"/>

                <xf:setvalue ref="$i/was-custom-iteration-name"      value="$i/was-repeat = true() and fbf:hasCustomIterationName($i/control-name)"/>
                <xf:setvalue ref="$i/is-custom-iteration-name"       value="$i/was-custom-iteration-name"/>

                <xf:setvalue ref="$i/original-custom-iteration-name" value="if ($i/was-custom-iteration-name = true()) then fbf:findRepeatIterationNameOrEmpty($form, $i/control-name) else ''"/>
                <xf:setvalue ref="$i/custom-iteration-name"          value="$i/original-custom-iteration-name"/>

                <xf:setvalue ref="$i/appearance"                     value="($control/@appearance, 'default')[1]"/>

                <xf:setvalue ref="$i/min-repeat"                     value="fbf:getNormalizedMin($form, $i/control-name)"/>
                <xf:setvalue ref="$i/max-repeat"                     value="fbf:getNormalizedMaxOrEmpty($form, $i/control-name)"/>
                <xf:setvalue ref="$i/freeze"                         value="fbf:getNormalizedFreeze($form, $i/control-name)"/>

                <xf:setvalue ref="$i/relevant"                       value="fbf:readDenormalizedCalculatedMip($i/control-name, 'relevant')"/>
                <xf:setvalue ref="$i/readonly"                       value="fbf:readDenormalizedCalculatedMip($i/control-name, 'readonly')"/>

                <xf:setvalue ref="$i/control-names"                  value="fbf:getAllNamesInUseAsString()"/>

                <xf:var name="control"                               value="fbf:findControlByNameOrEmpty($i/control-name)"/>
                <xf:var name="resources"                             value="frf:currentFormResources()"/>

                <xf:var name="standard-classes"                      value="$resources/dialog-container-settings/options/item/value/string()"/>
                <xf:var name="control-classes"                       value="xxf:split($control/@class)"/>

                <xf:setvalue ref="$i/standard-classes"               value="string-join($control-classes[. = $standard-classes], ' ')"/>
                <xf:setvalue ref="$i/custom-classes"                 value="string-join($control-classes[not(. = $standard-classes)], ' ')"/>

                <xf:setvalue ref="$i/apply-defaults"                 value="$control/@apply-defaults = 'true'"/>
                <xf:setvalue ref="$i/initial-iterations"             value="$control/@fb:initial-iterations = 'first'"/>

                <!-- Remove all namespace nodes on the root element and insert those from the external `xf:bind`. This
                     allows scoping namespaces for XPath expressions validated with `xxf:XPath2`. -->
                <xf:delete ref="$i/namespace::node()"/>
                <xf:insert context="$i" origin="fbf:findBindByNameOrEmpty($i/control-name)/namespace::node()"/>

                <!-- Read Label/Help if we are a section -->
                <xf:action iterate="$i/(label, help, short-label, iteration-label, add-iteration-label)">

                    <xf:delete ref="fr:param"/>

                    <xf:setvalue
                        ref="@supported"
                        value="$i/container-type = 'section'"/>

                    <xf:setvalue
                        ref="@isHTML"
                        value="false()"/>

                    <xf:action if="@supported = 'true'">

                        <xf:var name="lhh" value="local-name()"/>

                        <xf:setvalue
                            ref="value"
                            value="fbf:getControlLhhOrEmpty($i/control-name, $lhh)"/>

                        <xf:setvalue
                            ref="@isHTML"
                            value="if (fbf:isControlLhhatHtmlMediatype($i/control-name, $lhh)) then 'true' else ''"/>

                        <xf:insert
                            ref="value"
                            origin="fbf:getControlLhhtParams($i/control-name, $lhh)"/>
                    </xf:action>

                </xf:action>

                <!-- Set prev/next buttons -->
                <xf:setvalue
                    ref="$i/prev-control-id"
                    value="
                        fbf:findNextContainer(
                            $i/control-name,
                            'previous'
                        )/@id"/>
                <xf:setvalue
                    ref="$i/next-control-id"
                    value="
                        fbf:findNextContainer(
                            $i/control-name,
                            'next'
                        )/@id"/>

                <xxf:show
                    if="not(event('is-prev-or-next'))"
                    dialog="dialog"/>

                <!-- Focus on the dialog, as min-input and max-input might have asked for focus first and we don't
                     want them to win -->
                <xf:setfocus control="dialog"/>

                <xf:setvalue
                    ref="instance('modified')"
                    value="false()"/>

            </xbl:handler>
            <!-- Save data upon close unless the sub-form is not valid. Do this upon capture phase so that we can
                 process values, including custom control settings, before the dialog is actually closed and becomes
                 non-relevant. -->
            <xbl:handler
                event="xxforms-dialog-close"
                observer="group-around-dialog"
                phase="capture"
                if="event('fb-save') and $i/@valid = 'true'">

                <xf:dispatch
                    name="fb-save"
                    targetid="fb-dialog-container-settings"/>

            </xbl:handler>
            <xbl:handler event="fb-save" phase="target">

                <xf:action if="instance('modified') = true()">

                    <xf:var name="form" value="xxf:binding('fb-dialog-container-settings')"/>

                    <!-- NOTE: We use string() to access string value of NCName -->
                    <xf:var name="old-name"       value="$i/original-control-name/string()"/>
                    <xf:var name="new-name"       value="$i/control-name/string()"/>
                    <xf:var name="remains-repeat" value="$i/was-repeat = true() and $i/is-repeat = true()"/>

                    <xf:action type="xpath">
                        fbf:saveControlToUndoStack($old-name, $new-name)
                    </xf:action>

                    <xf:action type="xpath">
                        if ($remains-repeat) then
                            fbf:renameControlIterationIfNeeded(
                                $old-name,
                                $new-name,
                                $i/original-custom-iteration-name/string(),
                                $i/custom-iteration-name/string()
                            )
                        else
                            (),
                        fbf:renameControlIfNeeded($old-name, $new-name, false()),
                        fbf:writeAndNormalizeCalculatedMip($new-name, 'relevant', $i/relevant),
                        fbf:writeAndNormalizeCalculatedMip($new-name, 'readonly', $i/readonly),
                        fbf:setRepeatProperties(
                            $new-name,
                            $i/is-repeat = true(),
                            $i/user-can-add-remove = true(),
                            $i/number-rows = true(),
                            $i/use-paging = true(),
                            $i/min-repeat,
                            $i/max-repeat,
                            $i/freeze,
                            $i/custom-iteration-name/string(),
                            $i/apply-defaults = true(),
                            if ($i/initial-iterations = true()) then 'first' else ''
                        ),
                        for $lh in $i/(label, help, short-label, iteration-label, add-iteration-label)[@supported = 'true'] return
                            fbf:setControlLabelHintHelpOrText(
                                $i/control-name,
                                local-name($lh),
                                $lh/value,
                                $lh/fr:param,
                                $lh/@isHTML = 'true'
                            )
                    </xf:action>

                    <!-- Write classes -->
                    <xf:var name="control" value="fbf:findControlByNameOrEmpty($new-name)"/>

                    <xf:var name="classes" value="distinct-values((xxf:split($i/standard-classes), xxf:split($i/custom-classes)))"/>
                    <xf:delete if="count($classes) = 0" ref="$control/@class"/>
                    <xf:insert if="count($classes) > 0" context="$control" origin="xf:attribute('class', string-join($classes, ' '))"/>

                    <xf:action if="$i/container-type = 'section'">
                        <!-- Initially open -->
                        <xf:delete if="data($i/initially-open)"      ref="$control/@fb:open"/>
                        <xf:insert if="not(data($i/initially-open))" context="$control" origin="xf:attribute('fb:open', 'false')"/>

                        <!-- Collapsible -->
                        <xf:delete if="$i/collapsible = 'default'"      ref="$control/@fb:collapsible"/>
                        <xf:insert if="not($i/collapsible = 'default')" context="$control" origin="xf:attribute('fb:collapsible', $i/collapsible = true())"/>
                    </xf:action>
                    <xf:action if="$i/container-type = 'grid'">
                        <xf:var name="existing-columns" value="($control/@columns/xs:integer(.), 12)[1]"/>
                        <xf:var name="new-columns"      value="$i/grid-columns"/>
                        <xf:action if="$existing-columns != $new-columns">
                            <xf:action type="xpath">
                                fbf:migrateGridColumns($control, $existing-columns, $new-columns)
                            </xf:action>
                            <xf:delete if="$new-columns = 12" ref="$control/@columns"/>
                            <xf:insert if="$new-columns = 24" context="$control" origin="xf:attribute('columns', $new-columns)"/>
                        </xf:action>

                        <!-- Tab order -->
                        <xf:var name="grid-tab-order" value="$i/grid-tab-order"/>
                        <xf:delete if="$grid-tab-order  = 'default'"     ref="$control/@tab-order"/>
                        <xf:insert if="not($grid-tab-order = 'default')" context="$control" origin="xf:attribute('tab-order', $i/grid-tab-order)"/>
                    </xf:action>

                    <xf:delete if="$i/appearance = 'default'"      ref="$control/@appearance"/>
                    <xf:insert if="not($i/appearance = 'default')" context="$control" origin="xf:attribute('appearance', $i/appearance/string())"/>

                </xf:action>

            </xbl:handler>
            <xbl:handler event="DOMActivate" observer="control-name-input save-button prev-button next-button">

                <xf:action if="$i/@valid = 'true'">
                    <xf:var
                        name="must-close"
                        value="not(event('xxf:targetid') = ('prev-button', 'next-button'))"/>

                    <xxf:hide if="$must-close" dialog="dialog">
                        <xf:property name="fb-save" value="true()"/>
                    </xxf:hide>

                    <xf:dispatch
                        if="not($must-close)"
                        name="fb-save"
                        targetid="fb-dialog-container-settings"/>
                </xf:action>

                <!-- Mark all visited if the data is invalid -->
                <xxf:setvisited
                    if="not($i/@valid = 'true')"
                    control="dialog"
                    recurse="true"/>
            </xbl:handler>
            <!-- Renaming of internal control references -->
            <xbl:handler
                event="xforms-value-changed"
                observer="control-name-input"
                if="empty(event('xxf:level'))">

                <!-- Rename references in all local formulas -->
                <xf:action type="xpath">
                    fbf:renameControlReferences(
                        (: All values that can be XPath expressions :)
                        $i/(
                            relevant   |
                            readonly   |
                            min-repeat |
                            max-repeat |
                            freeze
                        ),
                        false(),
                        $i/last-valid-control-name,
                        event('xxf:value')
                    )
                </xf:action>

                <xf:setvalue
                    ref="$i/last-valid-control-name"
                    value="event('xxf:value')"/>

            </xbl:handler>
            <!-- Prev and Next buttons -->
            <xbl:handler event="DOMActivate" observer="prev-button next-button" if="$i/@valid = 'true'">

                <xf:var
                    name="new-control-id"
                    value="
                        $i/(
                            if (event('xxf:targetid') = 'prev-button') then
                                prev-control-id
                            else
                                next-control-id
                        )/string()"/>

                <xf:dispatch if="exists($new-control-id)" name="fb-load" targetid="fb-dialog-container-settings">
                    <xf:property name="container"       value="fbf:containerById($new-control-id)"/>
                    <xf:property name="is-prev-or-next" value="true()"/>
                </xf:dispatch>

            </xbl:handler>
            <!-- Close and cancel upon DOMActivate -->
            <xbl:handler event="DOMActivate" observer="cancel-button">
                <xxf:hide dialog="dialog">
                    <xf:property name="fb-save" value="false()"/>
                </xxf:hide>
            </xbl:handler>
        </xbl:handlers>
        <xbl:implementation>

            <xf:model id="model">

                <xf:instance id="i" xxf:exclude-result-prefixes="#all">
                    <_ valid="true">
                        <container-type/>

                        <original-control-name/>
                        <control-name/>
                        <last-valid-control-name/>

                        <!-- Sections only -->
                        <initially-open/>
                        <collapsible/>

                        <!-- Grids only -->
                        <grid-columns/>
                        <grid-height/>
                        <can-migrate-grid-columns/>
                        <grid-tab-order/>

                        <standard-classes/>
                        <custom-classes/>

                        <relevant/>
                        <readonly/>

                        <was-repeat/>
                        <is-repeat/>

                        <user-can-add-remove/>
                        <number-rows/>
                        <use-paging/>

                        <was-custom-iteration-name/>
                        <is-custom-iteration-name/>

                        <original-custom-iteration-name/>
                        <custom-iteration-name/>

                        <apply-defaults/>
                        <initial-iterations/>

                        <appearance/>

                        <min-repeat/>
                        <max-repeat/>
                        <freeze/>

                        <control-names/>         <!-- All used control names in the form, to check that new name doesn't conflict with existing id -->

                        <save-button/>

                        <label isHTML="" supported="">
                            <value/>
                            <!--<fr:param/>-->
                        </label>
                        <help  isHTML="" supported="">
                            <value/>
                            <!--<fr:param/>-->
                        </help>
                        <short-label isHTML="" supported="">
                            <value/>
                            <!--<fr:param/>-->
                        </short-label>
                        <iteration-label isHTML="" supported="">
                            <value/>
                            <!--<fr:param/>-->
                        </iteration-label>
                        <add-iteration-label isHTML="" supported="">
                            <value/>
                            <!--<fr:param/>-->
                        </add-iteration-label>

                        <prev-control-id/>
                        <next-control-id/>
                    </_>
                </xf:instance>

                <xf:var name="i" value="instance()"/>

                <xf:instance id="modified">
                    <modified/>
                </xf:instance>

                <xf:setvalue
                    event="xforms-insert xforms-delete xxforms-replace xxforms-value-changed"
                    observer="i"
                    ref="instance('modified')"
                    value="true()"/>

                <xf:var
                    name="control-names"
                    value="xxf:split($i/control-names)"/>

                <xf:bind
                    ref="control-name"
                    type="xs:NCName"
                    xxf:whitespace="trim"
                    readonly="false()"
                    required="true()"
                    constraint="
                        . = $i/original-control-name or
                        not(
                            ends-with(., '-iteration') or
                            $control-names = . or
                            $control-names = concat(., '-content')
                        )"/>

                <xf:bind
                    ref="relevant | readonly"
                    type="xxf:XPath2"
                    required="false()"
                    constraint="not(fbf:hasUnresolvedVariableReferences(., false(), $i/original-control-name, $i/control-name))"/>

                <xf:bind
                    ref="initially-open"
                    type="xs:boolean"
                    relevant="true()"
                    readonly="$i/container-type = 'grid' or ../collapsible = 'false'"
                    calculate="if (../collapsible = 'false') then 'true' else ."/>

                <xf:bind
                    ref="grid-columns"
                    relevant="true()"
                    readonly="$i/container-type = 'section' or ../can-migrate-grid-columns = 'false'"/>

                <xf:bind
                    ref="grid-height"
                    relevant="true()"
                    readonly="$i/container-type = 'section'"/>

                <xf:bind
                    ref="grid-tab-order"
                    relevant="true()"
                    readonly="$i/container-type = 'section'"/>

                <xf:bind
                    ref="collapsible"
                    readonly="$i/container-type = 'grid'"/>

                <xf:bind
                    ref="
                        was-repeat | is-repeat | user-can-add-remove | number-rows | use-paging |
                        was-custom-iteration-name | is-custom-iteration-name | apply-defaults | initial-iterations"
                    type="xs:boolean"
                    xxf:default="false()"/>

                <xf:bind
                    ref="use-paging"
                    readonly="$i/container-type = 'grid' or $i/user-can-add-remove = true()"/>

                <xf:bind
                    ref="custom-iteration-name"
                    type="xf:NCName"
                    xxf:whitespace="trim"
                    readonly="$i/is-custom-iteration-name = false()"
                    required="$i/is-custom-iteration-name = true()"
                    constraint="
                        $i/is-custom-iteration-name = false() or
                        . = $i/original-custom-iteration-name or
                        not(. = $control-names)"/>

                <!-- Use `xxf:XPath2` as integer values are also XPath expressions! -->
                <xf:bind
                    ref="min-repeat | max-repeat | freeze"
                    type="xxf:XPath2"
                    readonly="../user-can-add-remove = false()"
                    constraint="not(fbf:hasUnresolvedVariableReferences(., false(), $i/original-control-name, $i/control-name))"
                    xxf:whitespace="trim"/>

                <xf:bind
                    ref="min-repeat | freeze"
                    required="../is-repeat = true()"
                    constraint="
                        ../is-repeat = false()               or
                        not(string() castable as xs:integer) or
                        xs:integer(.) ge 0"/>

                <xf:bind
                    ref="max-repeat"
                    constraint="
                        ../is-repeat = false()               or
                        not(string() castable as xs:integer) or
                        xs:integer(.) ge 1"/>

                <xf:bind
                    ref="max-repeat"
                    constraint="
                        ../is-repeat = false() or
                        not(
                            string() castable as xs:integer and
                            string(../min-repeat) castable as xs:integer
                        ) or
                        (xs:integer(.) ge xs:integer(../min-repeat))"/>

                <xf:bind
                    ref="freeze"
                    constraint="
                        ../is-repeat = false() or
                        (
                            not(
                                string() castable as xs:integer and
                                string(../min-repeat) castable as xs:integer
                            ) or
                            (xs:integer(.) le xs:integer(../min-repeat))
                        ) and (
                            not(
                                string() castable as xs:integer and
                                string(../max-repeat) castable as xs:integer
                            ) or
                            (xs:integer(.) le xs:integer(../max-repeat))
                        )"/>

                <xf:bind
                    ref="prev-control-id, next-control-id"
                    readonly="xxf:is-blank()"/>

                <xf:bind
                    ref="label | help | short-label | iteration-label | add-iteration-label"
                    readonly="not(@supported = 'true')"/>

                <!-- We could do this but the issue is that things will look inconsistent when switching between repeated and
                     non-repeated in the settings until the changes are saved. -->
<!--                <xf:bind-->
<!--                    ref="iteration-label"-->
<!--                    readonly="../is-repeat = false()"/>-->

                <xf:bind
                    ref="(label | help)/value"
                    xxf:whitespace="trim"/>

            </xf:model>
        </xbl:implementation>
        <xbl:template>
            <xf:group id="group-around-dialog" appearance="xxf:internal">

                <!-- Bindings specified on control -->
                <xf:var name="resources"><xxf:value value=". treat as element()" xxbl:scope="outer" xbl:attr="model context ref=resources-ref"/></xf:var>

                <!-- Actual dialog -->
                <xxf:dialog id="dialog" appearance="full" level="modal" class="fb-dialog-container-settings">
                    <xf:label ref="$resources/dialog-container-settings/label"/>

                    <fr:tabbable id="fb-tabbable">
                        <fr:tab id="base-tab">
                            <fr:label ref="$resources/dialog-container-settings/tab-base/label"/>

                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xf:input ref="control-name" incremental="true" id="control-name-input">
                                            <xf:label ref="$resources/dialog-container-settings/control-name/label"/>
                                            <xf:alert ref="$resources/dialog-container-settings/control-name/alert"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/control-name/hint"/>
                                        </xf:input>
                                    </xh:td>
                                    <xh:td colspan="1">
                                        <xf:select1 appearance="full xxf:horizontal" ref="grid-columns">
                                            <xf:label ref="$resources/dialog-container-settings/grid-columns/label"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/grid-columns/hint"/>
                                            <xf:item>
                                                <xf:label>12</xf:label>
                                                <xf:value>12</xf:value>
                                            </xf:item>
                                            <xf:item>
                                                <xf:label>24</xf:label>
                                                <xf:value>24</xf:value>
                                            </xf:item>
                                        </xf:select1>
                                    </xh:td>
                                    <xh:td colspan="1">
                                        <xf:output appearance="full xxf:horizontal" ref="grid-height">
                                            <xf:label ref="$resources/dialog-container-settings/grid-rows/label"/>
                                        </xf:output>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td colspan="2"/>
                                    <xh:td colspan="2">
                                        <xf:select1 appearance="full xxf:horizontal" ref="grid-tab-order">
                                            <xf:label ref="$resources/dialog-container-settings/grid-tab-order/label"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/grid-tab-order/hint"/>
                                            <xf:itemset ref="$resources/dialog-container-settings/grid-tab-order/item">
                                                <xf:label ref="."/>
                                                <xf:value ref="if (@id = 0) then 'default' else if (@id = 1) then 'rows' else 'columns'"/>
                                            </xf:itemset>
                                        </xf:select1>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <fr:checkbox-input ref="initially-open">
                                            <xf:label ref="$resources/dialog-container-settings/options/item[value = 'fr-initially-open']/label"/>
                                        </fr:checkbox-input>
                                        <xf:select ref="$i/standard-classes" appearance="full" class="fb-standard-classes">
                                            <xf:label ref="$resources/dialog-container-settings/options/label" class="xforms-hidden"/>
                                            <xf:itemset ref="$resources/dialog-container-settings/options/item[value != 'fr-initially-open']">
                                                <xf:label ref="label"/>
                                                <xf:value ref="value"/>
                                            </xf:itemset>
                                        </xf:select>
                                    </xh:td>
                                    <xh:td colspan="2">
                                        <xf:select1 ref="collapsible" appearance="full xxf:horizontal">
                                            <xf:label ref="$resources/dialog-container-settings/collapsible/label"/>
                                            <xf:itemset ref="$resources/default-always-never/item">
                                                <xf:label ref="."/>
                                                <xf:value ref="if (@id = 0) then 'default' else if (@id = 1) then 'true' else 'false'"/>
                                            </xf:itemset>
                                        </xf:select1>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td colspan="4">
                                        <xf:input ref="$i/custom-classes">
                                            <xf:label ref="$resources/classes/label"/>
                                        </xf:input>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <fb:boolean-or-formula ref="relevant" resources-ref="$resources">
                                            <xf:label ref="$resources/dialog-container-settings/visibility/label"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/visibility/hint"/>
                                        </fb:boolean-or-formula>
                                    </xh:td>
                                    <xh:td colspan="2">
                                        <fb:boolean-or-formula ref="readonly" resources-ref="$resources">
                                            <xf:label ref="$resources/dialog-container-settings/readonly/label"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/readonly/hint"/>
                                        </fb:boolean-or-formula>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </fr:tab>
                        <fr:tab id="repeat-tab">
                            <fr:label ref="$resources/dialog-container-settings/tab-repeat/label"/>

                            <fr:grid id="repeat-tab-grid-1">
                                <xh:tr>
                                    <xh:td>
                                        <!-- Repeat -->
                                        <fr:checkbox-input ref="is-repeat">
                                            <xf:label ref="$resources/dialog-container-settings/repeat/label"/>
                                            <xf:hint  ref="$resources/dialog-container-settings/repeat/hint"/>

                                            <!-- Reset dependent values upon value change -->
                                            <xf:action event="xforms-value-changed">
                                                <xf:setvalue ref="$i/is-custom-iteration-name" value="false()"/>
                                                <xf:setvalue ref="$i/custom-iteration-name"    value="''"/>
                                                <xf:setvalue ref="$i/min-repeat"               value="1"/>
                                                <xf:setvalue ref="$i/max-repeat"               value="''"/>
                                                <xf:setvalue ref="$i/freeze"                   value="0"/>
                                                <xf:setvalue ref="$i/apply-defaults"           value="true()"/>
                                                <xf:setvalue ref="$i/initial-iterations"       value="true()"/>
                                            </xf:action>

                                        </fr:checkbox-input>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>

                            <xf:group ref=".[is-repeat = true()]">
                                <fr:grid id="repeat-tab-grid-2">
                                    <xh:tr>
                                        <xh:td>
                                            <fr:checkbox-input ref="$i/user-can-add-remove" appearance="full" id="user-can-add-remove">
                                                <xf:label value="$resources/dialog-container-settings/user-can-add-remove/label"/>
                                            </fr:checkbox-input>
                                        </xh:td>
                                        <xh:td>
                                            <fr:checkbox-input ref="$i/number-rows" appearance="full" id="number-rows">
                                                <xf:label value="$resources/dialog-container-settings/number-rows/label"/>
                                            </fr:checkbox-input>
                                        </xh:td>
                                    </xh:tr>
                                    <xh:tr>
                                        <xh:td>
                                            <xf:select1 ref="$i/min-repeat" appearance="full" id="min-repeat">
                                                <xf:label value="$resources/dialog-container-settings/min/label"/>
                                                <xf:item>
                                                    <xf:label value="$resources/dialog-container-settings/no-minimum"/>
                                                    <xf:value>0</xf:value>
                                                </xf:item>
                                                <xf:item>
                                                    <xf:label value="$resources/dialog-container-settings/one"/>
                                                    <xf:value>1</xf:value>
                                                </xf:item>
                                                <xf:itemset ref=".">
                                                    <xf:label value="$resources/dialog-container-settings/other"/>
                                                    <xf:value value="if (string() = ('0', '1')) then '' else ."/>
                                                </xf:itemset>
                                            </xf:select1>
                                            <xf:input ref="$i/min-repeat[not(string() = ('0', '1'))]" id="min-input">
                                                <xf:alert ref="$resources/dialog-container-settings/min/alert"/>
                                                <xf:hint ref="$resources/dialog-container-settings/min/hint"/>

                                                <!-- Focus when enabled. Upon initial enabled, xxforms-dialog-open will override this -->
                                                <xf:setfocus ev:event="xforms-enabled" control="min-input"/>
                                            </xf:input>
                                        </xh:td>
                                        <xh:td>
                                            <xf:select1 ref="$i/max-repeat" appearance="full" id="max-repeat">
                                                <xf:label value="$resources/dialog-container-settings/max/label"/>
                                                <xf:item>
                                                    <xf:label value="$resources/dialog-container-settings/unlimited"/>
                                                    <xf:value/>
                                                </xf:item>
                                                <xf:itemset ref=".">
                                                    <xf:label value="$resources/dialog-container-settings/other"/>
                                                    <xf:value value="if (string() = '') then '1' else ."/>
                                                </xf:itemset>
                                                <!-- Focus on max-input when Other is selected -->
                                                <xf:setfocus ev:event="xforms-select" if="event('xxf:item-value') = '1'" control="max-input"/>
                                            </xf:select1>
                                            <xf:input ref="$i/max-repeat[not(string() = '')]" id="max-input">
                                                <xf:alert ref="$resources/dialog-container-settings/max/alert"/>
                                                <xf:hint ref="$resources/dialog-container-settings/max/hint"/>

                                                <!-- Focus when enabled. Upon initial enabled, xxforms-dialog-open will override this -->
                                                <xf:setfocus ev:event="xforms-enabled" control="max-input"/>
                                            </xf:input>
                                        </xh:td>
                                    </xh:tr>
                                    <xh:tr>
                                        <xh:td>
                                            <xf:select1 ref="$i/freeze" appearance="full" id="freeze">
                                                <xf:label value="$resources/dialog-container-settings/freeze/label"/>
                                                <xf:item>
                                                    <xf:label value="$resources/dialog-container-settings/no-freeze"/>
                                                    <xf:value>0</xf:value>
                                                </xf:item>
                                                <xf:item>
                                                    <xf:label value="$resources/dialog-container-settings/one"/>
                                                    <xf:value>1</xf:value>
                                                </xf:item>
                                                <xf:itemset ref=".">
                                                    <xf:label value="$resources/dialog-container-settings/other"/>
                                                    <xf:value value="if (string() = ('0', '1')) then '' else ."/>
                                                </xf:itemset>
                                            </xf:select1>
                                            <xf:input ref="$i/freeze[not(string() = ('0', '1'))]" id="freeze-input">
                                                <xf:alert ref="$resources/dialog-container-settings/freeze/alert"/>
                                                <xf:hint ref="$resources/dialog-container-settings/freeze/hint"/>

                                                <!-- Focus when enabled. Upon initial enabled, xxforms-dialog-open will override this -->
                                                <xf:setfocus ev:event="xforms-enabled" control="freeze-input"/>
                                            </xf:input>
                                        </xh:td>
                                        <xh:td>
                                            <xf:select1 ref="appearance" appearance="full xxf:horizontal">
                                                <xf:label ref="$resources/dialog-container-settings/appearance-minimal/label"/>
                                                <xf:hint  ref="$resources/dialog-container-settings/appearance-minimal/hint"/>
                                                <xf:itemset ref="$resources/default-always-never/item">
                                                    <xf:label ref="."/>
                                                    <xf:value ref="if (@id = 0) then 'default' else if (@id = 1) then 'minimal' else 'full'"/>
                                                </xf:itemset>
                                            </xf:select1>
                                        </xh:td>
                                    </xh:tr>
                                    <xh:tr>
                                        <xh:td colspan="1">
                                            <fr:checkbox-input ref="apply-defaults">
                                                <xf:label ref="$resources/dialog-container-settings/apply-defaults/label"/>
                                            </fr:checkbox-input>
                                        </xh:td>
                                        <xh:td colspan="1">
                                            <fr:checkbox-input ref="initial-iterations">
                                                <xf:label ref="$resources/dialog-container-settings/initial-iterations/label"/>
                                            </fr:checkbox-input>
                                        </xh:td>
                                    </xh:tr>

                                    <xh:tr>
                                        <xh:td>
                                            <fr:checkbox-input ref="use-paging">
                                                <xf:label ref="$resources/dialog-container-settings/use-paging/label"/>
                                            </fr:checkbox-input>
                                        </xh:td>
                                        <xh:td>
                                            <fr:checkbox-input ref="is-custom-iteration-name">
                                                <xf:label ref="$resources/dialog-container-settings/custom-iteration-name/label"/>
                                                <xf:hint  ref="$resources/dialog-container-settings/custom-iteration-name/hint"/>

                                                <!-- Reset dependent values upon value change -->
                                                <xf:action event="xforms-value-changed">
                                                    <xf:setvalue ref="$i/custom-iteration-name" value="''"/>
                                                </xf:action>
                                            </fr:checkbox-input>
                                            <xf:input ref="custom-iteration-name" incremental="true" >
                                                <xf:label ref="$resources/dialog-container-settings/iteration-name/label" class="xforms-hidden"/>
                                                <xf:hint  ref="$resources/dialog-container-settings/iteration-name/hint"/>
                                                <xf:alert ref="$resources/dialog-container-settings/iteration-name/alert"/>
                                            </xf:input>
                                        </xh:td>
                                    </xh:tr>
                                </fr:grid>
                            </xf:group>
                        </fr:tab>

                        <fr:tab id="label-help-tab" ref="(label, help, short-label, iteration-label, add-iteration-label)[true() or @supported = 'true']">
                            <fr:label
                                ref="
                                    $resources/dialog-control-settings/*[
                                        name() = concat('control-', local-name(context()))
                                    ]/label"/>

                            <xf:var
                                name="lhh"
                                value="local-name(context())"/>

                            <xf:var
                                name="resource"
                                value="
                                    $resources/dialog-control-settings/*[
                                        name() = concat('control-', $lhh)
                                    ]"/>

                            <fr:grid>
                                <fr:c x="1" y="1" w="12">
                                    <fr:checkbox-input ref="@isHTML">
                                        <xf:label ref="$resources/dialog-control-settings/use-html"/>
                                    </fr:checkbox-input>
                                    <xf:var name="is-html" value="@isHTML = 'true'"/>
                                    <xf:input ref=".[not($is-html) and $lhh = ('label', 'hint')]/value">
                                        <xf:label ref="$resource/label"/>
                                        <xf:hint  ref="$resource/hint"/>
                                    </xf:input>
                                    <xf:textarea ref=".[not($is-html) and not($lhh = ('label', 'hint'))]/value">
                                        <xf:label ref="$resource/label"/>
                                        <xf:hint  ref="$resource/hint"/>
                                    </xf:textarea>
                                    <fr:tinymce ref=".[$is-html]/value">
                                        <xf:label ref="$resource/label"/>
                                        <xf:hint  ref="$resource/hint"/>
                                    </fr:tinymce>
                                </fr:c>
                                <fr:c x="1" y="2" w="12">
                                    <fb:parameters-editor ref="." resources-ref="$resources" form-runner-links="true">
                                        <xf:label ref="$resources/dialog-control-settings/parameters"/>
                                    </fb:parameters-editor>
                                </fr:c>
                            </fr:grid>

                        </fr:tab>

                    </fr:tabbable>

                    <fr:error-summary id="error-summary" observer="fb-tabbable" valid-ref="$i/@valid">
                        <fr:label><xf:output value="xxf:r('errors.label', '|fr-form-resources|')"/></fr:label>
                    </fr:error-summary>

                    <xh:div class="fr-dialog-buttons">
                        <xh:div class="pull-left">
                            <xf:trigger id="prev-button" ref="$i/prev-control-id">
                                <xf:label ref="xxf:r('buttons.previous', '|fr-fr-resources|')"/>
                            </xf:trigger>
                            <xf:trigger id="next-button" ref="$i/next-control-id">
                                <xf:label ref="xxf:r('buttons.next', '|fr-fr-resources|')"/>
                            </xf:trigger>
                        </xh:div>
                        <xf:trigger ref="save-button" id="save-button" appearance="xxf:primary">
                            <xf:label ref="$resources/apply/label"/>
                        </xf:trigger>
                        <xf:output value="$resources/or/label"/>
                        <xf:trigger appearance="minimal" id="cancel-button">
                            <xf:label ref="$resources/cancel/label"/>
                        </xf:trigger>
                    </xh:div>
                </xxf:dialog>
            </xf:group>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
