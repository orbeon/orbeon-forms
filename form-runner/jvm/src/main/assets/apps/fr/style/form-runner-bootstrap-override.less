// Copyright (C) 2012 Orbeon, Inc.
//
// This program is free software; you can redistribute it and/or modify it under the terms of the
// GNU Lesser General Public License as published by the Free Software Foundation; either version
// 2.1 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Lesser General Public License for more details.
//
// The full text of the license is available at http://www.gnu.org/copyleft/lesser.html

@import (reference) "form-runner-common";

body.orbeon {
    margin: 0;
    background-color: @bodyBackground;
}

.orbeon {
    font-family: @frBaseFontFamily;
    font-size: @frFontSize;         // Use our own preferred font size
    line-height: @baseLineHeight;
    color: @textColor;

    body& {
        .container, .container-fluid {
            &.fr-view {
                padding-top: 62px; // to match BS5 landing page
            }
        }
    }

    label, button, .btn  {
        font-size: @frLabelSize;
    }

    .btn-link[disabled] {
        cursor: default;
    }

    a {
        text-decoration: underline;     // Don't remove the underline for anchors; this is an important web convention
    }

    .alert {
        margin-bottom: @baseLineHeight / 2;
        padding: 8px 1em; // not sure why BS2 has different left/right padding

        // Increase contract for accessibility
        color            : @gray;
        background-color : @white;
        border           : 1px solid #e3e3e3;
    }

    .row, .row-fluid [class*="span"] {
        &:empty {
            display: none;
        }
        min-height: 1px; // Bootstrap has 30px, which is different from `.row` where it is 1px
    }

    .navbar, .navbar-inverse {

        &.navbar-fixed-top .container {
            width: auto;
        }

        .navbar-inner {

            background-image: none;

            border: none;
            border-radius: 0;

            .container {
                h1 {
                    margin: 0 0 0 15px;                 // Space between image and title
                    padding: 0;
                    font-size: 1.75em;
                    font-weight: @frNavBarFontWeight;
                    text-shadow: none;
                    text-decoration: none;
                    display: inline;
                }
            }
        }
        margin: 10px 0;                 // Space before and after the navbar
    }

    .navbar-inverse {
        .navbar-inner {

            // No gradient to match Bootstrap 5
            color: rgb(33, 37, 41); // temporary, copied from the default Bootstrap 5 theme
            background-color: rgb(33, 37, 41); // temporary, copied from the default Bootstrap 5 theme

            .container {
                h1 {
                    color: @frNavBarTextColor;
                }
                i {
                    color: white;
                }
            }
        }
    }

    // For fields and wrapping, see also:
    //
    // - https://github.com/orbeon/orbeon-forms/issues/1822
    // - https://github.com/orbeon/orbeon-forms/issues/3804
    // - https://github.com/orbeon/orbeon-forms/issues/3583
    // - https://github.com/orbeon/orbeon-forms/issues/4004

    // For now `.xforms-field` means "show this as a field, meaning with a border". So we only
    // cover field-ish aspects here.
    // See https://github.com/orbeon/orbeon-forms/issues/4004
    .xforms-field {
        background-color: darken(@inputBackground, 5%);
        cursor: not-allowed;

        .focusHighlight();
    }

    // This applies to fields, but also to the minimal appearance which doesn't show a border but acts as a textbox
    // See also `.uneditable-input`.
    .xforms-field,
    .xforms-output.xforms-output-appearance-minimal output[role = textbox],
    .xforms-output.xforms-static output
    {

        display: inline-block;
        box-sizing: border-box;         // So width: 100% works with the padding added by Bootstrap
        width: 100%;

        padding: 4px 6px;
        margin-bottom: 0;               // Override default 9px bottom margin added by Bootstrap

        line-height: @baseLineHeight;
        font-size: @frFontSize;         // Use our own preferred font size

        color: black;                   // Make text inside the fields stand out, as this is the most important information
        background-image: none;         // Liferay adds background images which don't mix well with Bootstrap

        // Let content wrap otherwise the user has no option to see the content
        white-space: normal;
        overflow-wrap: break-word;
        // https://github.com/orbeon/orbeon-forms/issues/5716
        word-wrap: break-word; // keep also `word-wrap`, even if it's deprecated in favor of `overflow-wrap`, for the PDF renderer

        min-height: @controlsHeight;
        height: auto;
    }

    select,
    textarea,
    input[type="text"],             // Like Bootstrap, use all the specific types to exclude checkbox/radio
    input[type="password"],
    input[type="datetime"],
    input[type="datetime-local"],
    input[type="date"],
    input[type="month"],
    input[type="time"],
    input[type="week"],
    input[type="number"],
    input[type="email"],
    input[type="url"],
    input[type="search"],
    input[type="tel"],
    input[type="color"],
    .uneditable-input {                 // NOTE: .uneditable-input is removed from Bootstrap 3
        font-size: @frFontSize;         // Use our own preferred font size
        margin-bottom: 0;               // Override default 9px bottom margin added by Bootstrap
        color: black;                   // Make text inside the fields stand out, as this is the most important information
        box-sizing: border-box;         // So width: 100% works with the padding added by Bootstrap
        height: @controlsHeight;
        background-image: none;         // Liferay adds background images which don't mix well with Bootstrap

        background-color: @inputBackground;
        .focusHighlight();
    }

    input, button, select, textarea {
        font-family: @frBaseFontFamily;
    }

    // Follow BS5 styling
    input[type="radio"],
    input[type="checkbox"] {
        appearance: none;
        width: 1em;
        height: 1em;
        border: 1px solid rgba(0,0,0,.25);
        background-color: #fff;
        background-repeat: no-repeat;
        background-position: center;
        background-size: contain;
        -webkit-print-color-adjust: exact;
        &:checked {
            background-color: @btnPrimaryBackground;
            border-color: @btnPrimaryBackground;
        }
    }

    // Follow BS5 styling
    input[type="radio"] {
        border-radius: 50%;
        &:checked {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='-4 -4 8 8'%3e%3ccircle r='2' fill='%23fff'/%3e%3c/svg%3e");
        }
    }

    // Follow BS5 styling
    input[type="checkbox"] {
        border-radius: 25%;
        &:checked {
            background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='M6 10l3 3l6-6'/%3e%3c/svg%3e");
        }
    }

    // Focus on checkboxes and radio buttons
    select:focus,
    input[type="file"]:focus,
    input[type="radio"]:focus,
    input[type="checkbox"]:focus {
        .focusDecorations();
    }

    // For example "Selected" button on the Summary/Admin pages
    .btn-group .btn {
        .focusHighlightGroup();
    }

    .xforms-output label {
        cursor: default;
    }

    // Liferay adds background images which don't mix well with Bootstrap
    input[type="submit"],
    input[type="reset"],
    input[type="button"] {
        background-image: none;
        &:hover {
            background-image: none;
        }
    }

    input[type="file"] {
        height: auto;                   // Don't specify a height because with FF the button is not native
        line-height: normal;            // Fix alignment of the "Choose file" button and "No file chosen" text on Chrome

        // Reset these as Liferay adds its own stuff and we don't look good
        //border: 0 none;               // If specified, field is not native with FF
        background-image: none;
        background-color: none;         // So that with FF field is native
        padding: 0;
    }

    // Don't set height for textarea
    textarea {
        height: @textareaHeight;
    }

    label.radio, label.checkbox {
        margin-bottom: @controlsBottomMargin;
        input[type="radio"],
        input[type="checkbox"] {
            margin-top: 3px;    // override Bootstrap
            &[disabled] {
                // BS5 style for disabled
                pointer-events: none;
                filter: none;
                opacity: .5;
            }
        }
    }

    input, textarea {
        &[readonly] {
          background-color: darken(@inputBackground, 5%);
        }
    }

    select[multiple],
    .xforms-select1-appearance-compact select,
    .xforms-select-appearance-compact select {
        height: @multipleSelectHeight;
    }

    // Adapt pagination to use of xf:trigger
    .pagination {
        margin: 0;
        ul {
            display: block;
            box-shadow: none;
            & > li {
                & > .xforms-trigger { cursor: pointer }
                & > .xforms-trigger.xforms-readonly { cursor: auto; }
                .btn-link { text-decoration: none; }

                // NOTE: Updated for Bootstrap 2.3.2
                // 2022-12-28: Made smaller
                > .btn-link, > span {
                    padding: 5px 8px;
                }

                // Reset rules that can be applied by external Bootstrap .pagination a rule
                span .btn-link {
                    padding: 0;
                    border: none;
                    line-height: normal;
                }

                // Otherwise there is imbalance between the top and bottom
                .fa {
                    display: block;
                }
            }
        }
    }

    .input-append, .input-prepend {
        margin-bottom: 0;                   // Not sure why Bootstrap adds a @baseLineHeight / 2 margin here
        .add-on {
            height: @baseLineHeight - 2px;
        }
    }

    .input-prepend {
        input,
        input.xforms-group[role = group][tabindex] {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
        .add-on {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
    }

    .input-append {
        input:not([type = "date"]),
        input.xforms-group[role = group][tabindex]:not([type = "date"]) {
            border-top-right-radius: 0;
            border-bottom-right-radius: 0;
        }
        .add-on {
            border-top-left-radius: 0;
            border-bottom-left-radius: 0;
        }
    }


    .fr-grid tr th .xforms-label {
        margin: 0;                          //  No margin on label inside table headers as they are not next to a control
    }

    .table {
        margin: 0;                          // Bootstrap adds a bottom margin of 20px
        th {
            font-weight: normal;            // Set to bold in Bootstrap
        }
    }

    // Used in Form Builder in particular and we probably never want the humongous legends anywhere
    fieldset {
        padding-left: 0;
        padding-right: 0;

        &> legend {
            line-height: inherit;
            font-size: @frFontSize;
            margin-bottom: 10px;
        }
    }

    // Style static readonly plain text and rich text the same as Bootstrap's pre (see code.less)
    .fr-grid .xforms-static.xforms-readonly {
        &.xforms-textarea pre {
            color: @grayDark;
            display: block;
            padding: (@baseLineHeight - 1) / 2; // We override these in form-runner-base.less, do we need this here?
            margin: 0 0 @baseLineHeight / 2;    // We override these in form-runner-base.less, do we need this here?
            font-size: @baseFontSize - 1;       // 14px to 13px
            line-height: @baseLineHeight;
            background-color: darken(@inputBackground, 5%);
            border: 1px solid @inputBorder;
            border-radius: @inputBorderRadius;
        }

        // See https://github.com/orbeon/orbeon-forms/issues/3988
        // Use `:not(.xforms-text)` above instead once supported by the PDF renderer.
        // `.xforms-text` is for the Explanatory Text control
        &.xforms-output.xforms-mediatype-text-html.xforms-text {
            color: @textColor;
            padding: 0;
            margin: 0;
            background-color: @bodyBackground;
            border: none;
        }
    }

    // Force white icons
    .btn-danger,
    .btn-warning,
    .btn-primary,
    .btn-inverse,
    .xforms-trigger-appearance-xxforms-danger,
    .xforms-trigger-appearance-xxforms-warning,
    .xforms-trigger-appearance-xxforms-primary,
    .xforms-trigger-appearance-xxforms-inverse {

        i[class ^= "icon-"] {
            background-image: url(bootstrap/img/glyphicons-halflings-white.png);
        }

        i.fa {
            color: white;
        }

    }

    // Make disabled icons a bit opaque
    .disabled[class^="icon-"],
    .disabled [class^="icon-"],
    .xforms-trigger.xforms-readonly .fa,
    .fa.disabled {
        opacity: 0.4;
    }

    // Use `.btn-link` instead of `.xforms-trigger` to catch cases where used directly in an `<xf:button>`
    .btn-link .fa {
        color: @textColor;
    }

    // NAV LIST
    // --------

    // Copy Bootstrap rules but add span between li and a
    // Make links block level
    .nav > li > span > .btn-link {
      display: block;
    }
    .nav > li > span > .btn-link:hover {
      text-decoration: none;
      background-color: @grayLighter;
    }

    .nav-list {
      padding: 0;
    }
    .nav-list > li > span > .btn-link,
    .nav-list .nav-header {
      width: 100%;
      text-align: left;
      margin-bottom: 1px; // so that when 2 highlighted .nav-headers are on top of each other there is some space between them
      text-shadow: none;
    }
    .nav-list > li > span > .btn-link {
      padding: 6px 15px;
    }
    .nav-list > .active > span > .btn-link,
    .nav-list > .active > span > .btn-link:hover {
      color: @white;
      text-shadow: none;
      background-color: @linkColor;
    }

    // Gray out text
    .nav > .disabled > span > .btn-link {
      color: @grayLight;
    }
    // Nuke hover effects
    .nav > .disabled > span > .btn-link:hover {
      text-decoration: none;
      background-color: transparent;
      cursor: default;
    }

    // Dropdowns
    // ---------

    .dropdown-menu {

        z-index: 2000; // because YUI dialogs are > 1000

        // <a> nested one more level
        > li > span > a,
        > li > span > .btn-link {
            display: block;
            padding: 3px 20px;
            clear: both;
            font-weight: normal;
            line-height: @baseLineHeight;
            color: @dropdownLinkColor;
            white-space: nowrap;
            text-decoration: none;
        }

        a,
        .btn-link {
            text-decoration: none;
            text-align: left;
        }

        .btn-link {
            width: 100%;
            box-sizing: border-box;
        }

        // Restore regular icons for disabled menu items (they are opacified instead, see .opacity() above)
        > li.disabled > a:hover > [class^="icon-"],
        > li.disabled > .btn-link:hover > [class^="icon-"] {
            background-image: url(/apps/fr/style/bootstrap/img/glyphicons-halflings.png);
        }
    }

    // Hover state
    // -----------
    .dropdown-menu > li > span > a:hover,
    .dropdown-menu > li > span > .btn-link:hover,
    .dropdown-menu > li > span > a:focus,
    .dropdown-menu > li > span > .btn-link:focus,
    .dropdown-submenu:hover > a,
    .dropdown-submenu:hover > .btn-link {
      text-decoration: none;
      color: @dropdownLinkColorHover;
      background-color: @dropdownLinkBackgroundHover;
      #gradient > .vertical(@dropdownLinkBackgroundHover, darken(@dropdownLinkBackgroundHover, 5%));
    }

    // Active state
    // ------------
    .dropdown-menu > .active > span > a,
    .dropdown-menu > .active > span > .btn-link,
    .dropdown-menu > .active > span > a:hover,
    .dropdown-menu > .active > span > .btn-link:hover {
      color: @dropdownLinkColorHover;
      text-decoration: none;
      outline: 0;
      background-color: @dropdownLinkBackgroundActive;
      #gradient > .vertical(@dropdownLinkBackgroundActive, darken(@dropdownLinkBackgroundActive, 5%));
    }

    // Disabled state
    // --------------
    // Gray out text and ensure the hover state remains gray
    .dropdown-menu > .disabled > span > a,
    .dropdown-menu > .disabled > span > .btn-link,
    .dropdown-menu > .disabled > span > a:hover,
    .dropdown-menu > .disabled > span > .btn-link:hover {
      color: @grayLight;
    }
    // Nuke hover effects
    .dropdown-menu > .disabled > span > a:hover,
    .dropdown-menu > .disabled > span > .btn-link:hover {
      text-decoration: none;
      background-color: transparent;
      background-image: none;
      cursor: default;
    }

    // Make default button a little darker
    .btn {
        background-color: darken(@wellBackground, 5%);
    }

    .btn {
        &.disabled, &[disabled] {
            background-color: darken(@wellBackground, 5%); // restore default color or buttons are too dark when disabled
        }
    }

    // Make color consistent with primary button color
    .badge-info {
        background-color: @btnPrimaryBackground;
    }

    .buttonBackgroundOrbeon(@startColor, @endColor, @textColor: #fff) {

        color: @textColor;
        background-color: @startColor;
        background-image: none;
        text-shadow: none;

        &:hover, &:focus, &:active, &.active, &.disabled, &[disabled] {
            color: @textColor;
            background-color: @endColor;
        }
    }


    // TODO: can we remove the `.xforms-trigger-appearance-xxforms-xxx` selectors?
    .xforms-trigger-appearance-xxforms-primary .btn, .btn-primary, {
        .buttonBackgroundOrbeon(@btnPrimaryBackground, @btnPrimaryBackgroundHighlight);
    }
    .xforms-trigger-appearance-xxforms-warning .btn, .btn-warning {
        .buttonBackgroundOrbeon(@btnWarningBackground, @btnWarningBackgroundHighlight);
    }
    .xforms-trigger-appearance-xxforms-danger .btn, .btn-danger {
        .buttonBackgroundOrbeon(@btnDangerBackground, @btnDangerBackgroundHighlight);
    }
    .xforms-trigger-appearance-xxforms-success .btn, .btn-success {
        .buttonBackgroundOrbeon(@btnSuccessBackground, @btnSuccessBackgroundHighlight);
    }
    .xforms-trigger-appearance-xxforms-info .btn, .btn-info {
        .buttonBackgroundOrbeon(@btnInfoBackground, @btnInfoBackgroundHighlight);
    }
    .xforms-trigger-appearance-xxforms-inverse .btn, .btn-inverse {
        .buttonBackgroundOrbeon(@btnInverseBackground, @btnInverseBackgroundHighlight);
    }

    button.btn, label.btn {
        background-image: none;
        text-shadow: none;
        border: none;
    }

    // Updates to Bootstrap btn-link
    button.btn-link {
        white-space: normal;
        text-align: inherit;
        text-decoration: underline;
        font-size: inherit;
        padding: 0 0 2px 0;
    }
}

@media print {
    .orbeon {

        #xforms-form { // make contained rules strong

            // Flying Saucer doesn't like `display: table` for :before and :after
            .clearfix:before, .clearfix:after,
            .row:before, .row:after,
            .row-fluid:before, .row-fluid:after,
            .container:before, .container:after,
            .container-fluid:before, .container-fluid:after,
            .dl-horizontal:before, .dl-horizontal:after,
            .controls-row:before, .controls-row:after,
            .form-actions:before, .form-actions:after,
            .form-horizontal .control-group:before,
            .form-horizontal .control-group:after,
            .nav-tabs:before, .nav-pills:before,
            .nav-tabs:after, .nav-pills:after,
            .tabbable:before, .tabbable:after,
            .navbar-inner:before, .navbar-inner:after,
            .navbar-form:before, .navbar-form:after,
            .pager:before, .pager:after,
            .modal-footer:before, .modal-footer:after,
            .thumbnails:before, .thumbnails:after,
            .navbar-inner:before, .navbar-inner:after {
                display: block;
            }

            // Flying Saucer doesn't like `0` font sizes
            .input-append,
            .input-prepend,
            .btn-group,
            .btn-toolbar {
                font-size: .5px;
            }
        }

        body& {
            .container, .container-fluid {
                &.fr-view {
                    padding-top: 0; // remove padding added above
                }
            }
        }

        .fr-view {
            .navbar, .navbar-inverse {
                .navbar-inner .container {
                    margin-left: 0;
                    padding-left: 0;
                    h1 {
                        margin-left: 0; // remove margin added above
                        padding-left: 0;
                    }
                }
            }
        }
    }
}