<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:f="http://orbeon.org/oxf/xml/formatting">

    <xbl:binding
        id="fr-buttons-bar"
        element="fr|buttons-bar"
        xxbl:mode=""
        xxbl:container="span">

        <xbl:template>

            <xf:var name="fr-mode" value="fr:mode()"/>

            <xf:var name="buttons-property-opt"    as="xs:string?"  value="fr:component-param-value('buttons-property')   [xxf:non-blank()]"/>
            <xf:var name="visibility-property-opt" as="xs:string?"  value="fr:component-param-value('visibility-property')[xxf:non-blank()]"/>
            <xf:var name="highlight-primary-opt"   as="xs:boolean?" value="fr:component-param-value('highlight-primary')  [. = ('true', 'false')] cast as xs:boolean?"/>
            <xf:var name="inverse-opt"             as="xs:boolean?" value="fr:component-param-value('inverse')            [. = ('true', 'false')] cast as xs:boolean?"/>

            <xf:var
                name="highlight-primary"
                value="
                    if (empty($highlight-primary-opt)) then
                        $fr-mode != 'test'
                    else
                        $highlight-primary-opt"
            />

            <xf:var
                name="inverse"
                value="
                    if (empty($inverse-opt)) then
                        $fr-mode = 'test'
                    else
                        $inverse-opt"/>

            <!-- Message shown next to the buttons (empty by default) -->
            <xh:span class="fr-buttons-message">
                <xf:output mediatype="text/html" ref="xxf:r('detail.messages.buttons-message', '|fr-fr-resources|')"/>
            </xh:span>

            <xf:var
                name="names-and-refs-if-relevant"
                value="
                    let $buttons-property :=
                            if (exists($buttons-property-opt)) then
                                $buttons-property-opt
                            else if ($fr-mode = 'view') then
                                'oxf.fr.detail.buttons.view'
                            else if ($fr-mode = 'import') then
                                'oxf.fr.import.buttons'
                            else
                                'oxf.fr.detail.buttons',
                        $visibility-property :=
                            if (exists($visibility-property-opt)) then
                                $visibility-property-opt
                            else
                                'oxf.fr.detail.button',
                        $buttons-names :=
                            if (empty($buttons-property-opt) and $fr-mode = ('pdf', 'email')) then
                                ()
                            else if (empty($buttons-property-opt) and $fr-mode = 'test') then
                                (
                                    ('wizard-toc', 'wizard-prev', 'wizard-next')[fr:is-wizard-body-shown()],
                                    'validate',
                                    'save'[fr:is-browser-environment()]
                                )
                            else
                                xxf:split(xxf:property(string-join(($buttons-property, fr:app-name(), fr:form-name()), '.'))),
                        $is-inner :=
                            starts-with($buttons-property, 'oxf.fr.detail.buttons.inner')
                    return
                        for $button-name in $buttons-names
                        return
                            let $parts          := xxf:split($button-name, '|')[xxf:non-blank()],
                                $is-multiple    := count($parts) gt 1,
                                $parts-and-refs :=
                                    for $part in $parts
                                    return
                                        let $visible-expression :=
                                                xxf:property(
                                                    string-join(
                                                        ($visibility-property, $part, 'visible', fr:app-name(), fr:form-name()),
                                                        '.'
                                                    )
                                                ),
                                            $enabled-expression :=
                                                xxf:property(
                                                    string-join(
                                                        ($visibility-property, $part, 'enabled', fr:app-name(), fr:form-name()),
                                                        '.'
                                                    )
                                                ),
                                            $visible-opt :=
                                                if (xxf:non-blank($visible-expression)) then
                                                    boolean(xxf:instance('fr-form-instance')/xxf:evaluate($visible-expression))
                                                else
                                                    (),
                                            $enabled-opt :=
                                                if (xxf:non-blank($enabled-expression)) then
                                                    boolean(xxf:instance('fr-form-instance')/xxf:evaluate($enabled-expression))
                                                else
                                                    ()
                                        return
                                            for $ref in
                                                if (exists($visible-opt) or exists($enabled-opt)) then
                                                    (
                                                        if (exists($enabled-opt) and not($enabled-opt)) then
                                                            ''
                                                        else
                                                            xxf:instance('fr-triggers-instance')/other
                                                    )[
                                                        empty($visible-opt) or $visible-opt
                                                    ]
                                                else if ($is-inner and $part = ('save-final', 'submit', 'send', 'review', 'pdf', 'tiff', 'email')) then
                                                    xxf:binding('fr-wizard-submit-hide')
                                                else
                                                    xxf:instance('fr-triggers-instance')/*[name() = (
                                                        if ($part = 'summary') then
                                                            'can-access-summary'
                                                        else if ($part = 'pdf') then
                                                            'pdf'
                                                        else if ($part = 'tiff') then
                                                            'tiff'
                                                        else
                                                            'other'
                                                    )]
                                            return
                                                ($part, $ref)[xxf:relevant($ref)]
                            return
                                if ($is-multiple and exists($parts-and-refs)) then
                                    (string-join($parts-and-refs[position() mod 2 = 1], '|'), xxf:instance('fr-triggers-instance')/other)
                                else
                                    $parts-and-refs
                "/>

            <xf:repeat ref="$names-and-refs-if-relevant[position() mod 2 = 1]">
                <xf:var name="position"    value="position()"/>
                <xf:var name="button-name" value="."/>
                <xf:var name="ref"         value="$names-and-refs-if-relevant[$position * 2]"/>
                <xf:var name="primary"     value="$highlight-primary and $position = last()"/>
                <xf:var name="parts"       value="xxf:split($button-name, '|')[xxf:non-blank()]"/>
                <xf:var name="is-multiple" value="count($parts) gt 1"/>

                <xf:var
                    name="class"
                    value="
                        concat(
                            'xforms-trigger-appearance-xxforms-',
                             if ($primary) then
                                'primary'
                             (: 2021-12-01: Offline, using `position() doesn't return the correct value. :)
                             else if ($inverse and $position = last()) then
                                'inverse'
                             else
                                'default'
                        )
                "/>

                <xf:switch caseref="$is-multiple" xxf:update="full">
                    <xf:case value="false()">
                        <!-- Because @appearance is static, use a CSS class instead for primary/inverse. This requires
                             changes to dropdown.less, which is not the best solution. Ideally,
                             we could find a dynamic way to set that class on the nested <button> so that standard
                             Bootstrap rules apply. -->
                        <fr:process-button
                            name="{$button-name}"
                            ref="if ($is-multiple) then () else $ref"
                            class="{$class}"/>
                    </xf:case>
                    <xf:case value="true()">
                        <fr:drop-trigger
                            class="{$class}"
                            ref="if (not($is-multiple)) then () else $ref">
                            <xf:itemset ref="$parts">
                                <xf:label value="xxf:r(concat('buttons.', .), '|fr-fr-resources|')"/>
                                <xf:value value="."/>
                            </xf:itemset>
                        </fr:drop-trigger>
                    </xf:case>
                </xf:switch>
            </xf:repeat>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>