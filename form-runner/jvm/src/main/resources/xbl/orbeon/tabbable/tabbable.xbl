<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:p="http://www.orbeon.com/oxf/pipeline"
         xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <xbl:script src="/ops/dragula/dragula.min.js"/>

    <xbl:binding
        id="fr-tabbable"
        element="fr|tabbable"
        xxbl:mode="binding javascript-lifecycle">

        <xbl:resources>
             <xbl:style src="/ops/dragula/dragula.min.css"/>
             <xbl:style src="/xbl/orbeon/tabbable/tabbable.css"/>
        </xbl:resources>

        <xbl:handlers>
            <!-- Basic fix for https://github.com/orbeon/orbeon-forms/issues/4090 -->
            <xbl:handler event="xxforms-visible" phase="target">
                <xf:action type="javascript">
                    ORBEON.xforms.XBL.instanceForControl(this).selectTab(0);
                </xf:action>
            </xbl:handler>
        </xbl:handlers>

        <xbl:implementation>
            <xf:model>
                <xf:instance id="orbeon-resources" xxf:readonly="true">
                    <_>
                        <resource xml:lang="en"><add>Add One</add></resource>
                        <resource xml:lang="fr"><add>Ajouter</add></resource>
                        <resource xml:lang="es"><add>Agregar Uno</add></resource>
                        <resource xml:lang="no"><add>[Add One]</add></resource>
                        <resource xml:lang="ru"><add>[Add One]</add></resource>
                        <resource xml:lang="it"><add>[Add One]</add></resource>
                        <resource xml:lang="de"><add>[Add One]</add></resource>
                        <resource xml:lang="fi"><add>[Add One]</add></resource>
                        <resource xml:lang="nl"><add>[Add One]</add></resource>
                        <resource xml:lang="pt"><add>[Add One]</add></resource>
                        <resource xml:lang="sv"><add>[Add One]</add></resource>
                    </_>
                </xf:instance>
            </xf:model>
        </xbl:implementation>

        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy.xsl"/>

                <xsl:variable name="root"     select="/*[1]"/>
                <xsl:variable name="readonly" select="$root/@readonly = 'true'"/>

                <xsl:template match="/*">
                    <xh:div class="{'tabs-left'[p:split($root/@appearance) = 'left']}">

                        <!-- Tab labels -->
                        <xh:ul class="nav nav-tabs">
                            <xsl:for-each select="fr:tab">
                                <xsl:variable name="tab"               select="."/>
                                <xsl:variable name="pos"               select="position()"/>
                                <xsl:variable name="repeat"            select="exists($tab/(@bind | @ref))"/>
                                <xsl:variable name="label"             select="$tab/(fr:label | xf:label)[1]"/>
                                <xsl:variable name="reorder"           select="$repeat and not($tab/@reorder = 'false')"/>

                                <xf:group appearance="xxf:internal">

                                    <!-- Whether the tab is visible -->
                                    <xsl:if test="$tab/@visible">
                                        <xf:var name="visible">
                                            <xxf:value value="{$tab/@visible}" xxbl:scope="outer"/>
                                        </xf:var>
                                    </xsl:if>

                                    <xsl:variable name="content">
                                        <xh:li
                                            class="{
                                                if ($repeat and $pos = 1) then
                                                    '{''active''[xxf:repeat-position() = 1]}'
                                                else
                                                    'active'[$pos = 1],
                                                '{''xforms-hidden''[not($visible)]}'[$tab/@visible],
                                                'nav-item',
                                                'xforms-dnd-item',
                                                'xforms-dnd-moves'[$reorder]
                                            }">
                                            <!-- Transform *:label into xf:output -->
                                            <xh:a data-toggle="tabbable" class="nav-link">
                                                <xsl:choose>
                                                    <!-- Static label, just copy content -->
                                                    <xsl:when test="empty($label/(@ref | @bind | @value))">
                                                        <xf:group xxbl:scope="outer" appearance="xxf:internal">
                                                            <xh:span>
                                                                <xsl:copy-of select="$label/(@* | node())"/>
                                                            </xh:span>
                                                        </xf:group>
                                                    </xsl:when>
                                                    <!-- Dynamic label, generate xf:output -->
                                                    <xsl:otherwise>
                                                        <!-- Put content in outer scope -->
                                                        <xf:output xxbl:scope="outer">
                                                            <xsl:copy-of select="$label/@*"/>
                                                        </xf:output>
                                                    </xsl:otherwise>
                                                </xsl:choose>
                                                <xsl:if test="$reorder">
                                                    <xh:i class="fa fa-fw fa-bars fr-tabbable-grab"/>
                                                </xsl:if>
                                            </xh:a>
                                        </xh:li>
                                    </xsl:variable>

                                    <xsl:choose>
                                        <xsl:when test="$repeat">
                                            <xf:repeat xxbl:scope="outer" xxf:dnd="true">
                                                <xsl:copy-of select="namespace::*"/><!-- FIXME: otherwise if the expression doesn't see all in-scope namespaces -->
                                                <xsl:copy-of select="$tab/(@context | @model | @bind | @ref)"/>
                                                <xf:action event="xxforms-index-changed" type="javascript" target="#observer">
                                                    <xf:param
                                                        name="newIndex"
                                                        value="event('xxf:new-index') - 1"/>
                                                    <!-- NOTE: Probably wrong if there are non-repeated tabs before! -->
                                                    <xf:body>
                                                        ORBEON.xforms.XBL.instanceForControl(this).selectTab(parseInt(newIndex));
                                                    </xf:body>
                                                </xf:action>
                                                <xf:group xxbl:scope="inner" appearance="xxf:internal">
                                                    <xsl:copy-of select="$content"/>
                                                </xf:group>
                                            </xf:repeat>
                                            <xsl:if test="not($readonly)">
                                                <xh:li class="fr-tabbable-add">
                                                    <xf:trigger appearance="xxf:mini" ref="xxf:binding('fr-tabbable')">
                                                        <xf:label value="xxf:r('add')"/>
                                                        <xf:dispatch
                                                            event="DOMActivate"
                                                            name="fr-tabbable-add"
                                                            targetid="fr-tabbable"/>
                                                    </xf:trigger>
                                                </xh:li>
                                            </xsl:if>
                                        </xsl:when>
                                        <xsl:otherwise>
                                            <xsl:copy-of select="$content"/>
                                        </xsl:otherwise>
                                    </xsl:choose>

                                </xf:group>
                            </xsl:for-each>
                        </xh:ul>

                        <!-- Tab content -->
                        <xf:group xxf:element="div" class="tab-content">

                            <!-- Focus on tab when `xforms-focus` is dispatched. Use `capture` phase as that event
                                 doesn't bubble! -->
                            <xf:action event="xforms-focus" type="javascript" phase="capture" xxf:phantom="true">
                                ORBEON.xforms.XBL.instanceForControl(this).selectTabForPane(event.target);
                            </xf:action>

                            <xsl:for-each select="fr:tab">
                                <xsl:variable name="tab"    select="."/>
                                <xsl:variable name="pos"    select="position()"/>
                                <xsl:variable name="repeat" select="exists($tab/(@bind | @ref))"/>

                                <xsl:variable name="content">
                                    <xf:group
                                        xxbl:scope="outer"
                                        xxf:element="div"
                                        class="{
                                            'tab-pane',
                                            if ($repeat and $pos = 1) then
                                                '{''active''[xxf:repeat-position() = 1]}'
                                            else
                                                'active'[$pos = 1],
                                            @class
                                        }">
                                        <!-- Make the id of the tab the id of the group -->
                                        <xsl:copy-of select="@id"/>
                                        <xsl:if test="@visible">
                                            <xsl:attribute name="ref" select="concat('.[boolean(', @visible, ')]')"/>
                                        </xsl:if>
                                        <xsl:if test="not($repeat)">
                                            <xsl:copy-of select="$tab/(@context | @model)"/>
                                        </xsl:if>
                                        <xsl:apply-templates select="node() except (fr:label, xf:label)"/>
                                    </xf:group>
                                </xsl:variable>

                                <xsl:choose>
                                    <xsl:when test="$repeat">
                                        <xf:repeat xxbl:scope="outer">
                                            <xsl:copy-of select="$tab/(@context | @model | @bind | @ref)"/>
                                            <xsl:copy-of select="$content"/>
                                        </xf:repeat>
                                    </xsl:when>
                                    <xsl:otherwise>
                                        <xsl:copy-of select="$content"/>
                                    </xsl:otherwise>
                                </xsl:choose>
                            </xsl:for-each>
                        </xf:group>
                    </xh:div>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
