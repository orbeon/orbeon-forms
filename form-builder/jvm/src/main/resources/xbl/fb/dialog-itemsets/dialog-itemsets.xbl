<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
    xmlns:xbl="http://www.w3.org/ns/xbl"
    xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
    xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
    xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilderXPathApi">

    <xbl:binding id="fb-dialog-itemsets" element="fb|dialog-itemsets">
        <xbl:resources>
            <xbl:style src="/xbl/fb/dialog-itemsets/dialog-itemsets.css"/>
        </xbl:resources>
        <xbl:handlers>
            <xbl:handler event="fb-show-dialog" phase="target" defaultAction="cancel">
                <xf:setvalue iterate="*[not(*)]" ref="."/>          <!-- Clear local values -->
                <xf:delete ref="(items, template)/item"/>           <!-- Clear local items and template -->

                <xf:var name="control-name"      value="frf:controlNameFromId(event('control-element')/@id)"/>
                <xf:setvalue ref="control-name"  value="$control-name"/>
                <xf:setvalue ref="control-type"  value="event('control-element')/local-name()"/>
                <xf:setvalue ref="control-value" value="fbf:findControlBoundNodeByName($control-name)"/>
                <xf:setvalue ref="appearance"    value="event('control-element')/@appearance"/>
                <xf:setvalue ref="html"          value="fbf:isItemsetHTMLMediatype($control-name)"/>
                <xxf:show dialog="dialog"/>
            </xbl:handler>

            <xbl:handler event="xxforms-dialog-open" observer="dialog">

                <!-- Get current language and items in the all languages -->
                <xf:setvalue ref="$i/lang"            value="fbf:currentLang()"/>
                <xf:insert   context="$i/items"       origin="fbf:getControlItemsGroupedByValue($i/control-name)"/>

                <!-- Create empty template with all placeholders -->
                <xf:insert   context="$i/template"    origin="$i/items/item[1]"/>
                <xf:setvalue iterate="$i/template/item/*" ref="."/>

                <!-- Set focus on input rather than button -->
                <xf:setfocus control="fb-itemset-label-input"/>
            </xbl:handler>

            <!-- Close dialog upon click on save/cancel -->
            <xbl:handler event="DOMActivate" observer="save-trigger cancel-trigger">
                <xxf:hide dialog="dialog"/>
            </xbl:handler>

            <!-- Remove all values -->
            <xbl:handler event="DOMActivate" observer="remove-all-trigger">
                <xf:delete ref="$i/items/item"/>
            </xbl:handler>

            <!-- Clear Value -->
            <xbl:handler event="DOMActivate" observer="clear-value-trigger">
                <xf:setvalue ref="$i/control-value" />
            </xbl:handler>

            <!-- Save on click on save -->
            <xbl:handler event="DOMActivate" observer="save-trigger" type="xpath">
                fbf:saveControlToUndoStack($i/control-name, $i/control-name),
                fbf:setControlItems($i/control-name, $i/items),
                fbf:setItemsetHTMLMediatype($i/control-name, $i/html)
            </xbl:handler>
            <xbl:handler event="DOMActivate" observer="save-trigger">
                <xf:setvalue ref="fbf:findControlBoundNodeByName($i/control-name)" value="$i/control-value"/>
            </xbl:handler>

            <!-- Add line when users press enter -->
            <xbl:handler event="DOMActivate" observer="fb-itemset-label-input fb-itemset-value-input fb-itemset-hint-input">
                <xf:dispatch targetid="fb-itemset-repeat" name="fr-insert-below"/>
            </xbl:handler>
        </xbl:handlers>
        <xbl:implementation>
            <xf:model id="model">
                <xf:instance id="i" xxf:exclude-result-prefixes="#all">
                    <instance>
                        <control-name/>     <!-- So we can find back the control when saving if users change the name -->
                        <control-type/>     <!-- Either 'select' or 'select1' -->
                        <control-value/>    <!-- Default value of control -->
                        <appearance/>
                        <html/>             <!-- Whether labels can contain HTML markup -->
                        <lang/>             <!-- The current language -->
                        <items/>            <!-- Contains item elements in the current language -->
                        <template/>         <!-- Template when adding items -->
                        <triggers>          <!-- Nodes to which we bind triggers -->
                            <enabled/>      <!-- A node that is always enabled -->
                            <disabled/>     <!-- A node that is always disabled -->
                        </triggers>
                    </instance>
                </xf:instance>

                <xf:var name="i" value="instance('i')"/>

                <xf:bind ref="control-type" name="control-type"/>
                <xf:bind ref="html" type="xs:boolean"/>
                <xf:bind ref="items/item">                                                                                      <!-- Constraints on items' value and label -->
                    <xf:bind ref="label, value" xxf:whitespace="trim" readonly="false()"/>                                      <!-- Additional spaces are most likely there by error -->
                    <xf:bind ref="label" constraint="for $l in string(@lang) return
                                                         . = '' or
                                                         not(($i/items/item/label[@lang = $l] except .) = .)"/>                 <!-- No duplicate label are allowed -->
                    <xf:bind ref="value">
                        <xf:bind ref="." constraint=". != ''"/>                                                                 <!-- Empty values are not allowed -->
                        <xf:bind ref="." constraint="not(($i/items/item/value except .) = .)"/>                                 <!-- No duplicate values are allowed -->
                        <xf:bind ref="." constraint="frf:isSingleSelectionControl($control-type) or not(contains(., ' '))"/>    <!-- No spaces in values are allowed for xf:select -->
                    </xf:bind>
                </xf:bind>
                <xf:bind ref="triggers/disabled" readonly="true()"/>

            </xf:model>
        </xbl:implementation>
        <xbl:template>
            <!-- Bindings specified on control -->
            <xf:var name="resources"><xxf:value value=". treat as element()" xxbl:scope="outer" xbl:attr="model context ref=resources-ref"/></xf:var>

            <!-- Actual dialog -->
            <xxf:dialog id="dialog" class="fb-dialog-itemsets" appearance="full" model="model" level="modal">
                <xf:label ref="$resources/dialog-itemsets/label"/>
                <xh:div class="fb-dialog-body fb-hide-alert">

                    <fb:language-choice ref="$i/lang"/>

                    <!-- Only allow HTML for full appearance -->
                    <fr:checkbox-input ref="$i/html[../appearance = 'full']" class="fb-html-checkbox">
                        <xf:label ref="$resources/messages/lhha-checkbox"/>
                    </fr:checkbox-input>

                    <xf:group ref="$i/items">
                        <xf:var name="control-element" value="fbf:findControlByNameOrEmpty($i/control-name)"/>
                        <!-- NOTE: Keep legacy repeat="true" so we keep testing the legacy repeat mode. Remove once we
                             decide to remove support for legacy mode. -->
                        <fr:grid id="fb-itemset-repeat" repeat="true" ref="item" template="$i/template/item">
                            <xh:tr>
                                <xh:td>
                                    <xf:input ref="label[@lang = $i/lang]" id="fb-itemset-label-input" class="fb-itemset-label-input">
                                        <xf:label ref="$resources/dialog-itemsets/label-header/label"/>
                                    </xf:input>
                                </xh:td>
                                <xh:td>
                                    <xf:input ref="value" id="fb-itemset-value-input" class="fb-itemset-value-input">
                                        <xf:label ref="$resources/dialog-itemsets/value-header/label"/>
                                    </xf:input>
                                </xh:td>
                                <xh:td class="fb-itemset-hint-cell {if (not(exists($i/items/item/hint))) then 'xforms-hidden' else ()}">
                                    <xf:input ref="hint[@lang = $i/lang]" id="fb-itemset-hint-input" class="fb-itemset-hint-input">
                                        <xf:label ref="$resources/dialog-itemsets/hint-header/label"/>
                                    </xf:input>
                                </xh:td>
                                <xh:td class="fb-itemset-selected">
                                    <xf:var name="item" value="."/>
                                    <xf:var name="is-single-selection" value="frf:isSingleSelectionControl($i/control-type)"/>
                                    <xf:switch caseref="frf:isSingleSelectionControl($i/control-type)">
                                        <xf:case value="false()">
                                            <xf:select ref="$i/control-value"
                                                       appearance="full">
                                                <xf:item>
                                                    <xf:label ref="''"/>
                                                    <xf:value ref="$item/value"/>
                                                </xf:item>
                                            </xf:select>
                                        </xf:case>
                                        <xf:case value="true()">
                                            <xf:select1 ref="$i/control-value"
                                                        appearance="full">
                                                <xf:item>
                                                    <xf:label ref="''"/>
                                                    <xf:value ref="$item/value"/>
                                                </xf:item>
                                            </xf:select1>
                                        </xf:case>
                                    </xf:switch>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <xh:div class="fr-dialog-buttons">
                        <xf:trigger id="remove-all-trigger" appearance="xxf:danger" class="pull-left">
                            <xf:label ref="$resources/dialog-itemsets/remove-all/label"/>
                        </xf:trigger>
                        <xf:trigger id="clear-value-trigger">
                            <xf:label ref="$resources/dialog-itemsets/clear-value/label"/>
                        </xf:trigger>
                        <xf:trigger ref="$i/triggers/(if (valid($i)) then enabled else disabled)" id="save-trigger" appearance="xxf:primary">
                            <xf:label ref="$resources/apply/label"/>
                        </xf:trigger>
                        <xf:output value="$resources/or/label"/>
                        <xf:trigger appearance="minimal" id="cancel-trigger">
                            <xf:label ref="$resources/cancel/label"/>
                        </xf:trigger>
                    </xh:div>
                </xh:div>
            </xxf:dialog>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>