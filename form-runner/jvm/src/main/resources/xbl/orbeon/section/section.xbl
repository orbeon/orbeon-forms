<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
         xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilderXPathApi">

    <xbl:binding
        id="fr-section"
        element="fr|section"
        xxf:external-events="fb-set-current-section fb-update-section-label"
        xxbl:mode="binding lhha custom-lhha">

        <xbl:resources>
            <xbl:style src="/xbl/orbeon/section/section.css"/>
        </xbl:resources>

        <xbl:handlers>
            <xbl:handler event="fr-expand" phase="target">
                <!-- For attributes, see https://github.com/orbeon/orbeon-forms/issues/4790 -->
                <xf:toggle case="case-open" xxf:deferred-updates="false" xxf:toggle-ancestors="false"/>
            </xbl:handler>
            <xbl:handler event="fr-collapse" phase="target">
                <!-- For attributes, see https://github.com/orbeon/orbeon-forms/issues/4790 -->
                <xf:toggle case="case-closed" xxf:deferred-updates="false" xxf:toggle-ancestors="false"/>
            </xbl:handler>
        </xbl:handlers>

        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy.xsl"/>

                <xsl:variable name="root" select="/*[1]"/>

                <xsl:template match="/*">

                    <!-- Section level, see https://github.com/orbeon/orbeon-forms/issues/3011 -->
                    <xsl:variable name="default-level" select="2"/>
                    <xsl:variable name="min-level"     select="1"/>
                    <xsl:variable name="max-level"     select="6"/>

                    <xsl:variable
                        name="base-level"
                        select="
                            (
                                $root/@base-level[. castable as xs:integer]/xs:integer(.)[. ge 0],
                                0
                            )[1]"/>

                    <xsl:variable
                        name="level"
                        select="
                            min(
                                (
                                    (
                                        $root/@level[. castable as xs:integer]/xs:integer(.)[. ge $min-level],
                                        $default-level
                                    )[1] + $base-level,
                                    $max-level
                                )
                            )"/>

                    <!-- Section configuration -->
                    <xsl:variable name="editable"                         select="exists($root/@edit-ref)"/>
                    <xsl:variable name="content-nonrelevant-if-collapsed" select="$root/@content-nonrelevant-if-collapsed = 'true'"/>
                    <xsl:variable name="collapsible"                      select="not($root/@collapsible = 'false' or $root/@collapse = 'false')"/>
                    <xsl:variable name="animate"                          select="not($root/@animate = 'false')"/>
                    <xsl:variable name="readonly"                         select="$root/@readonly = 'true'"/>
                    <xsl:variable name="is-repeat"                        select="frf:isRepeat(.)"/>
                    <xsl:variable name="appearance"                       select="($root/@appearance, 'full')[1]"/>
                    <xsl:variable name="repeat-menu"                      select="$appearance = 'full'    and not($readonly)"/>
                    <xsl:variable name="right-column"                     select="$appearance = 'minimal' and not($readonly)"/>

                    <!-- Section content area -->
                    <xf:group appearance="xxf:internal" xxbl:scope="outer">

                        <xsl:if
                            test="$editable"
                            use-when="function-available('fbf:sectionCanDoClasses')"><!-- prevent error with `fbf:sectionCanDoClasses` during tests -->
                            <!-- Variables for design time -->
                            <xf:var name="fb-section"        value="for $src in xxf:instance('fb-form-instance') return id('{@id}', $src)"/>
                            <xf:var name="fb-can-do-classes" value="if (exists($fb-section)) then fbf:sectionCanDoClasses($fb-section) else ()"/>
                        </xsl:if>

                        <xf:var
                            name="view-mode"
                            value="xxf:readonly(xxf:component-context()) or fr:is-readonly-mode()"/>

                        <xf:group
                            class="{if ($editable) then '{$fb-can-do-classes}' else ''}"
                            xxf:element="div">

                            <xf:group xxbl:scope="inner" appearance="xxf:internal">

                                <xf:var
                                    name="initially-open"
                                    value="fr:is-readonly-mode() or not(fr:component-param-value('open') = 'false')"/>

                                <!-- Section title area: open/close button, title, help -->
                                <xsl:element name="xh:h{$level}">
                                    <xsl:attribute name="class" select="'fr-section-title'"/>

                                    <!-- Open/close button -->
                                    <xf:group appearance="xxf:internal">
                                        <!-- A bit tricky: the switch is further below, and case('switch') can
                                             return () if the switch is not yet initialized. In that case, it means we
                                             are just becoming relevant, so use the value of $initially-open. -->
                                        <xf:var name="open" value="(for $switch in case('switch') return $switch = 'case-open', $initially-open)[1]"/>
                                        <xsl:if test="$collapsible">
                                            <!-- Handle DOMActivate event to open/close the switches -->
                                            <xf:toggle event="DOMActivate" case="case-{{if ($open) then 'closed' else 'open'}}"/>
                                        </xsl:if>

                                        <!-- Actual section title -->
                                        <xsl:choose>
                                             <xsl:when test="$collapsible">
                                                 <xf:trigger appearance="minimal" class="fr-section-label fr-section-{{if ($open) then 'open' else 'closed'}}">
                                                     <xf:label value="xxf:label('fr-section')"><xsl:copy-of select="$root/xf:label/@mediatype"/></xf:label>
                                                     <xf:help  value="xxf:help ('fr-section')"><xsl:copy-of select="$root/xf:help /@mediatype"/></xf:help>
                                                     <xf:hint  value="xxf:hint ('fr-section')"><xsl:copy-of select="$root/xf:hint /@mediatype"/></xf:hint>
                                                 </xf:trigger>
                                             </xsl:when>
                                             <xsl:otherwise>
                                                 <!-- We can't use a trigger in all cases, making the trigger readonly if the section isn't collapsible,
                                                      as readonly triggers are removed when in static-readonly (as a result, section titles wouldn't show
                                                      on the review page if the section isn't collapsible) -->
                                                 <xf:output appearance="minimal" class="fr-section-label" value="xxf:label('fr-section')">
                                                     <xsl:copy-of select="$root/xf:label/@mediatype"/>
                                                     <xf:help  value="xxf:help ('fr-section')"><xsl:copy-of select="$root/xf:help /@mediatype"/></xf:help>
                                                     <xf:hint  value="xxf:hint ('fr-section')"><xsl:copy-of select="$root/xf:hint /@mediatype"/></xf:hint>
                                                 </xf:output>
                                             </xsl:otherwise>
                                         </xsl:choose>

                                    </xf:group>

                                </xsl:element>

                                <!--
                                    We can't make switch non-relevant at runtime as we depend on relevance for validation:

                                        https://github.com/orbeon/orbeon-forms/issues/927

                                    But we can use a full update to dynamically send the markup as needed:

                                        https://github.com/orbeon/orbeon-forms/issues/4271
                                -->
                                <xf:switch
                                    id="switch"
                                    xxf:readonly-appearance="dynamic"
                                    xxf:element="div"
                                    xxf:xforms11-switch="{$editable or $content-nonrelevant-if-collapsed}"
                                    xxf:update="{'full'[not($editable)]}">

                                    <!-- Closed section -->
                                    <xf:case id="case-closed" selected="{{not($initially-open)}}"/>
                                    <!-- Open section -->
                                    <xf:case id="case-open" selected="{{$initially-open}}">
                                        <xf:group
                                            class="fr-section-content{ if (not($editable) and $animate) then ' xxforms-animate' else ''}"
                                            xxbl:scope="outer"
                                            xxf:element="div">
                                            <xsl:choose>
                                                <xsl:when test="$is-repeat">

                                                    <xsl:variable
                                                        name="repeater-id"
                                                        select="concat($root/@id, '-repeater')"/>

                                                    <fr:repeater
                                                        id="{$repeater-id}"
                                                        ref="*"
                                                        level="{$level}">

                                                        <xsl:copy-of select="@template | @origin | @apply-defaults | @appearance | @insert | @readonly | @view-appearance"/>

                                                        <xsl:if test="not($editable)">
                                                            <xsl:copy-of select="@min | @max | @freeze | @remove-constraint"/>
                                                        </xsl:if>

                                                        <!-- Paging is only available at runtime, not design-time -->
                                                        <xsl:if test="not($editable)">
                                                            <xsl:copy-of select="$root/@page-size"/>
                                                        </xsl:if>

                                                        <xsl:apply-templates select="fr:iteration-label | fr:add-iteration-label"/>

                                                        <!-- Forward iteration events -->
                                                        <xf:action
                                                            event="fr-iteration-added fr-iteration-removed"
                                                            target="#observer"
                                                            propagate="stop">
                                                            <xf:dispatch xxbl:scope="inner" targetid="fr-section" name="{{event('xxf:type')}}">
                                                                <xf:property name="index" value="event('index')"/>
                                                            </xf:dispatch>
                                                        </xf:action>

                                                        <xsl:if test="$repeat-menu">
                                                            <xh:div class="fr-repeat-menu">
                                                                <xh:div xxf:control="true" ref=".[not($view-mode)]" class="dropdown">
                                                                    <xh:button
                                                                        class="btn btn-mini fr-repeater-dropdown-button"
                                                                        aria-label="{{xxf:r('components.grid.menu', '|fr-fr-resources|')}}"
                                                                        aria-expanded="false">
                                                                        <xh:i class="fa fa-fw fa-caret-down"/>
                                                                    </xh:button>
                                                                </xh:div>
                                                            </xh:div>
                                                        </xsl:if>
                                                        <xh:div class="fr-repeat-content">
                                                            <xsl:apply-templates select="* except (xf:label, xf:hint, xf:help, fr:buttons, fr:iteration-label)"/>
                                                        </xh:div>
                                                        <xsl:if test="$right-column">
                                                            <xh:div xxf:control="true" ref=".[not($view-mode)]" class="fr-section-right-column">
                                                                <xf:group ref=".[$fr-repeater-can-remove]">
                                                                    <xh:button
                                                                        class="btn btn-link fr-repeater-remove-button"
                                                                        title="{{xxf:r('components.section.remove.hint', '|fr-fr-resources|')}}">
                                                                        <xh:i class="fa fa-fw fa-minus-circle"/>
                                                                    </xh:button>
                                                                </xf:group>
                                                                <xf:group ref=".[not($fr-repeater-can-remove)]">
                                                                    <xh:i class="fa fa-fw fa-minus-circle disabled"/>
                                                                </xf:group>
                                                            </xh:div>
                                                        </xsl:if>
                                                    </fr:repeater>
                                                </xsl:when>
                                                <xsl:otherwise>
                                                    <xsl:apply-templates select="* except (xf:label, xf:hint, xf:help, fr:buttons, fr:iteration-label)"/>
                                                </xsl:otherwise>
                                            </xsl:choose>
                                        </xf:group>
                                    </xf:case>
                                </xf:switch>
                            </xf:group>
                        </xf:group>
                    </xf:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>