// Copyright (C) 2014 Orbeon, Inc.
//
// This program is free software; you can redistribute it and/or modify it under the terms of the
// GNU Lesser General Public License as published by the Free Software Foundation; either version
// 2.1 of the License, or (at your option) any later version.
//
// This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
// without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
// See the GNU Lesser General Public License for more details.
//
// The full text of the license is available at http://www.gnu.org/copyleft/lesser.html

@import (reference) "../../../../../../../../bootstrap-src/less/variables";
@import (reference)  "../../../apps/fr/style/form-runner-common";

@minimalRepeatSeparatorSpacing: 5px;

.orbeon {

    // Mixin as Flying Saucer doesn't support `:not()`!
    .grid-not-css() {

        display: table;
        table-layout: fixed;
        width: 100%;

        .fr-grid-head {
            display: table-header-group;
        }

        .fr-grid-body {
            display: table-row-group;
        }

        .fr-grid-tr, .fr-grid-master-row {
            display: table-row;
        }

        // Padding/margin in the cell content: see https://github.com/orbeon/orbeon-forms/issues/2414
        .fr-grid-body .fr-grid-td {
            display: table-cell;
            vertical-align: top;
            position: relative;
        }

        .fr-grid-head .fr-grid-th {
            display: table-cell;
            text-align: left;

            .xforms-output {
                // We want the block for the label in the header to "go around" its content, so the help
                // popover is correctly positioned.
                display: block;
            }

            // If there is a group with a label in a grid th, remove the border added by Bootstrap
            legend.xforms-label {
                border-bottom: none;
                margin: 0;
            }
        }

        // In non-repeated grids, make rows except the last one take the minimum possible amount of vertical space in
        // case `rowspan`s are used. This is usually the intended layout, as opposed to rows taking proportionally more
        // or less vertical space.
        // NOTE: This should be extended to repeated grids as well, but they interleave `<tr>`s which makes it harder.
        &:not(.fr-repeat):not(.fr-editable) { // see also https://github.com/orbeon/orbeon-forms/issues/3283
            .fr-grid-body .fr-grid-tr {
                height: 0;
            }
            .fr-grid-body tr:last-of-type {
                height: auto;
            }
        }
    }

    .xbl-fr-grid(@densityMarginTopBottom, @densityMarginLeftRight, @densityMarginHelpTop) {
        .xbl-fr-grid {

            .fr-grid-th,
            .fr-grid-td,
            .fr-repeat-column-left,
            .fr-repeat-column-number,
            .fr-repeat-column-right,
            &.fr-repeat-multiple-rows .fr-grid-head {

                // Don't use padding on grids, so empty grids don't take space
                // Instead use a margin on the control inside the cell (see below)
                padding: 0;

                & > .xforms-control,
                & > .xbl-component,
                & > .xforms-group {

                    margin: @densityMarginTopBottom @densityMarginLeftRight;
                    display: block;

                    &:has(.fr-fixed-density) {
                        // Reduced margin around +/- buttons
                        margin: @densityMarginTopBottom @frGridDensityMarginCompactLeftRight;
                    }
                }
                // https://github.com/orbeon/orbeon-forms/issues/4213
                .input-prepend, .input-append {
                    display: flex;
                }
            }

            .fr-table {
                max-width: 100%;
                background-color: @tableBackground;
            }

            // Space after non-empty grids and repeated grids
            .fr-grid-non-empty, .fr-repeat {
                margin-bottom: 10px;
            }

            // =============================================================================================================
            // Change the layout in narrow layout
            // This now also applies to repeated grids:
            // https://github.com/orbeon/orbeon-forms/issues/4491
            // =============================================================================================================
            @media (max-width: 640px) {
                .fr-grid {
                    &.fr-norepeat, &.fr-repeat-single-row, &.fr-repeat-multiple-rows { // to make rule stronger
                        // https://github.com/orbeon/orbeon-forms/issues/4805
                        &:not(.fr-grid-css) {
                            & > .fr-grid-body .fr-grid-tr .fr-grid-td {
                                display: block;
                            }

                            &.fr-repeat-multiple-rows {
                                // Only keep 2 table headers: one for the column with the dropdown button, and one for fields
                                .fr-grid-th:nth-child(n+3) {
                                    display: none
                                }
                            }
                        }

                        &.fr-grid-css {
                            & > .fr-grid-body, & > .fr-grid-repeat-iteration > .fr-grid-body {
                                display: block;
                            }
                        }
                    }
                }
            }


            // =============================================================================================================
            // Hide LHH when needed
            // =============================================================================================================
            .fr-grid.fr-repeat {
                // Don't show LHH for controls inside a repeated table which repeats over a single row only (they are shown
                // in the column header). But only do this for the top-level control within a cell. Also, we now only do
                // this in wide layout, as in narrow layout we need to show again the LHH on each individual control.
                // https://github.com/orbeon/orbeon-forms/issues/4491

                // Use a mixin because Less CSS doesn't parse `@media` correctly
                .hide-lhh() {
                    &.fr-repeat-single-row {
                        .fr-grid-body .fr-grid-td {
                            & > .xforms-control, & > .xbl-component, & > .xforms-group {
                                & > .xforms-label,
                                & > .xforms-help,
                                & > .xforms-hint {
                                    display: none;
                                }
                            }
                        }
                    }
                }
                @media not (max-width: 640px) {
                    .hide-lhh();
                }
                // For the PDF renderer which doesn't support `@media` queries properly
                @media print {
                    .hide-lhh();
                }
            }

            // =============================================================================================================
            // Repeated grid top row/header row visibility
            // NOTE: Keep all the code related to top row/header row visibility here.
            // NOTE: In readonly AND multiple, the markup for the header row is not even present.
            // =============================================================================================================
            .fr-grid.fr-repeat {

                @media (max-width: 640px) {

                    // We don't show the header row
                    .fr-grid-head:is(.xforms-grid-appearance-minimal *) {
                        display: none;
                    }

                    // We never show the content of the header row
                    .fr-grid-repeat-top-row .fr-grid-head, .fr-grid-th,   // CSS
                    .fr-grid-head .fr-grid-master-row      .fr-grid-th {  // Table
                        display: none;
                    }

                }
            }

            // =============================================================================================================
            // Repeated grid alignments
            // NOTE: This section is incomplete, and other alignment rules are all over the place.
            // =============================================================================================================
            .fr-grid.fr-repeat {
                .fr-repeat-column-left, .fr-repeat-column-right, .fr-repeat-column-number {
                    text-align: center;
                    vertical-align: top;
                    align-self: normal; // not `center`, as that has a completely different behavior
                }

                .fr-grid-head {
                    .fr-repeat-column-left, .fr-repeat-column-right, .fr-repeat-column-number {
                        vertical-align: middle;
                    }
                }

                .fr-grid-repeat-top-row {
                    .fr-repeat-column-left, .fr-repeat-column-right, .fr-repeat-column-number {
                        align-self: normal; // not `center`, as that has a completely different behavior
                    }
                }
            }

            // =============================================================================================================
            // Repeated grid borders
            // NOTE: Keep all the code related to borders here.
            // =============================================================================================================

            // The `minimal` appearance doesn't have many borders
            &.xforms-grid-appearance-minimal {
                .fr-grid.fr-repeat {
                    &.fr-grid-css {
                        .fr-grid-repeat-iteration {
                            border-top: 2px solid #ddd;
                            margin-top: @minimalRepeatSeparatorSpacing; // to surround the border with more space on top and bottom
                            padding-top: @minimalRepeatSeparatorSpacing; // to surround the border with more space on top and bottom
                        }
                    }

                    &.fr-grid-table { // use `fr-grid-table` as the PDF renderer doesn't support `:not()`
                        // Apparently the PDF renderer doesn't support `:first-of-type` :(
                        .fr-grid-tr:first-child > {
                            .fr-grid-td, .fr-repeat-column-number, .fr-repeat-column-right {
                                // Use a mixin because Less CSS doesn't parse `@media` correctly
                                border-top: 2px solid #ddd;
                                padding-top: @minimalRepeatSeparatorSpacing; // to surround the border with more space on top and bottom
                            }
                        }
                    }
                }
            }

            // The `full` appearance uses more borders, but as of 2024-07-30 we decided to remove the cell borders
            // around form controls to make the look lighter.
            .full-appearance-borders() {
                .fr-grid.fr-repeat {

                    border: 1px solid #ddd;
                    border-radius: @baseBorderRadius;

                    .fr-repeat-column-left, .fr-repeat-column-number {
                        border-right: 1px solid #ddd;
                    }

                    .fr-repeat-column-right {
                        border-left: 1px solid #ddd;
                        vertical-align: top;
                        align-self: normal;
                    }

                    &.fr-grid-css {

                        // Wide layout
                        @media not (max-width: 640px) {
                            // In general, we want all rows except the first to have a top border
                            // So: if we have a head, that's all the iteration; if we don't, it all the iterations after the first
                            // Exception: readonly + multiple rows, where we have a head, but hide it with CSS, so here exclude it
                            .fr-grid-repeat-top-row:not(.xforms-readonly .fr-repeat-multiple-rows *) ~ .fr-grid-repeat-iteration,
                            .fr-grid-repeat-iteration                                                ~ .fr-grid-repeat-iteration {
                                border-top: 1px solid #ddd;
                            }
                        }

                        // Narrow layout
                        @media (max-width: 640px) {

                            // To align the grid with controls above and below it
                            margin-left: 4px;
                            margin-right: 4px;

                            // In narrow layout, we must never show the top border for the first
                            // `.fr-grid-repeat-iteration`.
                            .fr-grid-repeat-top-row:not(.xforms-readonly .fr-repeat-multiple-rows *) ~ .fr-grid-repeat-iteration,
                            .fr-grid-repeat-iteration                                                ~ .fr-grid-repeat-iteration {
                                border-top: 1px solid #ddd;
                            }
                        }
                    }

                    // Case of legacy table layout (also used for PDF)
                    &.fr-grid-table { // use `fr-grid-table` as the PDF renderer doesn't support `:not()`

                        border-collapse: separate; // otherwise we cannot have rounded corners

                        // Web: wide layout
                        @media not (max-width: 640px) {
                            // See comment above for the CSS grid / wide layout
                            .fr-grid-head:not(.xforms-readonly .fr-repeat-multiple-rows *) ~ .fr-grid-repeat-iteration,
                            .fr-grid-repeat-iteration                                      ~ .fr-grid-repeat-iteration {
                                & > tr > td { border-top: 1px solid #ddd; }
                            }
                        }

                        // Web: narrow layout
                        @media (max-width: 640px) {

                            // To align the grid with controls above and below it
                            margin-left: 4px;
                            margin-right: 4px;

                            .fr-grid-head:not(.xforms-readonly .fr-repeat-multiple-rows *) ~ .fr-grid-repeat-iteration,
                            .fr-grid-repeat-iteration                                      ~ .fr-grid-repeat-iteration {
                                & > tr > td { border-top: 1px solid #ddd; }
                            }
                        }

                        // PDF
                        @media print {
                            // The PDF renderer supports `+` but not `~`
                            &.fr-repeat-single-row    .fr-grid-repeat-iteration,
                            &.fr-repeat-multiple-rows .fr-grid-repeat-iteration + .xforms-repeat-delimiter + .fr-grid-repeat-iteration {
                                & > tr > td { border-top: 1px solid #ddd; }
                            }
                        }
                    }
                }
            }

            // For PDF renderer (which doesn't support `:not()`), class added in `print-pdf-notemplate.xsl`
            &.xforms-grid-appearance-full {
                .full-appearance-borders();
            }

            // For browser
            &:not(.xforms-grid-appearance-minimal) {
                .full-appearance-borders();
            }

            // =============================================================================================================

            // Minimal appearance buttons
            &.xforms-grid-appearance-minimal .fr-grid-bottom-buttons {

                display: block;
                margin-top: -10px; // reduce the space as the grid above has `margin-bottom: 10px`
                margin-bottom: 10px;

                .xforms-trigger {
                    margin-right: 1em;
                }
            }

            // Overrides for minimal appearance
            &.xforms-grid-appearance-minimal {
                .fr-grid {
                    &.fr-repeat {

                        .fr-grid-repeat-iteration {

                            .fr-grid-td, .fr-repeat-column-number, .fr-repeat-column-right {
                                border: none; // reset default, as we import other styles that set a border
                            }

                            .fr-grid-tr:last-child > {
                                .fr-grid-td, .fr-repeat-column-number, .fr-repeat-column-right {
                                    padding-bottom: @minimalRepeatSeparatorSpacing; // to surround the border with more space on top and bottom
                                }
                            }

                            .fr-repeat-column-number {
                                background-color: transparent;
                                border: none;
                            }
                        }
                    }
                }

                .fr-grid.fr-grid-css {
                    &.fr-repeat {

                        &:not(.fr-grid-readonly):not(.fr-grid-number-rows) {
                            .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                                grid-template-columns: auto 35px;
                            }
                        }

                        &:not(.fr-grid-readonly).fr-grid-number-rows {
                            .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                                grid-template-columns: 35px auto 35px;
                            }
                        }
                    }
                }
            }

            // For readonly MIP, see: https://github.com/orbeon/orbeon-forms/issues/5743
            &.xforms-readonly {
                & > .fr-grid.fr-grid-css {
                    &.fr-repeat:not(.fr-grid-readonly) {
                        &:not(.fr-grid-number-rows) {
                            .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                                grid-template-columns: auto;
                            }
                        }

                        &.fr-grid-number-rows {
                            .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                                grid-template-columns: 35px auto;
                            }
                        }
                    }
                }
            }

            // Grid displayed with CSS grids
            .fr-grid.fr-grid-css {

                &.fr-repeat {
                    @media (max-width: 640px) {
                        // To align the grid with controls above and below it
                        margin-left: 4px;
                        margin-right: 4px;
                    }

                    .fr-grid-th,
                    .fr-grid-td,
                    .fr-repeat-column-left,
                    .fr-repeat-column-number,
                    .fr-repeat-column-right,
                    &.fr-repeat-multiple-rows .fr-grid-head {
                        line-height: 20px;
                        vertical-align: top;
                    }

                    .fr-grid-repeat-top-row .fr-grid-head .fr-grid-th {
                        align-self: flex-end; // align the header row content at the bottom
                    }

                    .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                        display: grid;
                        width: 100%;
                    }

                    // For `readonly="true"` attribute, see: https://github.com/orbeon/orbeon-forms/issues/5743
                    &.fr-grid-readonly:not(.fr-grid-number-rows) {
                        .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                            grid-template-columns: auto;
                        }
                    }

                    &.fr-grid-readonly.fr-grid-number-rows {
                        .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                            grid-template-columns: 35px auto;
                        }
                    }

                    &:not(.fr-grid-readonly):not(.fr-grid-number-rows) {
                        .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                            grid-template-columns: 35px auto;
                        }
                    }

                    &:not(.fr-grid-readonly).fr-grid-number-rows {
                        .fr-grid-repeat-top-row, .fr-grid-repeat-iteration {
                            grid-template-columns: 35px 35px auto;
                        }
                    }
                }

                .generateColumnStart(@x) when (@x > 0) {
                    .fr-grid-td[data-fr-x =  '@{x}'], .fr-grid-th[data-fr-x =  '@{x}'] {
                        grid-column-start: @x;
                    }
                    .generateColumnStart(@x - 1)
                }

                .generateRowStart(@y) when (@y > 0) {
                    .fr-grid-td[data-fr-y =  '@{y}'] {
                        grid-row-start: @y;
                    }
                    .generateRowStart(@y - 1)
                }

                .generateColumnEnd(@w) when (@w > 0) {
                    .fr-grid-td[data-fr-w =  '@{w}'], .fr-grid-th[data-fr-w =  '@{w}'] {
                        grid-column-end: span @w;
                    }
                    .generateColumnEnd(@w - 1)
                }

                .generateRowEnd(@h) when (@h > 0) {
                    .fr-grid-td[data-fr-h =  '@{h}'] {
                        grid-row-end: span @h;
                    }
                    .generateRowEnd(@h - 1)
                }

                &.fr-grid-12 {
                    .fr-grid-head, .fr-grid-body {
                        grid-template-columns: repeat(12, 1fr);
                        //grid-template-rows: repeat(3, minmax(120px, max-content));
                        //grid-template-rows: repeat(auto-fill, 1fr); // TODO: vertical repeat sizes must be definite; figure out how to do min-height
                        .generateColumnStart(12);
                        .generateColumnEnd(12);
                    }
                }

                &.fr-grid-24 {
                    .fr-grid-head, .fr-grid-body {
                        grid-template-columns: repeat(24, 1fr);
                        .generateColumnStart(24);
                        .generateColumnEnd(24);
                    }
                }

                .fr-grid-head, .fr-grid-body {
                    display: grid;

                    .fr-grid-td {
                        grid-column-end: span 1;
                        grid-column-end: span 1;
                        grid-row-end: span 1;
                    }

                    .generateRowStart(20);
                    .generateRowEnd(20);
                }
            }

            // Grid NOT displayed with CSS grids
            .fr-grid:not(.fr-grid-css) { // this is the enclosing `<div>` or `<table>` element
                .grid-not-css();
            }

            .fr-grid {

                &.fr-repeat .fr-grid-th {
                    &.fr-field-align-left {
                        .xforms-label, .xforms-hint {
                            text-align: left;
                        }
                    }

                    &.fr-field-align-right {
                        .xforms-label, .xforms-hint {
                            text-align: right;
                        }
                    }
                }

                .xforms-help {
                    float: left;
                    margin-top: (@baseLineHeight - 14)/2 + 1; // Vertically center help image on first line
                    margin-right: 3px;

                    .help-icon();
                }

                .xforms-label {
                    font-weight: 600; // Help label stand out
                    margin-top: 2px; // Nicer to have a bit of space at the top to separate controls a bit more, esp. when outside grid cells
                    margin-bottom: @frGridCellPadding; // Insert some space between the label / help and the control (we add spacing below the label rather
                    // than above the control to make the CSS more generally applicable to XBL components)
                    overflow: hidden; // So the block area doesn't extend below the floated help, when there is one. Also see http://bit.ly/ruAKSU
                    display: table; // Instead of block, so:
                    // - We don't capture clicks to the right of the text
                    // - We prevent further content on the same line
                    > div:first-child {
                        display: inline;
                    }

                    // Don't go on a new line after a required '*'
                }

                .xforms-label:empty {
                    display: none; // no reason for the label to take space in this case
                }

                // Controls
                select,
                textarea,
                input[type="text"], // Like Bootstrap, use all the specific types to exclude checkbox/radio
                input[type="password"],
                input[type="datetime"],
                input[type="datetime-local"],
                input[type="date"],
                input[type="month"],
                input[type="time"],
                input[type="week"],
                input[type="number"],
                input[type="email"],
                input[type="url"],
                input[type="search"],
                input[type="tel"],
                input[type="color"],
                .uneditable-input,
                .input-append {
                    width: 100%;
                }

                .xforms-textarea textarea {
                    width: 100%; // It's a reasonable default for textareas to be as wide as allowed
                }

                .xforms-select-appearance-full, .xforms-select1-appearance-full {
                    .xforms-items {
                        width: 100%;
                        box-sizing: border-box;

                        &[role = group][tabindex = '0'],
                        &[role = radiogroup][tabindex = '0'] {
                            padding: 4px 6px;
                        }
                    }
                }

                .xbl-fr-checkbox-input {
                    .xforms-select-appearance-full, .xforms-select1-appearance-full {
                        .xforms-items {
                            padding: 4px 0; // for alignment with horizontal selection controls
                        }
                    }
                }

                // Usually there is no `rows` attribute used, but if there is the
                textarea[rows] {
                    height: auto;
                }

                input[type="file"] {
                    width: auto;
                }

                // Better to be wide as well
                .xbl-fr-inplace-input {
                    width: 100%;

                    input {
                        width: 100%;
                    }
                }

                // Fixed-width pre-2018.2 date and time width, kept for backward compatibility
                .xforms-input input {
                    &.xforms-type-date, &.xforms-type-time {
                        width: 7.5em;
                    }
                }

                // Image output
                .xforms-mediatype-image {
                    width: 100%;
                    overflow: auto;
                    display: block;
                }

                .xforms-mediatype-image img {
                    display: block;
                    border-radius: @baseBorderRadius;
                }

                //  Buttons
                .fr-grid-td {
                    .xforms-trigger button, .xforms-trigger input {
                        margin-top: 1.72em
                    }

                    // hand-tuned so it appears at about the same pos as input fields
                    .xforms-trigger button, .yui-button .xforms-trigger input {
                        margin-top: 0
                    }

                    // except YUI buttons don't appear right with top margin!

                    // Try not to allow buttons to go over the width of a cell
                    .xforms-trigger-appearance-full .btn {
                        max-width: 100%;
                        word-wrap: break-word;
                        white-space: break-spaces;
                        word-break: break-word;
                    }
                }
            }

            .fr-grid.fr-repeat {

                .fr-grid-body .fr-grid-td {
                    & > .xforms-control, & > .xbl-component, & > .xforms-group {
                        padding-top: 0; // No top/bottom padding in repeated grid cells
                        padding-bottom: 0.1px; // 0 causes https://github.com/orbeon/orbeon-forms/issues/2690
                    }
                }

                &.fr-repeat-single-row {
                    .fr-grid-master-row > .fr-grid-th span.xforms-group { // So the group that contains the control label is sized, to allow
                        display: block; // the help popover to be correctly positioned
                    }
                }

                // But if there is a nested table, show those in the label in the column header of that table
                .fr-grid-head .fr-grid-th {
                    overflow-wrap: break-word;
                    // https://github.com/orbeon/orbeon-forms/issues/5716
                    word-wrap: break-word; // keep also `word-wrap`, even if it's deprecated in favor of `overflow-wrap`, for the PDF renderer

                    .xforms-label {
                        display: block; // label in repeat table header is block so yellow background in FB takes the whole width
                        margin: @densityMarginTopBottom @densityMarginLeftRight;
                    }

                    &:has(.xforms-hint) .xforms-label {
                        // Keep bottom margin low even with more spacious densities
                        margin-bottom: @frGridDensityMarginCompactTopBottom;
                    }

                    .xforms-help {
                        margin-top: @densityMarginHelpTop;
                        margin-left: @densityMarginLeftRight;
                    }

                    .xforms-hint {
                        // Keep top margin low even with more spacious densities
                        margin-top: @frGridDensityMarginCompactTopBottom;
                        margin-left: @densityMarginLeftRight;
                    }
                }

                .fr-repeat-column-left, .fr-repeat-column-right, .fr-repeat-column-number {
                    width: 35px;
                    box-sizing: border-box;

                    .xforms-trigger .btn-link {
                        text-decoration: none;
                        color: black;
                    }

                    button {
                        display: block;
                        margin: auto;
                    }
                }

                .fr-repeat-column-left, .fr-repeat-column-right {
                    text-align: left;
                }

                .fr-repeat-column-number {
                    .badge {
                        margin: @frGridCellPadding + 2 @frGridCellPadding;
                        font-size: smaller;
                    }

                    @media print {
                        .badge {
                            color: @textColor;
                            background-color: transparent;
                        }
                    }
                }

                // Highlight the current grid row
                .xforms-repeat-selected-item-1 {
                    .fr-repeat-column-left, .fr-repeat-column-number {
                        @media not print {
                            background-color: @grayLighter;
                        }
                    }
                }

                // Hide menu button...
                .fr-repeat-column-left .dropdown {
                    display: none;
                }

                // ... but show it if there is at least one operation
                .can-remove, .can-move-up, .can-move-down, .can-insert-above, .can-insert-below {
                    .dropdown {
                        display: block;
                        // Margin around button, but not menu itself, which also has the `dropdown` class
                        &:not(.open) {
                            margin: @frGridCellPadding
                        }
                    }
                }

                // Update caret icon with Font Awesome
                .dropdown .fa-caret-down {
                    width: 8px;
                    height: 12px;
                    margin: 4px auto;
                }
            }
        }
    }

    .xbl-fr-grid(@frGridDensityMarginCompactTopBottom, @frGridDensityMarginCompactLeftRight, @frGridDensityMarginCompactHelpTop); // Default density
    .fr-density-compact     { .xbl-fr-grid(@frGridDensityMarginCompactTopBottom    , @frGridDensityMarginCompactLeftRight    , @frGridDensityMarginCompactHelpTop);     }
    .fr-density-comfortable { .xbl-fr-grid(@frGridDensityMarginComfortableTopBottom, @frGridDensityMarginComfortableLeftRight, @frGridDensityMarginComfortableHelpTop); }
    .fr-density-roomy       { .xbl-fr-grid(@frGridDensityMarginRoomyTopBottom      , @frGridDensityMarginRoomyLeftRight      , @frGridDensityMarginRoomyHelpTop);       }

    // Changes for view mode only
    .fr-mode-view {

        .fr-grid .fr-grid-body > .fr-grid-td {
            &> .xforms-control,
            &> .xbl-component,
            &> .xforms-group {
                margin-bottom: 3 * @frGridCellPadding;
            }
        }

        .fr-grid.fr-repeat .fr-grid-body > .fr-grid-td {
            &> .xforms-control, &> .xbl-component, &> .xforms-group {
                background-color: transparent;
                margin-bottom: @frGridCellPadding; // some margin as there is no more padding
            }
        }
    }

    @media print {

        .fr-mode-view, .fr-mode-pdf, .fr-mode-email {

            // https://github.com/orbeon/orbeon-forms/issues/4158
             &.fr-pdf-color-mode-black-and-white {
                .fr-grid .xforms-readonly {
                    &.xforms-static {
                        &.xforms-textarea pre,
                        &.xforms-output.xforms-mediatype-text-html.xforms-text,           // `fr:explanation`
                        &.xforms-output.xforms-mediatype-text-html .xforms-output-output, // HTML text output
                        .xforms-field {
                            * {
                                .black-and-white-properties();
                            }
                        }
                    }
                    &.xbl-fr-tinymce .xbl-fr-tinymce-div { // "Formatted Text" component
                        * {
                            .black-and-white-properties();
                        }
                    }
                }
            }

            &.fr-pdf-color-mode-black-and-white, &.fr-pdf-color-mode-keep-field-colors {
                .fr-grid .xforms-readonly {
                    &.xforms-static {
                        &.xforms-textarea pre,
                        &.xforms-output.xforms-mediatype-text-html.xforms-text,           // `fr:explanation`
                        &.xforms-output.xforms-mediatype-text-html .xforms-output-output, // HTML text output
                        .xforms-field {
                            .black-and-white-properties();
                        }
                    }
                    &.xbl-fr-tinymce .xbl-fr-tinymce-div { // "Formatted Text" component
                        .black-and-white-properties();
                    }
                }
            }

            // Values below are empirical
            .span12 {
                width: 98%; // unclear why 100% doesn't work
            }

            .fr-grid {

                .grid-not-css();

                .xforms-field, .xforms-textarea > pre {

                    padding: @frGridCellPadding @frGridCellPadding+2px;
                    display: block;

                    box-sizing: border-box;
                    min-height: @controlsHeight - 2 * 2px !important; // not sure why it doesn't kick in otherwise
                    line-height: @controlsHeight - 2 * 2px;
                }
            }

            // Bootstrap adds `content: " (" attr(href) ")"` and `content: " (" attr(title) ")"`
            a[href]:after, abbr[title]:after {
                content: "";
            }
        }
    }
}
