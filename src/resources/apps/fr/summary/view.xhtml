<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<html xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:ev="http://www.w3.org/2001/xml-events"
      xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:f="http://orbeon.org/oxf/xml/formatting"
      xmlns:xh="http://www.w3.org/1999/xhtml"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
      xmlns:saxon="http://saxon.sf.net/"
      xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
      xmlns:index="org.orbeon.oxf.fr.relational.Index"
      xmlns:version="java:org.orbeon.oxf.common.Version"
      xmlns="http://www.w3.org/1999/xhtml">

    <head>
        <!-- Make sure to use the source form's title -->
        <xh:title><xf:output value="$source-form-metadata/title[@xml:lang = xxf:lang()], $source-form-metadata/title"/></xh:title>
        <xh:link rel="stylesheet" href="/apps/fr/style/form-runner-summary.css" type="text/css" media="all"/>

        <!-- This page needs access to Form Builder permission -->
        <xi:include href="oxf:/apps/fr/includes/permissions-model.xml" xxi:omit-xml-base="true"/>
        <!-- FR Summary page XForms model -->
        <xf:model id="fr-form-model" xxf:xpath-analysis="true">

            <xf:var name="parameters" value="xxf:instance('fr-parameters-instance')"/>

            <xf:var name="app"  value="$parameters/app/string()"/>
            <xf:var name="form" value="$parameters/form/string()"/>

            <xf:var name="is-fb"        value="$app = 'orbeon' and $form = 'builder'"/>
            <xf:var name="has-fb-roles" value="$is-fb and not(xxf:instance('fb-permissions')/@has-roles = 'false')"/>

            <xf:var
                name="app-query"
                as="element(query)?"
                value="
                    if ($has-fb-roles)
                    then
                        instance('fr-search-instance')/query[
                            contains(@path, 'application-name')
                            and @search-field = 'true'
                        ]
                    else
                        ()"/>

            <xf:var
                name="form-query"
                as="element(query)?"
                value="
                    if ($app-query)
                    then
                        instance('fr-search-instance')/query[
                            contains(@path, 'form-name')
                            and @search-field = 'true'
                        ]
                    else
                        ()"/>

            <xf:var
                name="has-fb-roles-for-all-apps"
                value="$has-fb-roles and exists(xxf:instance('fb-permissions')/app[@name = '*'])"/>

            <xf:var
                name="initial-app-value"
                as="xs:string?"
                value="
                    if ($app-query)
                    then xxf:instance('fb-permissions')/app[1][not(@name = '*')]/@name
                    else ()"/>

            <xf:var name="selection-is-one-document" value="count(xxf:split(instance('fr-selection-instance'))) = 1"/>
            <xf:var name="selection-data-or-draft"   value="if ($selection-is-one-document) then substring-before(instance('fr-selection-instance'), '/') else ()"/>
            <xf:var name="selection-document-id"     value="if ($selection-is-one-document) then substring-after (instance('fr-selection-instance'), '/') else ()"/>

            <!-- Source form -->
            <xf:instance id="fr-source-form-instance" xxf:readonly="false"><!-- Set to false so that xf:insert works -->
                <form xmlns=""/>
            </xf:instance>

            <xf:var
                name="source-form-metadata"
                value="instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-metadata']/*"/>

            <xf:var
                name="source-form-attachments"
                value="instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-attachments']/*"/>

            <xf:var
                name="has-pdf-template"
                value="normalize-space($source-form-attachments/pdf)"/>

            <!-- NOTE: use xxf:cache="false" otherwise updates to the form won't work in the summary page -->
            <!-- A solution for this might be for read-form.xpl, which is able to use conditional GET, to run always, or to
                 improve submissions to handle conditional GET as well when using caching. -->
            <xf:submission id="get-source-form-submission"
                    method="get" serialization="none"
                    resource="/fr/service/persistence/crud/{$app}/{$form}/form/form.xhtml"
                    replace="instance" instance="fr-source-form-instance" xxf:readonly="true" xxf:cache="false" xxf:xinclude="true"/>

            <!-- Standard Form Runner data instance -->
            <!-- TODO: Can we remove this? -->
            <xf:instance id="fr-form-instance">
                <dummy/>
            </xf:instance>

            <!-- Standard Form Runner resources instance -->
            <!-- Initially empty, but we copy the source form resources into there during initialization.
                 fr-persistence-model then has access to the form resources as if in the detail page. -->
            <xf:instance id="fr-form-resources">
                <resources xmlns=""/>
            </xf:instance>

            <!-- Instance to control the triggers' appearance -->
            <xf:instance id="fr-summary-triggers-instance">
                <triggers xmlns="">
                    <enabled/>
                    <disabled/>
                </triggers>
            </xf:instance>

            <xf:bind ref="instance('fr-summary-triggers-instance')/disabled" readonly="true()"/>

            <xf:var name="parameters" value="xxf:instance('fr-parameters-instance')"/>

            <xf:action ev:event="fr-summary-create">
                <xf:load resource="/fr/{$app}/{$form}/new{if (property('xxf:noscript')) then '?fr-noscript=true' else ''}"/>
            </xf:action>

            <xf:action ev:event="fr-summary-view" if="$selection-is-one-document">
                <xf:var name="params" value="(
                        if (property('xxf:noscript'))           then 'fr-noscript=true' else (),
                        if ($selection-data-or-draft = 'draft') then 'draft=true'       else ()
                    )"/>
                <xf:load resource="/fr/{$app}/{$form}/view/{$selection-document-id}{if (exists($params)) then concat('?', string-join($params, '&amp;')) else ()}"/>
            </xf:action>

            <!-- Instance to track search results and paging -->
            <!-- NOTE: As of 2011-11-28, `app` and `form` are not set by us. We leave them in for now because the
                 built-in eXist, Oracle and MySQL implementations rely on them in the Form Runner page flow. -->
            <xf:instance id="fr-search-instance">
                <search xmlns="">
                    <query/>
                    <page-size>5</page-size>
                    <page-number>1</page-number>
                    <lang/>
                </search>
            </xf:instance>

            <xf:bind ref="instance('fr-search-instance')">
                <!-- Don't send this to the server -->
                <xf:bind ref="query/(@search-field | @summary-field)" relevant=". = 'true'"/>
                <!-- Set types so the search fields display the proper controls -->
                <xf:bind ref="query[ends-with(@type, ':date')]"     type="xf:date"/>
                <xf:bind ref="query[ends-with(@type, ':time')]"     type="xf:time"/>
                <xf:bind ref="query[ends-with(@type, ':dateTime')]" type="xf:dateTime"/>
                <xf:bind ref="query[ends-with(@type, ':decimal')]"  type="xf:decimal"/>

                <!-- Set default value for app and form if needed -->
                <!-- Do this declaratively so we don't depend on order of execution of submissions -->
                <xf:bind ref="$app-query" readonly="false()"
                             calculate="if (normalize-space() = '' and $initial-app-value) then $initial-app-value else ."/>
                <!-- Adjust value for form if there is an app constraint and a form constraint -->
                <xf:bind ref="$form-query" readonly="false()"
                         calculate="(for $a in xxf:instance('fb-permissions')/app[@name = $app-query]
                                         return for $current in . return if ($a/form[@name = ($current, '*')]) then .
                                             else $a/form[1]/@name, .)[1]"/>
                <!-- Force exact query match if there is an app constraint -->
                <xf:bind ref="$app-query/@match" readonly="false()" calculate="if ($initial-app-value) then 'exact' else ."/>
                <!-- Force exact query match if there is a form constraint -->
                <xf:bind ref="$form-query/@match" readonly="false()" calculate="if (xxf:instance('fb-permissions')/app[@name = $app-query]/form[1][not(@name = '*')]) then 'exact' else ."/>

            </xf:bind>

            <!-- Paging information -->
            <xf:instance id="fr-paging-instance">
                <search xmlns="">
                    <total/>
                    <search-total/>
                    <page-size/>
                    <page-number/>
                    <page-count/>
                    <from>0</from>
                    <to>0</to>
                    <prev-trigger/>
                    <next-trigger/>
                </search>
            </xf:instance>

            <!-- Calculations for page navigation -->
            <xf:bind ref="instance('fr-paging-instance')">
                <xf:bind ref="total"        calculate="(instance('fr-summary-instance')/@total, 0)[1]"/>
                <xf:bind ref="search-total" calculate="(instance('fr-summary-instance')/@search-total, 0)[1]"/>
                <xf:bind ref="page-size"    calculate="instance('fr-search-instance')/page-size"/>
                <xf:bind ref="page-number"  calculate="instance('fr-search-instance')/page-number"/>
                <xf:bind ref="page-count"   calculate="(../search-total + ../page-size - 1) idiv ../page-size"/>
                <xf:bind ref="from"         calculate="if (../search-total = 0) then 0 else (../page-number - 1) * ../page-size + 1"/>
                <xf:bind ref="to"           calculate="min((../page-number * ../page-size, ../search-total))"/>
                <xf:bind ref="prev-trigger" readonly="../search-total = 0 or xs:integer(../page-number) le 1"/>
                <xf:bind ref="next-trigger" readonly="../search-total = 0 or xs:integer(../search-total) le xs:integer(../to)"/>
            </xf:bind>

            <xf:instance id="fr-selection-instance">
                <selection xmlns=""/>
            </xf:instance>

            <!-- 1. Load source form -->
            <xf:action ev:event="xforms-model-construct-done">
                <xf:var name="source-form" value="xxf:get-request-attribute('fr-form-definition')"/>
                <xf:action if="exists($source-form)">
                    <!-- Got it from the request -->
                    <xf:message level="xxf:log-debug">Got source form from request.</xf:message>
                    <xf:insert ref="instance('fr-source-form-instance')" origin="$source-form"/>
                </xf:action>
                <xf:action if="not(exists($source-form))">
                    <!-- Try submission -->
                    <xf:message level="xxf:log-debug">Could not get source form from request. Trying submission instead.</xf:message>
                    <xf:send submission="get-source-form-submission"/>
                </xf:action>

                <!-- Send a "Not Found" error if the form definition is not found -->
                <xf:action if="empty(instance('fr-source-form-instance')/xh:head/xf:model)" type="xpath">
                    frf:sendError(404)
                </xf:action>
            </xf:action>

            <!-- 2. Check for authorized operations -->
            <xf:action ev:event="xforms-model-construct-done">

                <!-- Send a "Not Found" error if the form is not available -->
                <xf:action if="$source-form-metadata/available = 'false'" type="xpath">frf:sendError(404)</xf:action>

                <!-- Same code in relational search.xpl but in XSLT -->
                <!-- TODO: Remove redundancy once relational support is rewritten in Scala -->
                <!-- Also similar code in persistence-model.xml, but that code is disabled for the Summary page -->
                <xf:var name="permissions"                value="$source-form-metadata/permissions"/>
                <xf:var name="search-operations"          value="('*', 'read', 'update', 'delete')"/>
                <xf:var name="search-permissions"         value="$permissions/permission[xxf:split(@operations) = $search-operations]"/>

                <!-- Are we authorized to see all the data based because of our role? -->
                <xf:var name="operations-from-role"       value="frf:authorizedOperationsBasedOnRoles($permissions)"/>
                <xf:var name="authorized-based-on-role"   value="$operations-from-role = $search-operations"/>

                <!-- Are we authorized to see data if we are the owner / group member? -->
                <xf:var name="authorized-if-owner"        value="exists($search-permissions[owner])"/>
                <xf:var name="authorized-if-group-member" value="exists($search-permissions[group-member])"/>

                <!-- Whether the current user is anonymous -->
                <xf:var name="anonymous" value="normalize-space(xxf:get-request-header('orbeon-username')) = ''"/>

                <xf:message level="xxf:log-debug">
                    AUTHORIZED OPERATIONS ON FORM (SUMMARY MODE): <xf:output value="string-join($operations-from-role, ' ')"/>
                    AUTHORIZED BASED ON ROLE: <xf:output value="$authorized-based-on-role"/>
                    AUTHORIZED IF OWNER: <xf:output value="$authorized-if-owner"/>
                    AUTHORIZED IF GROUP MEMBER: <xf:output value="$authorized-if-group-member"/>
                    ANONYMOUS: <xf:output value="$anonymous"/>
                </xf:message>

                <!-- Send an "Unauthorized" error for the page if the user doesn't have role-based permission and we
                     know that we cannot get further permissions from the persistence layer. This is the case if:

                     1. The user is anonymous.
                     2. Or there are no owner/group permissions specified for the form.
                     3. Or the persistence implementation doesn't support owner/group permissions.
                 -->
                <xf:action
                    type="xpath"
                    if="not($operations-from-role = $search-operations)
                        and (
                            $anonymous
                            or not($authorized-if-owner or $authorized-if-group-member)
                            or not(frf:ownerGroupPermissionsSupported($app, $form))
                        )">
                    frf:sendError(403)
                </xf:action>

                <!-- Remember global operations -->
                <xf:setvalue ref="xxf:instance('fr-authorized-operations')" value="string-join($operations-from-role, ' ')"/>
            </xf:action>

            <!-- 3. Rest of initialization -->
            <xf:action ev:event="xforms-model-construct-done">

                <!-- Load resources -->
                <xf:var name="resources-instance" as="element(xf:instance)"
                        value="instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-resources']"/>

                <xf:action if="not($resources-instance/@src)">
                    <!-- Copy inline instance -->
                    <xf:insert ref="instance('fr-form-resources')" origin="$resources-instance/*"/>
                </xf:action>
                <xf:action if="$resources-instance/@src">
                    <!-- Dereference @src -->
                    <xf:insert ref="instance('fr-form-resources')" origin="doc($resources-instance/@src)"/>
                </xf:action>
                <!-- Update to current language -->
                <xf:dispatch name="fr-update-language" targetid="fr-resources-model"/>

                <!-- Set page size -->
                <xf:var name="page-size" value="instance('fr-search-instance')/page-size" as="element(page-size)"/>
                <xf:setvalue ref="$page-size" model="fr-persistence-model"
                             value="xxf:property(string-join(('oxf.fr.summary.page-size', $app, $form), '.'))"/>

                <!-- Create elements holding structured search data -->
                <xf:insert
                    context="instance('fr-search-instance')"
                    ref="query"
                    origin="index:findIndexedControlsAsXML(instance('fr-source-form-instance')/root())"/>

                <!-- If requested to, only show drafts for never saved document -->
                <xf:insert if="xxf:get-request-parameter('drafts-for-never-saved-document') = 'true'"
                           context="instance('fr-search-instance')"
                           origin="xxf:element('drafts', (xxf:attribute('for-never-saved-document', 'true'), 'only'))"/>

                <!-- Query initial list of documents -->
                <xf:send submission="search-submission"/>

            </xf:action>

            <!-- 4. If roles are enabled but no role applies, the page is unauthorized.
                NOTE: Do this upon `xforms-ready` because `fb-permissions` instance is not ready upon
                `xforms-model-construct-done`. -->
            <xf:action
                ev:event="xforms-ready"
                if="$has-fb-roles and not($has-fb-roles-for-all-apps) and empty($initial-app-value)"
                type="xpath">
                frf:sendError(403)
            </xf:action>

            <!-- Reset search selection and navigation -->
            <xf:action ev:event="fr-reset-search">

                <xf:setvalue ref="instance('fr-selection-instance')"/>
                <xf:setindex repeat="documents-repeat" index="1"/>
                <xf:setvalue ref="instance('fr-search-instance')/page-number" value="1"/>

                <xf:send submission="search-submission"/>
            </xf:action>

            <!-- Summary data -->
            <xf:instance id="fr-summary-instance">
                <documents xmlns="" total="0" search-total="0">
                    <!-- Content will be like this -->
                    <!--
                    <document name="" created="" last-modified="">
                        <id/>
                        <details>
                            <detail/>
                            <detail/>
                        </details>
                    </document>
                    -->
                </documents>
            </xf:instance>

            <!-- This submission doesn't validate as we allow sending incomplete date, time and dateTime -->
            <xf:submission id="search-submission"
                    ref="instance('fr-search-instance')" validate="false"
                    method="post" resource="/fr/service/persistence/search/{$app}/{$form}"
                    replace="instance" instance="fr-summary-instance">
                <!-- Set language upon submitting -->
                <xf:action ev:event="xforms-submit">
                    <!-- This works now that #122 is fixed https://github.com/orbeon/orbeon-forms/issues/122 -->
                    <!-- NOTE: xxf:lang() doesn't seem to work here -->
                    <xf:setvalue ref="lang" value="xxf:instance('fr-language-instance')"/>
                </xf:action>
                <xf:action ev:event="xforms-submit-error">
                    <!-- i18n -->
                    <xf:message>Error performing search.</xf:message>
                </xf:action>
            </xf:submission>

            <!-- Update search if the UI language changes if we are Form Builder (the only case using lang in search for now) -->
            <!-- See https://github.com/orbeon/orbeon-forms/issues/1376 -->
            <xf:send
                observer="fr-language-selector"
                event="xforms-value-changed"
                if="$is-fb"
                submission="search-submission"/>

            <!-- Duplicate -->
            <xf:instance id="fr-duplicate" xmlns=""><document-id/></xf:instance>

            <!-- Read form data for the duplicate button -->
            <!-- NOTE: It would be nice if this could be done entirely with a process. -->
            <xf:submission
                id="call-duplicate-service"
                ref="instance('fr-duplicate')"
                method="post"
                action="/fr/service/{$app}/{$form}/duplicate"
                replace="instance">

                <xf:setvalue
                    event="xforms-submit"
                    ref="instance('fr-duplicate')"
                    value="event('document')"/>

                <xf:action ev:event="xforms-submit-error">
                    <!-- TODO: i18n -->
                    <xf:message>Error performing duplication.</xf:message>
                </xf:action>

            </xf:submission>

        </xf:model>
    </head>
    <body>
        <fr:navbar/>
        <xh:div class="container">

            <!-- These are the permissions granted to the current user based on the current roles. Because we
                 are not the Detail page, fr-authorized-operations does not contain permissions from the
                 persistence layer. -->
            <xf:var
                name="global-operations"
                value="xxf:split(xxf:instance('fr-authorized-operations'))"/>

            <fr:row>
                <!--<fr:header>-->
                    <!--&lt;!&ndash; Make sure to use the source form's logo &ndash;&gt;-->
                    <!--<fr:logo paths="$source-form-metadata/logo[@xml:lang = xxf:lang()], $source-form-metadata/logo"/>-->
                    <!--<fr:title/>-->
                    <!--<fr:language-selector/>-->
                    <!--<fr:noscript-selector/>-->
                    <!--<fr:form-builder-doc/>-->
                    <!--<fr:goto-content/>-->
                <!--</fr:header>-->
                <!--<fr:description paths="$source-form-metadata/description[@xml:lang = xxf:lang()], $source-form-metadata/description"/>-->
                <fr:body>
                    <xf:group class="fr-summary-search">

                        <!-- Search also when user presses "enter" in a field -->
                        <xf:dispatch
                            ev:event="DOMActivate"
                            name="fr-reset-search"
                            targetid="fr-form-model"/>

                        <!-- Search also when dropdown value changes -->
                        <xf:dispatch
                            ev:event="xforms-value-changed"
                            ev:target="search-select1"
                            name="fr-reset-search"
                            targetid="fr-form-model"/>

                        <xf:switch id="search-switch">
                            <!-- Free-text search -->
                            <xf:case id="search-free">
                                <xh:div class="fr-search-free">
                                    <xf:input ref="instance('fr-search-instance')/query"/>
                                </xh:div>
                            </xf:case>
                            <!-- Search options -->
                            <xf:case id="search-options">
                                <xh:div class="fr-search-options">
                                    <!-- Special form builder search: use input or select1 for app/form name -->

                                    <!-- Application -->
                                    <xf:group ref="$app-query[$has-fb-roles]" class="fr-summary-search-item">
                                        <xf:var name="label" value="frf:htmlFieldLabel(@name, @html-label = 'true', $form-resources)"/>
                                        <!-- Use an input if app name is a wildcard -->
                                        <xf:var name="is-input" value="$has-fb-roles-for-all-apps"/>
                                        <xf:input ref=".[$is-input]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                        </xf:input>
                                        <xf:select1 ref=".[not($is-input)]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                            <xf:itemset ref="xxf:instance('fb-permissions')/app">
                                                <xf:label ref="@name"/>
                                                <xf:value ref="@name"/>
                                            </xf:itemset>

                                            <xf:action ev:event="xforms-value-changed">
                                                <!-- Clear dependent form, actual value is recalculated just before submission if needed -->
                                                <xf:setvalue ref="$form-query"/>

                                                <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                                            </xf:action>
                                        </xf:select1>
                                    </xf:group>
                                    <!-- Form -->
                                    <xf:group ref="$form-query" class="fr-summary-search-item">
                                        <xf:var name="label" value="frf:htmlFieldLabel(@name, @html-label = 'true', $form-resources)"/>
                                        <xf:var name="current-app" value="xxf:instance('fb-permissions')/app[@name = $app-query]"/>
                                        <!-- Use an input if app name or form name is a wildcard -->
                                        <xf:var name="is-input" value="$has-fb-roles-for-all-apps or $current-app/form[@name = '*']"/>
                                        <xf:input ref=".[$is-input]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                        </xf:input>
                                        <xf:select1 ref=".[not($is-input)]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                            <xf:itemset ref="$current-app/form">
                                                <xf:label ref="@name"/>
                                                <xf:value ref="@name"/>
                                            </xf:itemset>

                                            <!-- Update search results when selection changes -->
                                            <xf:dispatch ev:event="xforms-value-changed" name="fr-reset-search" targetid="fr-form-model"/>
                                        </xf:select1>
                                    </xf:group>
                                    <!-- Structured search over query terms that have search-field set to 'true' -->
                                    <xf:repeat ref="instance('fr-search-instance')/query[@path and @search-field = 'true']" id="search-repeat">
                                        <xf:var name="control-name" value="@name"/>
                                        <xf:var name="label" value="frf:htmlFieldLabel(@name, @html-label = 'true', $form-resources)"/>

                                        <xf:group ref=".[not($has-fb-roles and (contains(@path, 'application-name') or contains(@path, 'form-name')))]" class="fr-summary-search-item">
                                            <!-- Regular search field (exclude app/form name if we are Form Builder and we have roles) -->

                                            <!-- input -->
                                            <!-- Testing on control name is not ideal, see https://github.com/orbeon/orbeon-forms/issues/2077 -->
                                            <xf:input ref=".[@control = ('input', 'inplace-input', 'output')]">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </xf:input>
                                            <fr:number ref=".[@control = 'number']">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:number>
                                            <fr:currency ref=".[@control ='currency']">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:currency>
                                            <!-- textarea -->
                                            <xf:input ref=".[@control = 'textarea']">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </xf:input>
                                            <!-- select1 -->
                                            <xf:select1 ref=".[frf:isSingleSelectionControl(@control)]" id="search-select1">
                                                <xf:label mediatype="text/html" value="$label"/>
                                                <xf:item>
                                                    <xf:label ref="$fr-resources/summary/labels/any"/>
                                                    <xf:value/>
                                                </xf:item>
                                                <xf:itemset model="fr-persistence-model"
                                                            ref="$form-resources/*[local-name() = $control-name]/item">
                                                    <xf:label ref="label"/>
                                                    <xf:value ref="value"/>
                                                </xf:itemset>
                                            </xf:select1>
                                        </xf:group>
                                    </xf:repeat>
                                </xh:div>
                            </xf:case>
                        </xf:switch>

                        <xh:div class="fr-search-buttons">
                            <xf:trigger>
                                <xf:label mediatype="text/html" value="$fr-resources/summary/search/search-forms"/>
                            </xf:trigger>
                            <!-- Don't allow showing search options if there are no search fields specified -->
                            <xf:trigger appearance="minimal" ref=".[instance('fr-search-instance')/query[@path and @search-field = 'true']]">
                                <!-- Switch label depending on which case is shown -->
                                <xf:label ref="$fr-resources/summary/search/(if (case('search-switch') = 'search-free') then show-options else close-options)"/>
                                <xf:action ev:event="DOMActivate">
                                    <!-- Clear all queries when switching -->
                                    <xf:setvalue iterate="instance('fr-search-instance')/query" ref="."/>
                                    <!-- Switch the other case -->
                                    <xf:toggle case="search-{if (case('search-switch') = 'search-free') then 'options' else 'free'}"/>
                                    <xf:setfocus control="search-switch"/>
                                </xf:action>
                            </xf:trigger>
                        </xh:div>
                    </xf:group>

                    <xf:group ref="instance('fr-summary-instance')" xxf:update="full">

                        <!-- Don't show information about count if we only have one page, or if we're just showing drafts
                             (in that case, even if we have more than one page we don't care about the number of documents
                             not shown because they are not drafts) -->
                        <xf:var name="show-partial-search" value="
                            instance('fr-paging-instance')/(search-total != total)
                            and not(xxf:get-request-parameter('drafts-for-never-saved-document') = 'true')"/>
                        <xf:output
                            ref=".[$show-partial-search]"
                            class="fr-summary-search-count"
                            value="xxf:format-message($fr-resources/summary/search/returned,
                                                      for $ v in (instance('fr-paging-instance')/search-total, instance('fr-paging-instance')/total) return xs:integer($v))"/>

                        <xf:var name="show-created" value="xxf:property(string-join(('oxf.fr.summary.show-created', $app, $form), '.'))"/>
                        <xf:var name="show-last-modified" value="xxf:property(string-join(('oxf.fr.summary.show-last-modified', $app, $form), '.'))"/>

                        <div class="fr-summary-table-div">
                            <xf:var name="have-drafts" value="exists(document[@draft = 'true'])"/>
                            <xf:var name="have-read-only" value="exists(document[not(xxf:split(@operations) = ('*', 'update'))])"/>
                            <xf:var name="labels-class" value="string-join(('fr-summary-repeat-labels', if ($have-drafts or $have-read-only) then () else 'xforms-hidden'), ' ')"/>
                            <!-- One column for each detail -->
                            <xf:var name="positions" value="instance('fr-search-instance')/query[@name and @summary-field = 'true']/(count(preceding-sibling::query[@name]) + 1)"/>

                            <xh:table class="table table-bordered table-condensed table-striped table-hover">
                                <!-- scrollable="horizontal" width="940px" -->
                                <xh:thead>
                                    <xh:tr>
                                        <xh:th class="fr-summary-repeat-selection-checkbox"/>
                                        <xh:th class="{$labels-class}"/>
                                        <xf:repeat ref="if ($show-created) then '' else ()">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/created"/>
                                            </xh:th>
                                        </xf:repeat>
                                        <xf:repeat ref="if ($show-last-modified) then '' else ()">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/last-modified"/>
                                            </xh:th>
                                        </xf:repeat>
                                        <!-- Empty column if no summary fields looks nicer -->
                                        <xf:repeat ref="if (empty($positions)) then '' else ()">
                                            <xh:th/>
                                        </xf:repeat>
                                        <!-- Iterate through specially marked controls and derive resource id then resource -->
                                        <xf:repeat ref="instance('fr-search-instance')/query[@summary-field = 'true']" id="fr-summary-repeat-column-number">
                                            <xh:th>
                                                <!-- Output showing as the header of the column -->
                                                <xf:output mediatype="text/html" value="frf:htmlFieldLabel(@name, @html-label = 'true', $form-resources)"/>
                                            </xh:th>
                                        </xf:repeat>
                                    </xh:tr>
                                </xh:thead>
                                <xh:tbody>
                                    <xf:repeat ref="1 to count(document)" id="documents-repeat"><!-- iterate over positions so that repeat iterations are not recreated  -->
                                        <!-- 1-based position in the current page -->
                                        <xf:var name="position" value="position()"/>
                                        <!-- Set context to current document -->
                                        <xf:group context="instance('fr-summary-instance')/document[$position]" appearance="xxf:internal">
                                            <xf:var name="document" value="."/>

                                            <!-- Document name and href for edition -->
                                            <xf:var name="current-document-name" value="@name" as="xs:string"/>
                                            <!-- TODO: remove this once we can assume that all the persistence API implementations return @operations -->
                                            <xf:var name="current-document-operations" value="if (exists(@operations)) then xxf:split(@operations) else $global-operations" as="xs:string*"/>
                                            <xf:var name="edit-view" value="if ($current-document-operations = ('*', 'update')) then 'edit' else if ($current-document-operations = 'read') then 'view' else ''"/>
                                            <xf:var name="req-parameters" value="(
                                                    if (property('xxf:noscript')) then 'fr-noscript=true' else (),
                                                    if ($document/@draft = 'true') then 'draft=true' else ()
                                                )"/>
                                            <xf:var name="current-document-href" value="concat('/fr/', $app, '/', $form, '/', $edit-view, '/', $current-document-name,
                                                    if (exists($req-parameters)) then concat('?', string-join($req-parameters, '&amp;')) else '')"/>
                                            <xh:tr class="{if (xxf:split(instance('fr-selection-instance')) = $current-document-name) then 'fr-summary-row-selected' else 'fr-summary-row-not-selected'}">
                                                <xh:td class="fr-summary-repeat-selection-checkbox">
                                                    <xf:select appearance="full" ref="instance('fr-selection-instance')" id="document-selection">
                                                        <xf:item>
                                                            <xf:label/>
                                                            <xf:value value="concat(if ($document/@draft = 'true') then 'draft' else 'data', '/', $current-document-name)"/>
                                                        </xf:item>
                                                    </xf:select>
                                                </xh:td>
                                                <xh:td class="{$labels-class}">
                                                    <xf:output ref="if ($document/@draft = 'true') then . else ()" value="$fr-resources/summary/labels/draft" class="label"/>
                                                    <xf:output ref="if (not(xxf:split($document/@operations) = ('*', 'update'))) then . else ()" value="$fr-resources/summary/labels/read-only" class="label"/>
                                                </xh:td>
                                                <!-- Why repeat and not group? -->
                                                <xf:repeat ref="if ($show-created) then '' else ()">
                                                    <xf:var
                                                        name="created"
                                                        value="
                                                            for $v in adjust-dateTime-to-timezone(xs:dateTime($document/@created[. castable as xs:dateTime]))
                                                                return
                                                                    if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                                    then format-dateTime($v, $fr-resources/common/formats/within-day, xxf:lang(), (), ())
                                                                    else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                                    then format-dateTime($v, $fr-resources/common/formats/day-this-year, xxf:lang(), (), ())
                                                                    else format-dateTime($v, $fr-resources/common/formats/short-date, xxf:lang(), (), ())"/>

                                                    <xh:td class="fr-summary-created">
                                                        <xf:group ref=".[$edit-view != '']">
                                                            <xh:a href="{$current-document-href}">
                                                                <xf:output value="$created"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[$edit-view = '']">
                                                            <xf:output value="$created"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:repeat>
                                                <!-- Why repeat and not group? -->
                                                <xf:repeat ref="if ($show-last-modified) then '' else ()">
                                                    <xf:var
                                                        name="last-modified"
                                                        value="
                                                            for $v in adjust-dateTime-to-timezone(xs:dateTime($document/@last-modified[. castable as xs:dateTime]))
                                                                return
                                                                    if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                                    then format-dateTime($v, $fr-resources/common/formats/within-day, xxf:lang(), (), ())
                                                                    else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                                    then format-dateTime($v, $fr-resources/common/formats/day-this-year, xxf:lang(), (), ())
                                                                    else format-dateTime($v, $fr-resources/common/formats/short-date, xxf:lang(), (), ())"/>

                                                    <xh:td class="fr-summary-modified">
                                                        <xf:group ref=".[$edit-view != '']">
                                                            <xh:a href="{$current-document-href}">
                                                                <xf:output value="$last-modified"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[$edit-view = '']">
                                                            <xf:output value="$last-modified"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:repeat>
                                                <!-- Empty column if no summary fields looks nicer -->
                                                <xf:repeat ref="if (empty($positions)) then '' else ()">
                                                    <xh:td/>
                                                </xf:repeat>
                                                <!-- Iterate over positions so that repeat iterations are not recreated  -->
                                                <xf:repeat ref="$positions" id="document-details-repeat">
                                                    <!-- 1-based position in the current document-->
                                                    <xf:var name="position" value="position()"/>
                                                    <!-- Set context to current detail -->
                                                    <xf:group context="$document/details/detail[$positions[$position]]" appearance="xxf:internal">
                                                        <xh:td>
                                                            <!-- NOTE: Doing everything in a single big output XPath expression has the benefit of producing much less markup -->
                                                            <xf:var name="detail" value="
                                                                for $detail-position in $position return
                                                                    for $query in instance('fr-search-instance')/query[$detail-position + 1] return
                                                                        for $control in $query/@control return
                                                                            if ($control = 'textarea') then
                                                                                if (string-length(.) > 20) then concat(substring(., 1, 20), '...') else .
                                                                            else if (frf:isMultipleSelectionControl($control)) then
                                                                                string-join(for $v in xxf:split() return ($form-resources/*[local-name() = $query/@name]/item[value = $v]/label, $v)[1], ', ')
                                                                            else if (frf:isSingleSelectionControl($control)) then
                                                                                for $v in . return ($form-resources/*[local-name() = $query/@name]/item[value = $v]/label, $v)[1]
                                                                            else
                                                                                for $type in substring-after($query/@type, ':') return
                                                                                    if ($type = 'date') then
                                                                                        (if (. castable as xs:date) then format-date(xs:date(.), $fr-resources/summary/formats/date, xxf:lang(), (), ()) else .)
                                                                                    else if ($type = 'time') then
                                                                                        (if (. castable as xs:time) then format-time(xs:time(.), $fr-resources/summary/formats/time, xxf:lang(), (), ()) else .)
                                                                                    else if ($type = 'dateTime') then
                                                                                        (if (. castable as xs:dateTime) then format-dateTime(xs:dateTime(.), $fr-resources/summary/formats/dateTime, xxf:lang(), (), ()) else .)
                                                                                    else if ($type = 'dayTimeDuration') then
                                                                                        (
                                                                                            if (. castable as xs:dayTimeDuration) then
                                                                                                string-join(
                                                                                                    (
                                                                                                        if (days-from-duration(.) = 0) then () else concat(days-from-duration(.), ' d'),
                                                                                                        if (hours-from-duration(.) = 0) then () else concat(hours-from-duration(.), ' h'),
                                                                                                        if (minutes-from-duration(.) = 0) then () else concat(minutes-from-duration(.), ' min'),
                                                                                                        if (seconds-from-duration(.) = 0) then () else concat(seconds-from-duration(.), ' sec')
                                                                                                     ), ' '
                                                                                                )
                                                                                            else .
                                                                                        )
                                                                                    else ."/>
                                                            <xf:group ref=".[$edit-view != '']">
                                                                <xh:a href="{$current-document-href}">
                                                                    <xf:output value="$detail"/>
                                                                </xh:a>
                                                            </xf:group>
                                                            <xf:group ref=".[$edit-view = '']">
                                                                <xf:output value="$detail"/>
                                                            </xf:group>
                                                        </xh:td>
                                                    </xf:group>
                                                </xf:repeat>
                                            </xh:tr>
                                        </xf:group>
                                    </xf:repeat>
                                    <xf:group ref=".[not(document)]">
                                        <xh:tr>
                                            <xh:td colspan="{4 + count(instance('fr-search-instance')/*[@summary-field = 'true'])}">
                                                <xf:output id="fr-no-form-data" class="alert" mediatype="text/html" value="saxon:serialize($fr-resources/summary/messages/no-form-found/node(), 'html')"/>
                                            </xh:td>
                                        </xh:tr>
                                    </xf:group>
                                </xh:tbody>
                            </xh:table>
                        </div>
                    </xf:group>
                </fr:body>
            </fr:row>
            <fr:row>
                <div class="pagination pagination-left">
                    <ul>
                        <li class="{if (xxf:readonly(instance('fr-paging-instance')/prev-trigger)) then 'disabled' else ''}">
                            <xf:trigger ref="instance('fr-paging-instance')/prev-trigger" appearance="minimal" class="fr-navigate-first">
                                <!-- https://github.com/orbeon/orbeon-forms/issues/1042 -->
                                <xf:label>
                                    <xh:i class="icon-step-backward"/>&#x200b;
                                </xf:label>
                                <xf:action ev:event="DOMActivate">
                                    <xf:setvalue ref="instance('fr-search-instance')/page-number" value="1"/>
                                    <xf:setindex repeat="documents-repeat" index="1"/>
                                    <xf:send submission="search-submission"/>
                                </xf:action>
                            </xf:trigger>
                        </li>
                        <li class="{if (xxf:readonly(instance('fr-paging-instance')/prev-trigger)) then 'disabled' else ''}">
                            <xf:trigger ref="instance('fr-paging-instance')/prev-trigger" appearance="minimal" class="fr-navigate-prev">
                                <xf:label>
                                    <xh:i class="icon-chevron-left"/>&#x200b;
                                </xf:label>
                                <xf:action ev:event="DOMActivate">
                                    <xf:setvalue ref="instance('fr-search-instance')/page-number" value=". - 1"/>
                                    <xf:setindex repeat="documents-repeat" index="1"/>
                                    <xf:send submission="search-submission"/>
                                </xf:action>
                            </xf:trigger>
                        </li>
                        <!-- Some results -->
                        <xf:group class="fr-paging-numbers" ref=".[xs:integer(instance('fr-paging-instance')/search-total) gt 0]">
                            <li>
                                <span>
                                    <xf:output value="max((instance('fr-paging-instance')/from, 0))"/>
                                    <xf:output value="$fr-resources/summary/paging/to"/>
                                    <xf:output value="max((instance('fr-paging-instance')/to, 0))"/>
                                    <xf:output value="$fr-resources/summary/paging/of"/>
                                    <xf:output value="instance('fr-paging-instance')/search-total"/>
                                </span>
                            </li>
                        </xf:group>
                        <xf:group class="fr-paging-numbers" ref=".[xs:integer(instance('fr-paging-instance')/search-total) = 0]">
                            <!-- No results -->
                        </xf:group>
                        <li class="{if (xxf:readonly(instance('fr-paging-instance')/next-trigger)) then 'disabled' else ''}">
                            <xf:trigger ref="instance('fr-paging-instance')/next-trigger" appearance="minimal" class="fr-navigate-next">
                                <xf:label>
                                    <xh:i class="icon-chevron-right"/>&#x200b;
                                </xf:label>
                                <xf:action ev:event="DOMActivate">
                                    <xf:setvalue ref="instance('fr-search-instance')/page-number" value=". + 1"/>
                                    <xf:setindex repeat="documents-repeat" index="1"/>
                                    <xf:send submission="search-submission"/>
                                </xf:action>
                            </xf:trigger>
                        </li>
                        <li class="{if (xxf:readonly(instance('fr-paging-instance')/next-trigger)) then 'disabled' else ''}">
                            <xf:trigger ref="instance('fr-paging-instance')/next-trigger" appearance="minimal" class="fr-navigate-last">
                                <xf:label>
                                    <xh:i class="icon-step-forward"/>&#x200b;
                                </xf:label>
                                <xf:action ev:event="DOMActivate">
                                    <xf:setvalue ref="instance('fr-search-instance')/page-number" value="instance('fr-paging-instance')/page-count"/>
                                    <xf:setindex repeat="documents-repeat" index="1"/>
                                    <xf:send submission="search-submission"/>
                                </xf:action>
                            </xf:trigger>
                        </li>
                    </ul>
                </div>

                <xf:group model="fr-form-model" class="fr-buttons">

                    <xf:var
                        name="documents-selected"
                        value="instance('fr-summary-instance')/document[concat(if (@draft = 'true') then 'draft' else 'data', '/', @name) = xxf:split(instance('fr-selection-instance'))]"/>

                    <!-- Take into account the global operations but also the operations returned by the persistence
                         layer for each selected form. This can only add to permissions, for example if the user is the
                         document owner. -->
                    <!-- TODO: If the user pages, then the <document> for the given selection is no longer there, and
                         therefore the operations not available. Should store the operations associated with each
                         selected document too, otherwise less documents might be found. -->
                    <xf:var name="documents-can-view"      value="empty($documents-selected[not(distinct-values(($global-operations, xxf:split(@operations))) = ('*', 'read'))])"/>
                    <xf:var name="documents-can-delete"    value="empty($documents-selected[not(distinct-values(($global-operations, xxf:split(@operations))) = ('*', 'delete'))])"/>

                    <xf:var name="doc-count"               value="count(instance('fr-summary-instance')/document)"/>
                    <xf:var name="is-singleton"            value="$source-form-metadata/singleton = 'true'"/>
                    <xf:var name="singleton-limit-reached" value="$is-singleton and $doc-count > 0"/>
                    <xf:var name="new-visible"             value="$global-operations = ('*', 'create') and not($singleton-limit-reached)"/>
                    <xf:var name="view-enabled"            value="property('xxf:noscript') or (count($documents-selected)  = 1 and $documents-can-view)"/>
                    <xf:var name="delete-enabled"          value="property('xxf:noscript') or (count($documents-selected) != 0 and $documents-can-delete)"/>
                    <xf:var name="duplicate-enabled"       value="property('xxf:noscript') or (count($documents-selected) != 0 and $documents-can-view and $new-visible)"/>

                    <xf:var name="enabled"                 value="instance('fr-summary-triggers-instance')/enabled"/>
                    <xf:var name="disabled"                value="instance('fr-summary-triggers-instance')/disabled"/>

                    <!-- Directly iterate over the tokenized property -->
                    <xf:repeat ref="xxf:split(xxf:property(string-join(('oxf.fr.summary.buttons', $app, $form), '.')))">
                        <xh:span class="fr-button">
                            <!-- Home -->
                            <xf:group ref="if (. = 'home') then $enabled else ()">
                                <xf:trigger ref=".">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/home"/>
                                    <xf:load ev:event="DOMActivate" resource="/fr/"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Print/review button -->
                            <xf:group ref="if (. = ('print', 'review')) then if ($view-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref=".">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/review"/>
                                    <xf:action ev:event="DOMActivate">
                                        <!-- FIXME: assert(only one document selected) -->
                                        <xf:dispatch targetid="fr-form-model" name="fr-summary-view"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                            <!-- PDF button
                                 - don't show the PDF template button in CE (also on detail page)
                                 - button not enabled when a draft is selected (not sure it makes sense to create a PDF
                                   for a draft and the PDF functionality right now doesn't support creating a PDF for a draft) -->
                            <xf:group ref="if (. = 'pdf' and not($has-pdf-template and not(version:isPE())))
                                           then (if ($view-enabled and $selection-data-or-draft = 'data') then $enabled else $disabled)
                                           else ()">
                                <fr:href-button
                                        ref="."
                                        href="/fr/{$app}/{$form}/pdf/{$selection-document-id}?fr-language={xxf:instance('fr-language-instance')}">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/pdf"/>
                                </fr:href-button>
                            </xf:group>
                            <!-- Test button -->
                            <xf:group ref="if (. = 'test') then if ($view-enabled) then $enabled else $disabled else ()">
                                <fr:href-button
                                        ref="."
                                        href="/fr/{$app}/{$form}/test/{normalize-space(instance('fr-selection-instance'))}{if (property('xxf:noscript')) then '?fr-noscript=true' else ''}">
                                    <xf:label mediatype="text/html" value="'Test'"/><!-- TODO: i18n -->
                                </fr:href-button>
                            </xf:group>
                            <!-- Delete button -->
                            <xf:group ref="if (. = 'delete') then if ($delete-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref=".">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/delete"/>
                                    <!-- Open delete confirmation dialog -->
                                    <xf:dispatch ev:event="DOMActivate" name="fr-show" targetid="delete-confirmation-dialog"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Import button -->
                            <xf:group ref="if (. = 'import' and $new-visible) then $enabled else ()">
                                <xf:trigger ref=".">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/import"/>
                                    <xf:load ev:event="DOMActivate" resource="/fr/{$app}/{$form}/import"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- New button -->
                            <xf:group ref="if (. = 'new' and $new-visible) then $enabled else ()">
                                <xf:trigger ref="." appearance="xxf:primary">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/new"/>
                                    <xf:dispatch ev:event="DOMActivate" targetid="fr-form-model" name="fr-summary-create"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Duplicate button -->
                            <xf:group ref="if (. = 'duplicate') then if ($duplicate-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref=".">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/duplicate"/>
                                    <xf:action ev:event="DOMActivate">
                                        <xf:action iterate="xxf:split(instance('fr-selection-instance'))">
                                            <xf:send submission="call-duplicate-service">
                                                <xf:property name="document" value="substring-after(., '/')"/>
                                            </xf:send>
                                        </xf:action>
                                        <!-- Reset search selection and navigation -->
                                        <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                        </xh:span>
                    </xf:repeat>
                </xf:group>
            </fr:row>
            <fr:row>
                <fr:version/>
            </fr:row>
        </xh:div>

        <!-- Delete confirmation dialog -->
        <fr:alert-dialog id="delete-confirmation-dialog" close="true">
            <fr:label ref="$fr-resources/summary/titles/delete-confirmation"/>
            <fr:message value="$fr-resources/summary/messages/delete-confirmation"/>
            <fr:negative-choice/>
            <fr:positive-choice>
                <xf:action ev:event="DOMActivate">
                    <!-- Parse the selected rows -->
                    <xf:action iterate="xxf:split(instance('fr-selection-instance'))">
                        <xf:var name="document" value="." as="xs:string"/>
                        <xf:dispatch name="fr-delete-data" targetid="fr-persistence-model">
                            <xf:property name="document-data-or-draft-id" value="$document"/>
                        </xf:dispatch>
                    </xf:action>
                    <!-- Reset search selection and navigation -->
                    <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                </xf:action>
            </fr:positive-choice>
        </fr:alert-dialog>
    </body>
</html>
