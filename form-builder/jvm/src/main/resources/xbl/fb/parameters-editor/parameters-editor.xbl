<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:fb="http://orbeon.org/oxf/xml/form-builder"
    xmlns:xbl="http://www.w3.org/ns/xbl"
    xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
    xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
    xmlns:fbf="java:org.orbeon.oxf.fb.FormBuilderXPathApi"
    xmlns:utils="java:org.orbeon.oxf.util.StringUtils">

    <xbl:binding
        id="fb-parameters-editor"
        element="fb|parameters-editor"
        xxbl:mode="binding lhha custom-lhha">

        <xbl:resources>
            <xbl:style src="/xbl/fb/parameters-editor/parameters-editor.css"/>
        </xbl:resources>

        <xbl:implementation>
            <xf:model id="model">

                <xf:instance id="i" xxf:exclude-result-prefixes="#all" xxbl:mirror="true">
                    <params/>
                </xf:instance>

                <xf:var name="i" value="instance('i')"/>

                <xf:bind
                    ref="*:param/*:name"
                    required="true()"
                    constraint="matches(., '^[A-Za-z0-9\-_]+$') and not(. = preceding::fr:name)"
                    xxf:whitespace="trim"/>

                <xf:bind
                    ref="*:param/*:expr"
                    required="true()"
                    type="xxf:XPath2"
                    xxf:whitespace="trim"/>

                <xf:bind
                    ref="*:param/*:controlName"
                    required="true()"/>

                <xf:instance id="values-template" xxf:exclude-result-prefixes="#all">
                    <_>
                        <!-- Make sure there are no whitespace in between nodes, as we don't handle that yet -->
                        <fr:param type="ExpressionParam"       ><fr:name/><fr:expr/></fr:param>
                        <fr:param type="ControlValueParam"     ><fr:name/><fr:controlName/></fr:param>
                        <fr:param type="AllControlValuesParam" ><fr:name/></fr:param>
                        <fr:param type="LinkToEditPageParam"   ><fr:name/></fr:param>
                        <fr:param type="LinkToViewPageParam"   ><fr:name/></fr:param>
                        <fr:param type="LinkToNewPageParam"    ><fr:name/></fr:param>
                        <fr:param type="LinkToSummaryPageParam"><fr:name/></fr:param>
                        <fr:param type="LinkToHomePageParam"   ><fr:name/></fr:param>
                        <fr:param type="LinkToPdfParam"        ><fr:name/></fr:param>
                    </_>
                </xf:instance>

                <!-- Change param templates to remove the `fr:` prefix if user set `form-runner-namespace="false"` -->
                <xf:insert
                    event="xforms-model-construct-done"
                    if="xxf:component-param-value('form-runner-namespace') = 'false'"
                    ref="instance('values-template')"
                    origin="
                        xf:element(
                            '_',
                            for $param in instance('values-template')/*
                            return xf:element(
                                $param/local-name(),
                                (
                                    $param/@*,
                                    for $child in $param/*
                                    return xf:element($child/local-name())
                                )
                            )
                        )
                    "/>

                <xf:var
                    name="readonly-template"
                    value="instance('values-template')/*:param[@type = 'ControlValueParam']"/>

                <!-- List of controls computed once, as this is an expensive operation for large forms -->
                <xf:instance id="controls-label-value-itemset">
                    <itemset/>
                </xf:instance>

                <!-- Delay computing the list of controls until we need it -->
                <xf:action
                    event="xforms-enabled xforms-readwrite"
                    observer="control-selector"
                    if="
                        exists(*:param) and
                        empty(instance('controls-label-value-itemset')/item)
                    ">
                    <xf:insert
                        context="instance('controls-label-value-itemset')"
                        origin="fbf:getControlsLabelValueItemset()"/>
                </xf:action>

            </xf:model>
        </xbl:implementation>

        <xbl:template>
            <!-- Bindings specified on control -->
            <xf:var name="resources"><xxf:value value=". treat as element()" xxbl:scope="outer" xbl:attr="model context ref=resources-ref"/></xf:var>
            <xf:var name="body"><xxf:value value=". treat as element()" xxbl:scope="outer" xbl:attr="model context ref=body-ref"/></xf:var>

            <!--<xf:var name="binding" value="xxf:binding('fb-parameters-editor')"/>-->

            <xf:group>
                <xf:label value="xxf:label('fb-parameters-editor')"/>

                <fr:dnd-repeat
                    ref="
                        let $params :=
                            $i/*:param
                        return
                            if (exists($params)) then
                                $params
                            else
                                $readonly-template">

                    <xf:var name="current-param"    value="."/>
                    <xf:var name="param-count"      value="count($i/*:param)"/>
                    <xf:var name="can-remove-param" value="$param-count gt 0"/>

                    <xh:div
                        class="{
                            'fb-param-iteration',
                             'xforms-dnd-item',
                             'xforms-dnd-moves'[$param-count gt 1]
                        }">

                        <xf:input ref="$current-param/*:name" class="fb-param-name">
                            <xf:label appearance="minimal" ref="$resources/components/parameters-editor/name/label"/>
                            <xf:alert ref="$resources/components/parameters-editor/name/alert"/>
                        </xf:input>

                        <xf:select1 ref="$current-param" class="fb-param-type" xxf:exclude-whitespace-text-nodes="true">
                            <xf:label>Type</xf:label>
                            <xf:itemset
                                ref="
                                    let $all-control-values := xxf:component-param-value('all-control-values') = 'true',
                                        $form-runner-links  := xxf:component-param-value('form-runner-links')  = 'true'
                                    return
                                        $resources/components/parameters-editor/type//(
                                            item[
                                                @id = (0 to 1)                         or
                                                @id = (2     ) and $all-control-values or
                                                @id = (3 to 8) and $form-runner-links
                                            ]
                                            |
                                            choice[$form-runner-links or empty(item[@id = (3 to 8)])]
                                        )">
                                <xf:label ref="@label, ."/>
                                <xf:copy
                                    ref="
                                        let $type :=
                                            if (@id = 0) then
                                                'ControlValueParam'
                                            else if (@id = 1) then
                                                'ExpressionParam'
                                            else if (@id = 2) then
                                                'AllControlValuesParam'
                                            else if (@id = 3) then
                                                'LinkToEditPageParam'
                                            else if (@id = 4) then
                                                'LinkToViewPageParam'
                                            else if (@id = 5) then
                                                'LinkToNewPageParam'
                                            else if (@id = 6) then
                                                'LinkToSummaryPageParam'
                                            else if (@id = 7) then
                                                'LinkToHomePageParam'
                                            else if (@id = 8) then
                                                'LinkToPdfParam'
                                            else
                                                (),
                                            $template := instance('values-template')/*:param[@type = $type]
                                        return
                                            if (exists($type)) then
                                                (
                                                    $template/@type,
                                                    if ($type = $current-param/@type) then
                                                        $current-param/*             (: keep the currently-selected value as is :)
                                                    else (
                                                        $current-param/*:name,      (: always keep the parameter name          :)
                                                        $template/(* except *:name) (: but use the other elements if any       :)
                                                    )
                                               )
                                           else
                                               ()"/>
                            </xf:itemset>
                        </xf:select1>

                        <xf:switch caseref="$current-param/@type" class="fb-param-details">
                            <xf:case value="'ExpressionParam'">
                                <xf:input ref="$current-param/*:expr">
                                    <xf:label appearance="minimal" ref="$resources/components/parameters-editor/xpath/label"/>
                                    <xf:alert ref="$resources/components/parameters-editor/xpath/alert"/>
                                </xf:input>
                            </xf:case>
                            <xf:case value="'ControlValueParam'">
                                <fr:dropdown-select1-search ref="$current-param/*:controlName" id="control-selector" style="width: 100%">
                                    <xf:label appearance="minimal" ref="$resources/components/parameters-editor/control/label"/>
                                    <xf:alert ref="$resources/components/parameters-editor/control/alert"/>
                                    <xf:itemset ref="instance('controls-label-value-itemset')/item">
                                        <xf:label value="@label"/>
                                        <xf:value value="@value"/>
                                    </xf:itemset>
                                </fr:dropdown-select1-search>
                            </xf:case>
                            <xf:case value="'AllControlValuesParam'">
                                <!-- No configuration -->
                            </xf:case>
                        </xf:switch>

                        <xh:div class="fb-param-buttons">
                            <xh:i class="fa fa-fw fa-bars fb-param-grab"/>
                            <xf:trigger
                                appearance="minimal"
                                ref="if ($can-remove-param) then $i else ''">
                                <xf:label><xh:i class="fa fa-fw fa-minus-circle"/></xf:label>
                                <xf:action event="DOMActivate">
                                    <xf:delete ref="$current-param"/>
                                </xf:action>
                            </xf:trigger>
                            <xf:trigger appearance="minimal">
                                <xf:label><xh:i class="fa fa-fw fa-plus-circle"/></xf:label>
                                <xf:action event="DOMActivate">
                                    <xf:insert
                                        context="$i"
                                        ref="$current-param[parent::* is $i]"
                                        position="after"
                                        origin="$readonly-template"/>
                                </xf:action>
                            </xf:trigger>
                        </xh:div>

                    </xh:div>

                </fr:dnd-repeat>
            </xf:group>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>