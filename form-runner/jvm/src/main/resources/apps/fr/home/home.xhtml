<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
         xmlns:version="java:org.orbeon.oxf.common.Version"
         xmlns:index="org.orbeon.oxf.fr.persistence.relational.index.status.UI"

         lang="{xxf:instance('fr-fr-language-instance')}"
         xml:lang="{xxf:instance('fr-fr-language-instance')}">

    <xh:head>
        <xh:title><xf:output ref="$fr-resources/home/title"/></xh:title>
        <xh:link rel="stylesheet" href="/apps/fr/style/form-runner-home.css" type="text/css" media="all"/>
        <!-- This page needs access to Form Builder permission -->
        <xi:include href="oxf:/apps/fr/includes/permissions-model.xml" xxi:omit-xml-base="true"/>
        <!-- FR Home page XForms model -->
        <xf:model id="fr-form-model" xxf:xpath-analysis="true" xxf:expose-xpath-types="true">

            <xf:var
                name="tz"
                value="
                    for $offset in frf:defaultTimezoneToOffsetString()
                    return xs:dayTimeDuration($offset)"/>

            <xf:action event="xforms-model-construct-done">

                <!-- Initialize remote servers information only if user is logged in and has at least one matching role -->
                <xf:var
                    name="has-any-matching-roles"
                    value="not(xxf:instance('fb-permissions')/@has-roles = 'false')"/>

                <xf:var
                    name="initialize-remotes"
                    value="fr:is-pe() and $has-any-matching-roles"/>

                <xf:action if="$initialize-remotes">
                    <xf:var
                        name="remote-servers"
                        value="frf:remoteServersXPath()"/>

                    <!-- Set the available remote server label/URL when present. If we only have one item, it is
                         just one URL. If we have two or more, it's one label, one URL, etc. -->
                    <xf:action iterate="1 to ((count($remote-servers) + 1) idiv 2)">
                        <xf:var name="p" value="."/>
                        <xf:insert
                            context="instance()/remote-servers"
                            ref="*"
                            origin="
                                xf:element(
                                    'remote-server',
                                    (
                                        xf:element('label',    if (count($remote-servers) ge 2) then $remote-servers[($p - 1) * 2 + 1] else ''),
                                        xf:element('url',      if (count($remote-servers) ge 2) then $remote-servers[($p - 1) * 2 + 2] else $remote-servers[1]),
                                        xf:element('username', ''),
                                        xf:element('password', '')
                                    )
                                )
                            "
                        />
                    </xf:action>

                    <!-- Set the current remote server (the first one) -->
                    <xf:setvalue
                        ref="instance()/current-remote-server"
                        value="if (exists($remote-servers)) then 1 else 0"/>

                </xf:action>
                <xf:action if="not($initialize-remotes)">
                    <xf:setvalue
                        ref="instance()/current-remote-server"
                        value="0"/>
                </xf:action>
            </xf:action>

            <!-- Entry point -->
            <xf:action event="xforms-ready fr-initialize">

                <xf:var
                    name="remote-set"
                    value="
                        for $current-remote-server in data((instance()/current-remote-server))[1]
                            return (
                                $current-remote-server > 0 and (
                                for $remote in (instance()/remote-servers/remote-server[$current-remote-server])[1]
                                    return (
                                        normalize-space($remote/url) != ''
                                        and normalize-space($remote/username) != ''
                                        and normalize-space($remote/password) != ''
                                    )
                                )
                            )"
                />

                <xf:dispatch name="fr-clear" targetid="fr-form-model"/>

                <xf:action type="xpath">
                    if (not(fr:is-pe()) or instance()/current-remote-server = 0) then
                        fr:run-process-by-name('oxf.fr.home.process', 'load-local')
                    else if ($remote-set) then
                        fr:run-process('oxf.fr.home.process', 'load-start-with-remote')
                    else
                        fr:run-process-by-name('oxf.fr.home.process', 'load-start-with-credentials')
                </xf:action>
            </xf:action>

            <xf:action event="fr-clear">
                <!-- Clear selection -->
                <xf:setvalue ref="selection"/>

                <!-- Don't keep potentially large instances -->
                <xf:insert ref="instance('fr-form')" origin="xf:element('dummy')"/>
            </xf:action>

            <xf:instance id="fr-form-instance">
                <i>
                    <selection/>

                    <error/>

                    <initializing>true</initializing>
                    <remote-successful>false</remote-successful>
                    <any-has-admin-permission/>
                    <!-- NOTE: At this point, we don't have information about the remote forms permissions. So we just
                         assume that we have the same permission that we have local forms. -->
                    <!--<any-has-remote-admin-permission/>-->

                    <local-unpublish-action/>
                    <local-publish-action/>
                    <remote-unpublish-action/>
                    <remote-publish-action/>
                    <local-to-remote-action/>
                    <remote-to-local-action/>
                    <summary-action/>
                    <new-action/>
                    <local-upgrade-action/>
                    <remote-upgrade-action/>

                    <local-unpublish-select/>
                    <local-publish-select/>
                    <remote-unpublish-select/>
                    <remote-publish-select/>
                    <local-newer-select/>
                    <remote-newer-select/>

                    <current-remote-server/>

                    <remote-servers>
                        <!--

                        Template:

                        <remote-server>
                            <label/>
                            <url/>
                            <username/>
                            <password/>
                        </remote-server>
                        -->
                    </remote-servers>

                    <form-definition-version/>

                </i>
            </xf:instance>

            <xf:var name="selection"                value="xxf:split(selection)"/>
            <xf:var name="any-has-admin-permission" value="any-has-admin-permission = 'true'"/>
            <xf:var name="remote-successful"        value="remote-successful = 'true'"/>

            <!-- Binds for admin tasks -->
            <xf:bind ref="instance('fr-form-instance')[$any-has-admin-permission]">
                <xf:bind ref="local-unpublish-action"  readonly="not(exists($selection) and frf:canUnpublishLocal(../selection, $forms))"/>
                <xf:bind ref="local-publish-action"    readonly="not(exists($selection) and frf:canPublishLocal(../selection, $forms))"/>
                <xf:bind ref="remote-unpublish-action" readonly="not(exists($selection) and frf:canUnpublishRemote(../selection, $forms))"/>
                <xf:bind ref="remote-publish-action"   readonly="not(exists($selection) and frf:canPublishRemote(../selection, $forms))"/>
                <xf:bind ref="local-to-remote-action"  readonly="not($remote-successful and exists($selection) and frf:canPublishLocalToRemote(../selection, $forms))"/>
                <xf:bind ref="remote-to-local-action"  readonly="not(exists($selection) and frf:canPublishRemoteToLocal(../selection, $forms))"/>
                <xf:bind ref="summary-action"          readonly="not(count(xxf:split(../selection)) = 1 and frf:canNavigateSummary(../selection, $forms))"/>
                <xf:bind ref="new-action"              readonly="not(count(xxf:split(../selection)) = 1 and frf:canNavigateNew(../selection, $forms))"/>
                <xf:bind ref="local-upgrade-action"    readonly="not(exists($selection) and frf:canUpgradeLocal(../selection, $forms))"/>
                <xf:bind ref="remote-upgrade-action"   readonly="not(exists($selection) and frf:canUpgradeRemote(../selection, $forms))"/>

                <xf:bind ref="local-unpublish-select"  readonly="not(frf:canSelectUnpublishedLocal(../selection, $forms))"/>
                <xf:bind ref="local-publish-select"    readonly="not(frf:canSelectPublishedLocal(../selection, $forms))"/>
                <xf:bind ref="remote-unpublish-select" readonly="not(frf:canSelectUnpublishedRemote(../selection, $forms))"/>
                <xf:bind ref="remote-publish-select"   readonly="not(frf:canSelectPublishedRemote(../selection, $forms))"/>
                <xf:bind ref="local-newer-select"      readonly="not(frf:canSelectLocalNewer(../selection, $forms))"/>
                <xf:bind ref="remote-newer-select"     readonly="not(frf:canSelectRemoteNewer(../selection, $forms))"/>
            </xf:bind>

            <xf:bind ref="instance('fr-form-instance')">
                <xf:bind
                    ref="current-remote-server"
                    type="xs:integer"/>
                <xf:bind
                    ref="remote-servers/remote-server/username | remote-servers/remote-server/password"
                    required="true()"
                    xxf:whitespace="trim"
                    readonly="false()"/>
            </xf:bind>

            <xf:submission
                    id="fr-reindex-submission"
                    method="get"
                    resource="/fr/service/persistence/reindex"
                    serialization="none"
                    replace="none"
                    mode="asynchronous">
                <xf:setvalue event="xforms-submit" ref="instance('fr-reindex-instance')/status">starting</xf:setvalue>
            </xf:submission>

            <!-- Refresh page every 2s -->
            <xf:action
                observer="fr-form-instance"
                event="xxforms-value-changed"
                if="instance('fr-form-instance')/any-has-admin-permission = 'true'">
                <xf:dispatch
                        name="ping-event"
                        target="fr-form-model"/>
            </xf:action>
            <xf:action event="ping-event">
                <xf:var name="status" value="index:status()"/>
                <xf:setvalue
                        ref="instance('fr-reindex-instance')/status"
                        value="
                            if (
                                $status = 'stopped' and
                                instance('fr-reindex-instance')/status != 'stopped'
                            )
                            then 'done'
                            else $status"/>
                <xf:setvalue ref="instance('fr-reindex-instance')/provider-token"   value="index:getProviderToken()"/>
                <xf:setvalue ref="instance('fr-reindex-instance')/provider-current" value="index:getProviderCurrent()"/>
                <xf:setvalue ref="instance('fr-reindex-instance')/provider-total"   value="index:getProviderTotal()"/>
                <xf:setvalue ref="instance('fr-reindex-instance')/document-current" value="index:getDocumentCurrent()"/>
                <xf:setvalue ref="instance('fr-reindex-instance')/document-total"   value="index:getDocumentTotal()"/>
                <xf:dispatch
                        name="ping-event"
                        target="fr-form-model"
                        delay="2000"/>
            </xf:action>
            <xf:instance id="fr-reindex-instance">
                <reindex>
                    <status>stopped</status>
                    <provider-token/>
                    <provider-current/>
                    <provider-total/>
                    <document-current/>
                    <document-total/>
                </reindex>
            </xf:instance>

            <!-- Forms metadata -->
            <xf:instance id="fr-metadata"><forms/></xf:instance>

            <xf:var name="forms" value="instance('fr-metadata')/form"/>

            <xf:bind
                ref="instance('fr-metadata')/form/(last-modified-time | remote-last-modified-time)"
                type="xs:dateTime"/>

            <xf:instance id="fr-metadata-local"><forms/></xf:instance>
            <xf:instance id="fr-metadata-remote"><forms/></xf:instance>

            <xf:submission
                id="read-local-metadata"
                method="get"
                serialization="none"
                resource="/fr/service/persistence/form?all-versions=true"
                replace="instance"
                targetref="instance('fr-metadata-local')">

                <xf:insert event="xforms-submit" ref="instance('fr-metadata-local')" origin="xf:element('forms')"/>
                <xf:setvalue event="xforms-submit-done" ref="instance()/initializing">false</xf:setvalue>
            </xf:submission>

            <xf:submission
                id="read-remote-metadata"
                xxf:username="{instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/username}"
                xxf:password="{instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/password}"
                method="get"
                serialization="none"
                resource="{instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/url}/fr/service/persistence/form"
                replace="instance"
                targetref="instance('fr-metadata-remote')">
                <xf:insert event="xforms-submit" ref="instance('fr-metadata-remote')" origin="xf:element('forms')"/>
                <xf:setvalue event="xforms-submit-done" ref="instance()/remote-successful">true</xf:setvalue>
            </xf:submission>

            <xf:action event="process-results">

                <xf:insert ref="instance('fr-metadata')" origin="xf:element('forms')"/>

                <!-- Create root element -->
                <xf:var name="temp" value="xf:element('forms')"/>

                <!-- Join remote data if present -->
                <xf:insert
                    context="$temp"
                    origin="frf:joinLocalAndRemoteMetadata(
                                instance('fr-metadata-local')/*,
                                instance('fr-metadata-remote')/*,
                                xxf:instance('fb-permissions')
                            )"/>

                <xf:insert ref="instance('fr-metadata-local')"  origin="xf:element('forms')"/>
                <xf:insert ref="instance('fr-metadata-remote')" origin="xf:element('forms')"/>

                <xf:insert
                    context="instance('fr-metadata')"
                    origin="xxf:sort($temp/form, if (last-modified-time) then xs:dateTime(last-modified-time) else xs:dateTime(remote-last-modified-time), 'text', 'descending')"/>

                <!-- Only show admin ops column if at least one form has op -->
                <xf:var name="has-admin"        value="saxon:expression('xxf:split(@operations) = ''admin''')"/>
                <xf:var name="has-remote-admin" value="saxon:expression('exists(remote-last-modified-time)')"/>

                <xf:setvalue
                    ref="instance()/any-has-admin-permission"
                    value="xxf:exists(instance('fr-metadata')/form, $has-admin)"/>

                <!-- Because `any-has-admin-permission` is used in an `xf:bind/@ref` -->
                <xf:rebuild xxf:deferred="true"/>

            </xf:action>

            <!-- Start process in reaction to action button -->
            <xf:action
                    event="DOMActivate"
                    observer="fr-publish-local-button   fr-publish-remote-button
                              fr-unpublish-local-button fr-unpublish-remote-button
                              fr-local-to-remote-button fr-remote-to-local-button
                              fr-upgrade-local-button   fr-upgrade-remote-button"
                    type="xpath">
                fr:run-process-by-name('oxf.fr.home.process', substring-before(substring-after(event('xxf:observerid'), 'fr-'), '-button'))
            </xf:action>

            <!-- Open confirmation dialog in response to process event -->
            <xf:action
                event="
                    confirm-local-publish   confirm-local-unpublish
                    confirm-remote-publish  confirm-remote-unpublish
                    confirm-local-to-remote confirm-remote-to-local
                    confirm-local-upgrade   confirm-remote-upgrade">

                <xf:var
                    name="fr-resources"
                    model="fr-resources-model"
                    value="$fr-fr-resources"/>

                <xxf:show dialog="publish-confirmation-dialog">
                    <xf:property
                        name="message"
                        value="xxf:format-message($fr-resources/home/messages/publish-confirmation, (
                                   if (event('xxf:type') = ('confirm-local-upgrade', 'confirm-remote-upgrade'))
                                   then 2
                                   else if (event('xxf:type') = ('confirm-local-unpublish', 'confirm-remote-unpublish'))
                                   then 1
                                   else 0,
                                   count($selection)
                               ))"/>
                </xxf:show>
            </xf:action>

            <!-- Response to process event -->
            <xf:action
                event="
                    local-publish   local-unpublish
                    remote-publish  remote-unpublish
                    local-to-remote remote-to-local
                    local-upgrade   remote-upgrade">

                <xf:var name="local-read"              value="event('xxf:type') = ('local-publish',   'local-unpublish', 'local-to-remote', 'local-upgrade')"/>
                <xf:var name="local-write"             value="event('xxf:type') = ('local-publish',   'local-unpublish', 'remote-to-local', 'local-upgrade')"/>
                <xf:var name="toggle-to-publish"       value="event('xxf:type') = ('local-publish',   'remote-publish')"/>
                <xf:var name="toggle-to-unpublish"     value="event('xxf:type') = ('local-unpublish', 'remote-unpublish')"/>
                <xf:var name="force-attachments"       value="event('xxf:type') = ('local-to-remote', 'remote-to-local')"/>
                <xf:var name="upgrade-form-definition" value="event('xxf:type') = ('local-upgrade',   'remote-upgrade')"/>

                <!-- Invalidate all instances so we don't find stale component libraries in cache -->
                <xxf:invalidate-instances/>

                <!-- Iterate until there is an error -->
                <xf:setvalue ref="error"/>
                <xf:action iterate="$selection" if="instance()/error = ''">

                    <xf:var name="app"          value="xxf:split(., '/')[1]"/>
                    <xf:var name="form"         value="xxf:split(., '/')[2]"/>
                    <xf:var name="form-version" value="xxf:split(., '/')[3]"/>

                    <xf:send submission="read-form">
                        <xf:property name="base-uri"     value="if ($local-read) then '' else instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/url"/>
                        <xf:property name="app"          value="$app"/>
                        <xf:property name="form"         value="$form"/>
                        <xf:property name="form-version" value="$form-version"/>
                        <xf:property name="username"     value="if ($local-read) then '' else instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/username"/>
                        <xf:property name="password"     value="if ($local-read) then '' else instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/password"/>
                    </xf:send>

                    <xf:action if="instance()/error = ''">

                        <!-- See https://github.com/orbeon/orbeon-forms/issues/2453 -->
                        <!-- See https://github.com/orbeon/orbeon-forms/issues/1451 -->
                        <xf:var
                            name="form-definition-version"
                            value="normalize-space((instance()/form-definition-version[normalize-space()], '1')[1])"/>

                        <xf:var
                            name="metadata"
                            value="frf:metadataInstanceRootOpt(instance('fr-form'))"/>

                        <xf:var
                            name="current-available"
                            value="not($metadata/available = 'false')"/>

                        <xf:var
                            name="new-available"
                            value="$toggle-to-publish or ($current-available and not($toggle-to-unpublish))"/>

                        <xf:send if="instance()/error = ''" submission="publish-submission">
                            <xf:property name="doc"                      value="instance('fr-form')"/>
                            <xf:property name="document-id"              value="''"/>
                            <xf:property name="form-definition-version"  value="$form-definition-version"/>
                            <xf:property name="upgrade-form-definition"  value="$upgrade-form-definition"/>
                            <xf:property name="remote-server-url"        value="if ($local-write) then () else instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/url/string()"/>
                            <xf:property name="username"                 value="if (not($local-write)) then instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/username/string() else ()"/>
                            <xf:property name="password"                 value="if (not($local-write)) then instance()/remote-servers/remote-server[data(instance()/current-remote-server)]/password/string() else ()"/>
                            <xf:property name="force-attachments"        value="$force-attachments"/>
                            <xf:property name="available"                value="$new-available"/>
                        </xf:send>

                    </xf:action>
                </xf:action>

                <!-- Update the view -->
                <xf:dispatch name="fr-initialize" targetid="fr-form-model"/>

            </xf:action>

            <!-- NOTE: We don't pass `version-comment` at all so it won't be changed. -->
            <xf:submission
                id="publish-submission"
                ref="event('doc')"
                serialization="application/xml"
                method="post"
                resource="/fr/service/publish?document-id={
                        encode-for-uri(event('document-id'))
                    }&amp;form-definition-version={
                        encode-for-uri(event('form-definition-version'))
                    }&amp;upgrade-form-definition={
                        encode-for-uri(string(event('upgrade-form-definition')))
                    }&amp;remote-server-url={
                        encode-for-uri(event('remote-server-url'))
                    }&amp;username={
                        encode-for-uri(event('username'))
                    }&amp;password={
                        encode-for-uri(event('password'))
                    }&amp;force-attachments={
                        encode-for-uri(string(event('force-attachments')))
                    }&amp;available={
                        encode-for-uri(string(event('available')))
                    }"
                replace="instance"
                instance="fb-publish-response-instance"/>

            <xf:instance id="fb-publish-response-instance">
                <dummy/>
            </xf:instance>

            <!-- Form definition -->
            <xf:instance id="fr-form"><dummy/></xf:instance>

            <xf:submission
                id="read-form"
                method="get"
                serialization="none"
                resource="{event('base-uri')}/fr/service/persistence/crud/{event('app')}/{event('form')}/form/form.xhtml"
                xxf:username="{event('username')}"
                xxf:password="{event('password')}"
                replace="instance"
                instance="fr-form">

                <xf:setvalue
                    event="xforms-submit-done"
                    ref="instance()/form-definition-version"
                    value="event('response-headers')[lower-case(name) = 'orbeon-form-definition-version']/value"/>

                <!-- To retrieve a specific version -->
                <xf:header ref="event('form-version')[xxf:non-blank()]">
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="."/>
                </xf:header>

            </xf:submission>

            <xf:action event="xforms-submit-error" observer="read-form publish-submission">

                <xf:setvalue
                    ref="error"
                    value="'true'"/>

                <xf:action type="xpath">
                    fr:run-process('oxf.fr.home.process', 'error-message("database-error")')
                </xf:action>
            </xf:action>

            <!-- Paging information -->
            <xf:instance id="fr-paging-instance" xxf:expose-xpath-types="true">
                <paging xmlns="">
                    <total/>
                    <search-total/>
                    <page-size>20</page-size>
                    <page-number>1</page-number>
                    <page-count/>
                    <from>0</from>
                    <to>0</to>
                    <prev-trigger/>
                    <next-trigger/>
                </paging>
            </xf:instance>

            <!-- Calculations for page navigation -->
            <xf:bind ref="instance('fr-paging-instance')">
                <xf:bind ref="* except (prev-trigger, next-trigger)" type="xs:integer"/>
                <xf:bind ref="total"        calculate="count(instance('fr-metadata')/*)"/>
                <xf:bind ref="search-total" calculate="../total"/>
                <xf:bind ref="page-size"    calculate="(xxf:property('oxf.fr.home.page-size'), 20)[. castable as xs:integer][1]"/>
                <xf:bind ref="page-count"   calculate="(../search-total + ../page-size - 1) idiv ../page-size"/>
                <xf:bind ref="from"         calculate="if (../search-total = 0) then 0 else (../page-number - 1) * ../page-size + 1"/>
                <xf:bind ref="to"           calculate="min((../page-number * ../page-size, ../search-total))"/>
                <xf:bind ref="prev-trigger" readonly="../search-total = 0 or xs:integer(../page-number) le 1"/>
                <xf:bind ref="next-trigger" readonly="../search-total = 0 or xs:integer(../search-total) le xs:integer(../to)"/>
            </xf:bind>

        </xf:model>
    </xh:head>
    <xh:body>

        <!-- Scope variable with Form Runner resources -->
        <xf:var name="fr-resources" model="fr-resources-model" value="$fr-fr-resources"/>
        <xf:var name="fr-lang"      model="fr-resources-model" value="$fr-lang"/>

        <fr:view fluid="true">
            <fr:navbar/>
            <fr:row>
                <!-- Make sure not to show during initialization otherwise the alert appears at the top behind the modal dialog -->
                <xf:group ref=".[empty($forms) and instance()/initializing = 'false']">
                    <xf:output class="alert" value="$fr-resources/home/messages/no-forms"/>
                </xf:group>
                <xf:group ref=".[exists($forms)]">

                    <xf:group ref=".[$any-has-admin-permission]" class="btn-toolbar" xmlns="http://www.w3.org/1999/xhtml" xxf:element="div">
                        <div class="btn-group">

                            <button id="select-button" class="btn dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                <xf:output value="$fr-resources/home/buttons/select"/>
                                <span class="caret"/>
                            </button>
                            <ul class="dropdown-menu" role="menu" aria-labelledBy="select-button">
                                <li role="presentation">
                                    <xf:trigger appearance="minimal" role="menuitem">
                                        <xf:label ref="$fr-resources/home/buttons/all"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin']
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation">
                                    <xf:trigger appearance="minimal" role="menuitem">
                                        <xf:label ref="$fr-resources/home/buttons/none"/>
                                        <xf:setvalue event="DOMActivate" ref="instance()/selection"/>
                                    </xf:trigger>
                                </li>

                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(local-unpublish-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-unpublish-select">
                                        <xf:label ref="$fr-resources/home/buttons/unpublished-local"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isLocalUnavailable(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(local-publish-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-publish-select">
                                        <xf:label ref="$fr-resources/home/buttons/published-local"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isLocalAvailable(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(remote-unpublish-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-unpublish-select">
                                        <xf:label ref="$fr-resources/home/buttons/unpublished-remote"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isRemoteUnavailable(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(remote-publish-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-publish-select">
                                        <xf:label ref="$fr-resources/home/buttons/published-remote"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isRemoteAvailable(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(local-newer-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-newer-select">
                                        <xf:label ref="$fr-resources/home/buttons/newer-local"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isLocalNewer(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(remote-newer-select)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-newer-select">
                                        <xf:label ref="$fr-resources/home/buttons/newer-remote"/>
                                        <xf:setvalue
                                            event="DOMActivate"
                                            ref="instance()/selection"
                                            value="
                                                string-join(
                                                    for $f in $forms[xxf:split(@operations) = 'admin' and frf:isRemoteNewer(.)]
                                                    return
                                                        string-join(
                                                            ($f/application-name, $f/form-name, $f/form-version),
                                                            '/'
                                                        ),
                                                    ' '
                                                )"/>
                                    </xf:trigger>
                                </li>
                            </ul>
                        </div>

                        <div class="btn-group">

                            <button id="operations-button" class="btn dropdown-toggle" data-toggle="dropdown" aria-expanded="false">
                                <xf:output value="$fr-resources/home/buttons/operation"/>
                                <span class="caret"/>
                            </button>
                            <ul class="dropdown-menu" role="menu" aria-labelledBy="operations-button">
                                <li role="presentation" class="{if (xxf:readonly(local-publish-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-publish-action" id="fr-publish-local-button">
                                        <xf:label ref="$fr-resources/home/buttons/publish-local"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(local-unpublish-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-unpublish-action" id="fr-unpublish-local-button">
                                        <xf:label ref="$fr-resources/home/buttons/unpublish-local"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(remote-publish-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-publish-action" id="fr-publish-remote-button">
                                        <xf:label ref="$fr-resources/home/buttons/publish-remote"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(remote-unpublish-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-unpublish-action" id="fr-unpublish-remote-button">
                                        <xf:label ref="$fr-resources/home/buttons/unpublish-remote"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(local-to-remote-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-to-remote-action" id="fr-local-to-remote-button">
                                        <xf:label ref="$fr-resources/home/buttons/push-to-remote"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(remote-to-local-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-to-local-action" id="fr-remote-to-local-button">
                                        <xf:label ref="$fr-resources/home/buttons/pull-from-remote"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(summary-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="summary-action" id="fr-summary-button">
                                        <xf:label ref="$fr-resources/home/buttons/navigate-summary"/>
                                        <xf:load event="DOMActivate" resource="/fr/{xxf:split($selection[1], '/')[1]}/{xxf:split($selection[1], '/')[2]}/summary"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(new-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="summary-action" id="fr-new-button">
                                        <xf:label ref="$fr-resources/home/buttons/navigate-new"/>
                                        <xf:load event="DOMActivate" resource="/fr/{xxf:split($selection[1], '/')[1]}/{xxf:split($selection[1], '/')[2]}/new"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(local-upgrade-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-upgrade-action" id="fr-upgrade-local-button">
                                        <xf:label ref="$fr-resources/home/buttons/upgrade-local"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="{if (xxf:readonly(remote-upgrade-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="remote-upgrade-action" id="fr-upgrade-remote-button">
                                        <xf:label ref="$fr-resources/home/buttons/upgrade-remote"/>
                                    </xf:trigger>
                                </li>
                                <li role="presentation" class="divider"/>
                                <li role="presentation" class="{if (xxf:readonly(local-upgrade-action)) then 'disabled' else ()}">
                                    <xf:trigger appearance="minimal" role="menuitem" ref="local-upgrade-action" id="fr-reload-resources-button">
                                        <xf:label ref="$fr-resources/home/buttons/reload-resources"/>
                                        <xf:action event="DOMActivate">
                                            <xf:action iterate="$selection">
                                                <xf:var name="app"  value="xxf:split(., '/')[1]"/>
                                                <xf:var name="form" value="xxf:split(., '/')[2]"/>
                                                <xxf:invalidate-instance resource="/fr/service/i18n/fr-resources/{$app}/{$form}"/>
                                            </xf:action>
                                        </xf:action>
                                    </xf:trigger>
                                </li>
                            </ul>
                        </div>

                        <xf:trigger class="btn-group" xxf:modal="true">
                            <xf:label mediatype="text/html" ref="$fr-resources/buttons/refresh"/>
                            <xf:dispatch event="DOMActivate" name="fr-initialize" targetid="fr-form-model"/>
                        </xf:trigger>

                        <xh:div class="btn-group">
                            <xf:group ref=".[count(instance()/remote-servers/remote-server) gt 1]">
                                <xf:select1 ref="instance()/current-remote-server">
                                    <xf:label ref="$fr-resources/home/labels/remote-server" class="xforms-hidden"/>
                                    <xf:itemset ref="instance()/remote-servers/remote-server">
                                        <xf:label ref="label"/>
                                        <xf:value ref="position()"/>
                                    </xf:itemset>

                                    <xf:action event="xforms-value-changed">
                                        <xf:dispatch name="fr-initialize" targetid="fr-form-model"/>
                                    </xf:action>

                                </xf:select1>
                            </xf:group>
                        </xh:div>

                        <!-- Buttons for reindexing -->
                        <xf:group ref="instance('fr-reindex-instance')" xxf:internal="true">

                            <!-- Button: start reindexing -->
                            <xf:trigger ref=".[status = ('stopped', 'done')]"
                                        class="btn-group" >
                                <xf:label mediatype="text/html" ref="$fr-resources/home/buttons/reindex"/>
                                <xf:dispatch event="DOMActivate" name="fr-show" targetid="reindex-confirmation-dialog"/>
                            </xf:trigger>

                            <!-- Button: stop reindexing -->
                            <xf:trigger ref=".[status = ('starting', 'indexing')]"
                                        class="btn-group">
                                <xf:label mediatype="text/html" ref="$fr-resources/home/buttons/stop-reindex"/>
                                <xf:action event="DOMActivate" type="xpath">
                                    index:stop()
                                </xf:action>
                            </xf:trigger>

                        </xf:group>

                    </xf:group>

                    <!-- Progress bars for reindexing -->
                    <xf:group ref="instance('fr-reindex-instance')"
                              class="fr-reindex-status">
                        <xf:group ref=".[status = ('starting', 'indexing')]">
                            <xf:var name="have-doc-count" value="document-current != 0"/>

                            <!-- Status: when we don't have document count, show a generic message -->
                            <xf:group ref=".[not($have-doc-count)]">
                                <xf:output
                                    class="fr-loading"
                                    mediatype="text/html"
                                    value="$fr-resources/home/labels/reindexing-generic"/>
                            </xf:group>

                            <!-- Status: when we have document count, show progress bar -->
                            <xf:group ref=".[$have-doc-count]">
                                <xf:output
                                    value="xxf:format-message
                                        (
                                            $fr-resources/home/labels/reindexing-provider,
                                            (
                                                provider-token/string(),
                                                number(document-current),
                                                number(document-total)
                                            )
                                        )"/>
                                <xf:var name="percent" value="document-current div document-total * 100"/>
                                <xh:div class="progress progress-striped active">
                                  <xh:div class="bar" style="width: {$percent}%;"/>
                                </xh:div>
                            </xf:group>

                        </xf:group>

                        <!-- Status: message when stopping  -->
                        <xf:group ref=".[status = 'stopping']">
                            <xf:output
                                class="fr-loading"
                                mediatype="text/html"
                                value="$fr-resources/home/labels/reindexing-stopping"/>
                        </xf:group>

                        <!-- Status: done -->
                        <xf:group ref=".[status = 'done']">
                            <xf:output
                                class="fr-loading"
                                mediatype="text/html"
                                value="$fr-resources/home/labels/reindexing-finished"/>
                        </xf:group>
                    </xf:group>

                    <div class="pagination" xmlns="http://www.w3.org/1999/xhtml">
                        <ul>
                            <li class="{if (xxf:readonly(instance('fr-paging-instance')/prev-trigger)) then 'disabled' else ''}">
                                <xf:trigger ref="instance('fr-paging-instance')/prev-trigger" appearance="minimal" class="fr-navigate-first">
                                    <!-- https://github.com/orbeon/orbeon-forms/issues/1042 -->
                                    <xf:label>
                                        <xh:i class="fa fa-fw fa-step-backward"/>&#x200b;
                                    </xf:label>
                                    <xf:action event="DOMActivate">
                                        <xf:setvalue ref="instance('fr-paging-instance')/page-number" value="1"/>
                                        <xf:setindex repeat="forms-repeat" index="1"/>
                                    </xf:action>
                                </xf:trigger>
                            </li>
                            <li class="{if (xxf:readonly(instance('fr-paging-instance')/prev-trigger)) then 'disabled' else ''}">
                                <xf:trigger ref="instance('fr-paging-instance')/prev-trigger" appearance="minimal" class="fr-navigate-prev">
                                    <xf:label>
                                        <xh:i class="fa fa-fw fa-chevron-left"/>&#x200b;
                                    </xf:label>
                                    <xf:action event="DOMActivate">
                                        <xf:setvalue ref="instance('fr-paging-instance')/page-number" value=". - 1"/>
                                        <xf:setindex repeat="forms-repeat" index="1"/>
                                    </xf:action>
                                </xf:trigger>
                            </li>
                            <!-- Some results -->
                            <xf:group class="fr-paging-numbers" ref=".[xs:integer(instance('fr-paging-instance')/search-total) gt 0]">
                                <li role="presentation">
                                    <span>
                                        <xf:output value="max((instance('fr-paging-instance')/from, 0))"/>
                                        <xf:output value="$fr-resources/summary/paging/to"/>
                                        <xf:output value="max((instance('fr-paging-instance')/to, 0))"/>
                                        <xf:output value="$fr-resources/summary/paging/of"/>
                                        <xf:output value="instance('fr-paging-instance')/search-total"/>
                                    </span>
                                </li>
                            </xf:group>
                            <xf:group class="fr-paging-numbers" ref=".[xs:integer(instance('fr-paging-instance')/search-total) = 0]">
                                <!-- No results -->
                            </xf:group>
                            <li class="{if (xxf:readonly(instance('fr-paging-instance')/next-trigger)) then 'disabled' else ''}">
                                <xf:trigger ref="instance('fr-paging-instance')/next-trigger" appearance="minimal" class="fr-navigate-next">
                                    <xf:label>
                                        <xh:i class="fa fa-fw fa-chevron-right"/>&#x200b;
                                    </xf:label>
                                    <xf:action event="DOMActivate">
                                        <xf:setvalue ref="instance('fr-paging-instance')/page-number" value=". + 1"/>
                                        <xf:setindex repeat="forms-repeat" index="1"/>
                                    </xf:action>
                                </xf:trigger>
                            </li>
                            <li class="{if (xxf:readonly(instance('fr-paging-instance')/next-trigger)) then 'disabled' else ''}">
                                <xf:trigger ref="instance('fr-paging-instance')/next-trigger" appearance="minimal" class="fr-navigate-last">
                                    <xf:label>
                                        <xh:i class="fa fa-fw fa-step-forward"/>&#x200b;
                                    </xf:label>
                                    <xf:action event="DOMActivate">
                                        <xf:setvalue ref="instance('fr-paging-instance')/page-number" value="instance('fr-paging-instance')/page-count"/>
                                        <xf:setindex repeat="forms-repeat" index="1"/>
                                    </xf:action>
                                </xf:trigger>
                            </li>
                        </ul>
                    </div>

                    <xf:group xxf:update="full">
                        <xh:table class="fr-forms-table table table-bordered table-condensed table-hover">
                            <xh:thead>
								<xf:group ref=".[$remote-successful]">
									<xh:tr>
										<xf:group ref=".[$any-has-admin-permission]">
											<xh:th/>
										</xf:group>
										<xh:th colspan="{if ($any-has-admin-permission) then 2 else 1}"><xf:output value="$fr-resources/home/titles/local"/></xh:th>
										<xh:th colspan="{if ($any-has-admin-permission) then 2 else 1}"><xf:output value="$fr-resources/home/titles/remote"/></xh:th>
										<xh:th colspan="3"><xf:output value="$fr-resources/home/titles/form-identification"/></xh:th>
									</xh:tr>
								</xf:group>
								<xh:tr>
                                    <xf:group ref=".[$any-has-admin-permission]">
                                        <xh:th/>
                                        <xh:th><xf:output value="$fr-resources/home/titles/status"/></xh:th>
                                    </xf:group>
                                    <xh:th><xf:output value="$fr-resources/home/titles/last-modified"/></xh:th>
                                    <xf:group ref=".[$remote-successful]">
                                        <xf:group ref=".[$any-has-admin-permission]">
                                            <xh:th><xf:output value="$fr-resources/home/titles/status"/></xh:th>
                                        </xf:group>
                                        <xh:th><xf:output value="$fr-resources/home/titles/last-modified"/></xh:th>
                                    </xf:group>
                                    <xh:th><xf:output value="$fr-resources/home/titles/app"/></xh:th>
                                    <xh:th><xf:output value="$fr-resources/home/titles/form"/></xh:th>
                                    <xh:th><xf:output value="$fr-resources/home/titles/version"/></xh:th>
                                    <xh:th><xf:output value="$fr-resources/home/titles/title"/></xh:th>
                                </xh:tr>
                            </xh:thead>
                            <xh:tbody>
                                <xf:repeat ref="$forms[position() ge instance('fr-paging-instance')/from and position() le instance('fr-paging-instance')/to]" id="forms-repeat">
                                    <xf:var name="current"              value="."/>
                                    <xf:var name="local-available"      value="frf:isLocalAvailable(.)"/>
                                    <xf:var name="local-unavailable"    value="frf:isLocalUnavailable(.)"/>
                                    <xf:var name="remote-available"     value="frf:isRemoteAvailable(.)"/>
                                    <xf:var name="remote-unavailable"   value="frf:isRemoteUnavailable(.)"/>
                                    <xf:var name="ops"                  value="xxf:split(@operations)"/>
                                    <xf:var name="can-navigate-summary" value="$local-available and $ops = ('*', 'update', 'read', 'delete')"/>
                                    <xf:var name="can-navigate-new"     value="$local-available and $ops = ('*', 'create')"/>

                                    <xf:var
                                        name="link-to"
                                        value="xxf:split(xxf:property('oxf.fr.home.table.link-to'))[
                                            (. = 'summary' and $can-navigate-summary) or
                                            (. = 'new'     and $can-navigate-new)
                                        ][1]"/>

                                    <xf:var
                                        name="link"
                                        value="
                                            if (exists($link-to)) then
                                                concat(
                                                    '/fr/',
                                                    application-name,
                                                    '/',
                                                    form-name,
                                                    '/',
                                                    $link-to,
                                                    '?form-version=',
                                                    form-version
                                                )
                                            else
                                                ()"/>

                                    <xh:tr>
                                        <xf:group ref=".[$any-has-admin-permission]">
                                            <xh:td class="fr-home-select">
                                                <xf:select
                                                    appearance="full"
                                                    ref="instance()/selection[$ops = 'admin']"
                                                    id="document-selection">
                                                    <xf:item>
                                                        <xf:label/>
                                                        <xf:value context="$current" value="string-join((application-name, form-name, form-version), '/')"/>
                                                    </xf:item>
                                                </xf:select>
                                            </xh:td>
                                            <xh:td class="fr-home-status">
                                                <xf:output
                                                    ref=".[$ops = 'admin' and ($local-available or $local-unavailable)]"
                                                    class="label{if ($local-available) then ' label-success' else ''}"
                                                    value="if ($local-available) then $fr-resources/home/labels/available else $fr-resources/home/labels/unavailable"/>
                                                <xf:output
                                                    ref=".[form-name = 'library']"
                                                    class="label label-info"
                                                    value="$fr-resources/home/labels/library"/>
                                                <xf:output
                                                    ref=".[adjust-dateTime-to-timezone(last-modified-time) gt adjust-dateTime-to-timezone(remote-last-modified-time)]"
                                                    class="label label-warning"
                                                    value="$fr-resources/home/labels/newer"/>
                                            </xh:td>
                                        </xf:group>
                                        <xh:td class="fr-home-modified">
                                            <xf:output
                                                    ref="last-modified-time"
                                                    value="
                                                        for $v in
                                                            if (exists($tz)) then
                                                                adjust-dateTime-to-timezone(
                                                                    xs:dateTime(.),
                                                                    $tz
                                                                )
                                                            else
                                                                adjust-dateTime-to-timezone(
                                                                    xs:dateTime(.)
                                                                )
                                                        return
                                                            if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                            then format-dateTime($v, $fr-resources/common/formats/within-day, xxf:lang(), (), ())
                                                            else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                            then format-dateTime($v, $fr-resources/common/formats/day-this-year, xxf:lang(), (), ())
                                                            else format-dateTime($v, $fr-resources/common/formats/short-date, xxf:lang(), (), ())"/>
                                        </xh:td>
                                        <xf:group ref=".[$remote-successful]">
                                            <xf:group ref=".[$any-has-admin-permission]">
                                                <xh:td class="fr-home-status">
                                                    <xf:output
                                                        ref=".[$ops = 'admin' and ($remote-available or $remote-unavailable)]"
                                                        class="label{if ($remote-available) then ' label-success' else ''}"
                                                        value="if ($remote-available) then $fr-resources/home/labels/available else $fr-resources/home/labels/unavailable"/>
                                                    <xf:output
                                                        ref=".[form-name = 'library' and ($remote-available or $remote-unavailable)]"
                                                        class="label label-info"
                                                        value="$fr-resources/home/labels/library"/>
                                                    <xf:output
                                                        ref=".[adjust-dateTime-to-timezone(remote-last-modified-time) gt adjust-dateTime-to-timezone(last-modified-time)]"
                                                        class="label label-warning"
                                                        value="$fr-resources/home/labels/newer"/>
                                                </xh:td>
                                            </xf:group>
                                            <xh:td class="fr-home-modified">
                                                <xf:output
                                                    ref="remote-last-modified-time"
                                                    value="
                                                        for $v in
                                                            if (exists($tz)) then
                                                                adjust-dateTime-to-timezone(
                                                                    xs:dateTime(.),
                                                                    $tz
                                                                )
                                                            else
                                                                adjust-dateTime-to-timezone(
                                                                    xs:dateTime(.)
                                                                )
                                                        return
                                                            if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                            then format-dateTime($v, $fr-resources/common/formats/within-day, xxf:lang(), (), ())
                                                            else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                            then format-dateTime($v, $fr-resources/common/formats/day-this-year, xxf:lang(), (), ())
                                                            else format-dateTime($v, $fr-resources/common/formats/short-date, xxf:lang(), (), ())"/>
                                            </xh:td>
                                        </xf:group>
                                        <xh:td>
                                            <xh:a href="{$link}" class="{if ($link) then '' else 'xforms-hidden'}">
                                                <xf:output ref=".[$link]" value="application-name"/>
                                            </xh:a>
                                            <xf:output ref=".[not($link)]" value="application-name"/>
                                        </xh:td>
                                        <xh:td>
                                            <xh:a href="{$link}" class="{if ($link) then '' else 'xforms-hidden'}">
                                                <xf:output ref=".[$link]" value="form-name"/>
                                            </xh:a>
                                            <xf:output ref=".[not($link)]" value="form-name"/>
                                        </xh:td>
                                        <xh:td class="fr-home-version">
                                            <xh:a href="{$link}" class="{if ($link) then '' else 'xforms-hidden'}">
                                                <xf:output ref=".[$link]" value="form-version"/>
                                            </xh:a>
                                            <xf:output ref=".[not($link)]" value="form-version"/>
                                        </xh:td>
                                        <xh:td>
                                            <xf:var name="title" value="(title[@xml:lang = $fr-lang], title)[1]"/>
                                            <xh:a href="{$link}" class="{if ($link) then '' else 'xforms-hidden'}">
                                                <xf:output ref=".[$link]" value="$title"/>
                                            </xh:a>
                                            <xf:output ref=".[not($link)]" value="$title"/>
                                        </xh:td>
                                    </xh:tr>
                                </xf:repeat>
                            </xh:tbody>
                        </xh:table>
                    </xf:group>
                </xf:group>
            </fr:row>
            <xf:group ref=".[$any-has-admin-permission]">
                <fr:row>
                    <xh:div class="fr-orbeon-version">
                        <xf:output
                            value="version:VersionString()"
                            xmlns:version="java:org.orbeon.oxf.common.Version"/>
                    </xh:div>
                </fr:row>
            </xf:group>
        </fr:view>

        <!-- Confirmation dialogs -->

        <fr:alert-dialog id="publish-confirmation-dialog" close="true">
            <fr:label ref="$fr-resources/home/titles/publish-confirmation"/>
            <!-- Message is dynamically set -->
            <fr:negative-choice>
                <xf:action event="DOMActivate" type="xpath">
                    fr:run-process-by-name('oxf.fr.home.process', 'confirmation-cancel')
                </xf:action>
            </fr:negative-choice>
            <fr:positive-choice xxf:modal="true">
                <xf:action event="DOMActivate" type="xpath">
                    fr:run-process-by-name('oxf.fr.home.process', 'confirmation-ok')
                </xf:action>
            </fr:positive-choice>
        </fr:alert-dialog>

        <fr:alert-dialog id="reindex-confirmation-dialog" close="true">
            <fr:label ref="$fr-resources/home/titles/reindexing-confirmation"/>
            <fr:message value="$fr-resources/home/messages/reindexing-confirmation"/>
            <fr:negative-choice/>
            <fr:positive-choice>
                <xf:send event="DOMActivate"
                         submission="fr-reindex-submission"/>
            </fr:positive-choice>
        </fr:alert-dialog>

        <xf:action event="xxforms-dialog-close" observer="fr-credentials-dialog">
            <xf:action type="xpath">
                fr:run-process-by-name('oxf.fr.home.process', if (event('fr-connect')) then 'credentials-ok' else 'credentials-cancel')
            </xf:action>
        </xf:action>

        <!-- Credentials dialog -->
        <xxf:dialog id="fr-credentials-dialog" level="modal" close="true" draggable="true" class="fr-dialog fr-credentials-dialog">

            <xf:label ref="$fr-resources/home/titles/credentials"/>

            <xh:img src="/ops/images/xforms/warning_64.png" alt="" class="fr-dialog-icon"/>
            <xh:div class="fr-dialog-credentials-fields">

                <xf:var
                    name="remote-server"
                    value="instance()/remote-servers/remote-server[data(instance()/current-remote-server)]"/>

                <fr:grid>
                    <xh:tr>
                        <xh:td>
                            <xf:group ref=".[count(instance()/remote-servers/remote-server) gt 1]">
                                <xf:select1 ref="instance()/current-remote-server">
                                    <xf:label ref="$fr-resources/home/labels/remote-server"/>
                                    <xf:itemset ref="instance()/remote-servers/remote-server">
                                        <xf:label ref="label"/>
                                        <xf:value ref="position()"/>
                                    </xf:itemset>
                                </xf:select1>
                            </xf:group>
                        </xh:td>
                    </xh:tr>
                    <xh:tr>
                        <xh:td>
                            <xf:input ref="$remote-server/username">
                                <xf:label ref="$fr-resources/home/labels/username"/>
                            </xf:input>
                        </xh:td>
                    </xh:tr>
                    <xh:tr>
                        <xh:td>
                            <xf:secret ref="$remote-server/password">
                                <xf:label ref="$fr-resources/home/labels/password"/>
                            </xf:secret>
                        </xh:td>
                    </xh:tr>
                </fr:grid>
            </xh:div>
            <xh:div class="fr-dialog-buttons">
                <xf:trigger id="cancel-button" xxf:modal="true">
                    <xf:label ref="$fr-resources/home/buttons/cancel"/>
                </xf:trigger>
                <xf:trigger appearance="xxf:primary" id="connect-button" xxf:modal="true">
                    <xf:label ref="$fr-resources/home/buttons/connect"/>
                </xf:trigger>
            </xh:div>

            <xf:action event="DOMActivate">
                <xf:action if="event('xxf:targetid') = 'cancel-button'">
                    <xxf:hide event="DOMActivate" dialog="fr-credentials-dialog"/>
                </xf:action>
                <xf:action if="not(event('xxf:targetid') = 'cancel-button') and valid(($remote-server/username, $remote-server/password))">
                    <xxf:hide dialog="fr-credentials-dialog">
                        <xf:property name="fr-connect" value="true()"/>
                    </xxf:hide>
                </xf:action>
                <xf:action if="not(event('xxf:targetid') = 'cancel-button') and not(valid(($remote-server/username, $remote-server/password)))">
                    <xxf:setvisited control="fr-credentials-dialog" recurse="true"/>
                </xf:action>
            </xf:action>

        </xxf:dialog>
<!--        <fr:xforms-inspector/>-->
    </xh:body>
</xh:html>
