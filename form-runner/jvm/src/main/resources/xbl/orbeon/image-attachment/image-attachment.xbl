<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:xbl="http://www.w3.org/ns/xbl"
    xmlns:xxbl="http://orbeon.org/oxf/xml/xbl">

    <xbl:binding
        id="fr-image-attachment"
        element="fr|image-attachment"
        xxbl:mode="binding lhha value"
        xxbl:container="span"
        xxbl:label-for="fr-image-attachment-elem">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Image Attachment</display-name>
            <display-name lang="es">Adjuntar Imagen</display-name>
            <display-name lang="fi">Kuvan liittäminen</display-name>
            <display-name lang="fr">Image jointe</display-name>
            <display-name lang="ru">Загрузка изображения</display-name>
            <display-name lang="de">Bild Anhang</display-name>
            <display-name lang="it">Immagine allegata</display-name>
            <display-name lang="sv">Bild som bilaga</display-name>
            <display-name lang="nl">Afbeeldingbijlage</display-name>
            <display-name lang="pt">Anexar imagem</display-name>
            <display-name lang="ar">مرفق صورة</display-name>
            <icon>
                <icon-class>fa fa-fw fa-file-image-o</icon-class>
            </icon>
            <templates>
                <bind type="xf:anyURI" constraint="xxf:upload-mediatypes('image/*')"/>
                <instance filename="" mediatype="" size=""/>
                <view>
                     <fr:image-attachment id="" ref="" class="fr-attachment">
                        <xf:label ref=""/>
                        <xf:hint ref=""/>
                        <xf:help ref=""/>
                        <xf:alert ref=""/>
                    </fr:image-attachment>
                </view>
            </templates>

            <control-details>
                <xf:model xmlns="">

                    <xf:action event="xforms-model-construct-done">
                        <xf:action iterate="instance('local')/*">
                            <xf:var name="local-elem"  value="."/>
                            <xf:var name="param-name"  value="name($local-elem)"/>
                            <xf:var name="control-att" value="instance()/@*[name() = concat('transform-', $param-name)]"/>
                            <xf:setvalue
                                ref="$local-elem"
                                value="
                                    if (empty($control-att)) then
                                        -1
                                    else if (xxf:is-blank($control-att)) then
                                        $local-elem/@default
                                    else
                                        $control-att"/>
                        </xf:action>
                    </xf:action>

                    <xf:instance id="local" xxf:exclude-result-prefixes="#all">
                        <_>
                            <max-width  default="-2"/>
                            <max-height default="-2"/>
                            <quality    default="80"/>
                            <format     default="-2"/>
                        </_>
                    </xf:instance>

                    <xf:bind ref="instance('local')">
                        <xf:bind
                            ref="max-width | max-height"
                            type="xf:integer"
                            xxf:whitespace="trim"
                            constraint=". = (-1, -2) or xxf:positive()"/>
                        <xf:bind
                            ref="quality"
                            type="xf:integer"
                            xxf:whitespace="trim"
                            constraint=". = -1 or (xxf:positive() and . le 100)"/>
                        <!-- We don't need or want this fancy logic since it is allowed to override just `quality` or
                             `format` at the control level. -->
<!--                        <xf:bind-->
<!--                            ref="quality | format"-->
<!--                            calculate="-->
<!--                                if (-->
<!--                                    xxf:is-blank(../max-width/string()) and-->
<!--                                    xxf:is-blank(../max-height/string())-->
<!--                                ) then-->
<!--                                    @default-->
<!--                                else-->
<!--                                    ."-->
<!--                            readonly="-->
<!--                                xxf:is-blank(../max-width/string()) and-->
<!--                                xxf:is-blank(../max-height/string())"/>-->
                    </xf:bind>

                    <xf:instance id="fr-form-resources" xxf:readonly="true" xxf:exclude-result-prefixes="#all">
                        <_>
                            <resource xml:lang="en">
                                <max-width>
                                    <label>Adjust to maximum width to</label>
                                    <item value="-1">Use default</item>
                                    <item value="-2">No adjustment</item>
                                </max-width>
                                <max-height>
                                    <label>Adjust to maximum height to</label>
                                </max-height>
                                <quality>
                                    <label>Compressed image quality</label>
                                    <item value="-1">Use default</item>
                                    <item value="90">High (90%)</item>
                                    <item value="80">Medium (80%)</item>
                                    <item value="70">Low (70%)</item>
                                    <item value="50">Very low (50%)</item>
                                </quality>
                                <format>
                                    <label>Resulting image format</label>
                                    <item value="-1">Use default</item>
                                    <item value="-2">Preserve</item>
                                </format>
                            </resource>
                            <resource xml:lang="fr">
                                <max-width>
                                    <label>Ajuster la largeur maximale à</label>
                                    <item value="-1">Utiliser le défaut</item>
                                    <item value="-2">Ne pas ajuster</item>
                                </max-width>
                                <max-height>
                                    <label>Ajuster la hauteur maximale à</label>
                                </max-height>
                                <quality>
                                    <label>Qualité de l'image après compression</label>
                                    <item value="-1">Utiliser le défaut</item>
                                    <item value="90">Haute (90%)</item>
                                    <item value="80">Moyenne (80%)</item>
                                    <item value="70">Basse (70%)</item>
                                    <item value="50">Très basse (50%)</item>
                                </quality>
                                <format>
                                    <label>Format d'image résultant</label>
                                    <item value="-1">Utiliser le défaut</item>
                                    <item value="-2">Préserver</item>
                                </format>
                            </resource>
                            <resource xml:lang="ar">
                                <max-width>
                                    <label>ضبط العرض الأقصى إلى</label>
                                    <item value="-1">استخدام الإعداد الافتراضي</item>
                                    <item value="-2">بدون ضبط</item>
                                </max-width>
                                <max-height>
                                    <label>ضبط الارتفاع الأقصى إلى</label>
                                </max-height>
                                <quality>
                                    <label>جودة الصورة المضغوطة</label>
                                    <item value="-1">استخدام الإعداد الافتراضي</item>
                                    <item value="90">عالية (90%)</item>
                                    <item value="80">متوسطة (80%)</item>
                                    <item value="70">منخفضة (70%)</item>
                                    <item value="50">منخفضة جداً (50%)</item>
                                </quality>
                                <format>
                                    <label>تنسيق الصورة الناتج</label>
                                    <item value="-1">استخدام الإعداد الافتراضي</item>
                                    <item value="-2">الحفاظ على التنسيق</item>
                                </format>
                            </resource>
                        </_>
                    </xf:instance>

                </xf:model>
                <fr:grid xmlns="" id="fb-editor-image-attachment-grid">
                    <fr:c x="1" y="1" w="6">
                        <fr:open-select1
                            ref="instance('local')/max-width"
                            appearance="minimal"
                            id="max-width-control"

                            type="integer"

                            suffix="px">
                            <xf:label ref="xxf:r('max-width.label')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>

                            <xf:itemset ref="xxf:resource-elements('max-width.item')">
                                <xf:label ref="."/>
                                <xf:value ref="@value"/>
                            </xf:itemset>

                        </fr:open-select1>
                    </fr:c>
                    <fr:c x="7" y="1" w="6">
                        <fr:open-select1
                            ref="instance('local')/max-height"
                            appearance="minimal"
                            id="max-height-control"

                            type="integer"

                            suffix="px">
                            <xf:label ref="xxf:r('max-height.label')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>

                            <xf:itemset ref="xxf:resource-elements('max-width.item')">
                                <xf:label ref="."/>
                                <xf:value ref="@value"/>
                            </xf:itemset>

                        </fr:open-select1>
                    </fr:c>
                    <fr:c x="1" y="2" w="6">
                        <xf:select1 ref="instance('local')/format" id="format-control">
                            <xf:label ref="xxf:r('format.label')"/>
                            <xf:itemset ref="xxf:resource-elements('format.item')">
                                <xf:label ref="."/>
                                <xf:value ref="@value"/>
                            </xf:itemset>
                            <xf:item>
                                <xf:label>JPEG</xf:label>
                                <xf:value>jpg</xf:value>
                            </xf:item>
                            <xf:item>
                                <xf:label>PNG</xf:label>
                                <xf:value>png</xf:value>
                            </xf:item>
                        </xf:select1>
                    </fr:c>
                    <fr:c x="7" y="2" w="6">
                        <fr:open-select1
                            ref="instance('local')/quality"
                            appearance="minimal"
                            id="quality-control"

                            type="integer"

                            suffix="%"
                            digits-after-decimal="0"
                            round-when-storing="true"
                            round-when-formatting="true">

                            <xf:label ref="xxf:r('quality.label')"/>
                            <xf:alert ref="xxf:r('components.parameters-editor.name.alert', '|fr-form-resources|')"/>

                            <xf:itemset ref="xxf:resource-elements('quality.item')">
                                <xf:label ref="."/>
                                <xf:value ref="@value"/>
                            </xf:itemset>

                        </fr:open-select1>
                    </fr:c>
                </fr:grid>
                <xf:action
                    id="fb-editor-action"
                    event="xforms-value-changed"
                    observer="
                        max-width-control
                        max-height-control
                        quality-control
                        format-control">

                    <xf:var
                        name="param-name"
                        value="name(event('xxf:binding'))"/>

                    <xf:var
                        name="new-value"
                        value="
                            let $binding := event('xxf:binding'),
                                $v       := $binding/string(),
                                $default := $binding/@default/string()
                            return
                                if ($v = '-1') then
                                    ()
                                else if ($v = $default) then
                                    ''
                                else
                                    $v
                        "/>

                    <xf:insert
                        context="instance()"
                        if="exists($new-value)"
                        origin="
                            xf:attribute(concat('transform-', $param-name), $new-value)"/>
                    <xf:delete
                        if="empty($new-value)"
                        ref="instance()/@*[name() = concat('transform-', $param-name)]"/>
                </xf:action>
            </control-details>

        </metadata>

        <xbl:resources>
            <xbl:style src="/xbl/orbeon/image-attachment/image-attachment.css"/>
        </xbl:resources>

        <xbl:template>
            <xf:var
                name="binding"
                value="xxf:binding('fr-image-attachment')"/>

            <xh:div id="fr-image-attachment-elem" xxf:control="true">
                <fr:attachment
                    ref="$binding"
                    accept="{(xxf:custom-mip($binding, 'upload-mediatypes')[xxf:non-blank()], 'image/*')[1]}">

                    <xf:filename  ref="@filename"  xxbl:scope="outer"/>
                    <xf:mediatype ref="@mediatype" xxbl:scope="outer"/>
                    <xxf:size     ref="@size"      xxbl:scope="outer"/>

                    <!-- Retarget of upload events -->
                    <!-- NOTE: Duplicated logic in attachment.xbl -->
                    <xf:dispatch
                        event="xxforms-upload-start xxforms-upload-cancel"
                        targetid="fr-image-attachment"
                        name="{event('xxf:type')}"/>

                    <xf:dispatch
                        event="xxforms-upload-done"
                        targetid="fr-image-attachment"
                        name="{event('xxf:type')}"
                        propagate="stop"
                        defaultAction="cancel">
                        <xf:property name="filename"       value="event('filename')"/>
                        <xf:property name="content-type"   value="event('content-type')"/>
                        <xf:property name="content-length" value="event('content-length')"/>
                    </xf:dispatch>

                    <xf:dispatch
                        event="xxforms-upload-error"
                        targetid="fr-image-attachment"
                        name="{event('xxf:type')}"
                        propagate="stop"
                        defaultAction="cancel">
                        <xf:property name="error-type" value="event('error-type')"/>
                        <xf:property name="permitted"  value="event('permitted')"/>
                        <xf:property name="actual"     value="event('actual')"/>
                        <xf:property name="message"    value="event('message')"/>
                    </xf:dispatch>

                    <xf:action
                        event="xxforms-upload-done"
                        if="exists(
                            (
                                fr:component-param-value('transform-max-width'),
                                fr:component-param-value('transform-max-height'),
                                fr:component-param-value('transform-quality'),
                                fr:component-param-value('transform-format')
                            )
                        )"
                        type="xpath">
                        fr:transform-uploaded-image(
                            $binding,
                            fr:component-param-value('transform-max-width'),
                            fr:component-param-value('transform-max-height'),
                            fr:component-param-value('transform-quality'),
                            fr:component-param-value('transform-format')
                        )
                    </xf:action>

                </fr:attachment>
                <xf:output mediatype="image/*" ref="$binding[xxf:non-blank()]">
                    <xf:filename  ref="@filename"  xxbl:scope="outer"/>
                    <xf:mediatype ref="@mediatype" xxbl:scope="outer"/>
                    <xf:header ref="fr:attachment-form-version()">
                        <xf:name>Orbeon-Form-Definition-Version</xf:name>
                        <xf:value value="."/>
                    </xf:header>
                    <xf:header ref="$binding[@fr:attachment-encrypted = 'true']">
                        <xf:name>Orbeon-Decrypt</xf:name>
                        <xf:value>true</xf:value>
                    </xf:header>
                </xf:output>
            </xh:div>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
