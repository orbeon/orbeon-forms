<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <xbl:script src="/ops/yui/menu/menu-min.js"/>
    <xbl:script src="/ops/yui/element/element-min.js"/>
    <xbl:script src="/ops/yui/button/button-min.js"/>
    <xbl:script src="/xbl/orbeon/select1-button/select1-button.js"/>

    <xbl:binding id="fr-select1-button" element="fr|select1-button">
        <xbl:resources>
            <xbl:style src="/ops/yui/menu/assets/skins/sam/menu.css"/>
            <xbl:style src="/ops/yui/button/assets/skins/sam/button.css"/>
            <xbl:style src="/xbl/orbeon/select1-button/select1-button.css"/>
        </xbl:resources>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/copy-modes.xsl"/>
                <xsl:template match="/*">

                    <xforms:group xbl:attr="model context ref bind" xxbl:scope="outer">
                        <!-- TODO: why doesn't this work with a appearance="xxforms:internal"? -->
                        <xforms:group xxbl:scope="inner" id="component-inner-group">
                            <xforms:action ev:event="#all" ev:propagate="stop"/>

                            <!-- Variable pointing to external single-node binding -->
                            <xxforms:variable name="external-value" as="node()?"><xxforms:sequence select="." xxbl:scope="outer"/></xxforms:variable>

                            <!-- HACK: Whether we are Form Runner-read-only -->
                            <xxforms:variable name="readonly" select="xxforms:instance('fr-parameters-instance')/mode = ('view', 'pdf', 'email')"/>

                            <!-- Init event -->
                            <xforms:action id="xf-en" ev:event="xforms-enabled" ev:observer="component-inner-group" ev:target="component-inner-group">
                                <xxforms:script if="not($readonly)" id="init">YAHOO.xbl.fr.Select1Button.instance(this).init();</xxforms:script>
                            </xforms:action>

                            <!-- XForms select1 used as a datasource -->
                            <xforms:select1 ref="$external-value" class="fr-select1-button-select1" id="hidden-select" style="display: none">
                                <xxforms:script if="not($readonly)" ev:event="xforms-enabled xxforms-iteration-moved" id="enabled">YAHOO.xbl.fr.Select1Button.instance(this).enabled();</xxforms:script>
                                <xxforms:script if="not($readonly)" ev:event="xforms-value-changed" id="value-changed" >YAHOO.xbl.fr.Select1Button.instance(this).valueChanged();</xxforms:script>
                                <xxforms:script if="not($readonly)" ev:event="xforms-readonly" id="readonly">YAHOO.xbl.fr.Select1Button.instance(this).readonly();</xxforms:script>
                                <xxforms:script if="not($readonly)" ev:event="xforms-readwrite" id="readwrite">YAHOO.xbl.fr.Select1Button.instance(this).readwrite();</xxforms:script>

                                <xsl:apply-templates select="xforms:itemset | xforms:item"/>
                            </xforms:select1>

                            <xforms:group ref=".[$readonly]">
                                <xforms:output value="xxforms:itemset('hidden-select', 'xml')//item[value = $external-value]/label"/>
                            </xforms:group>
                            <xforms:group ref=".[not($readonly)]">

                                <!-- HTML button styled by YUI as a drop-down button -->
                                <xhtml:input type="button" id="button" value="" class="fr-select1-button-button"/>

                                <!-- Tell user of this component a value was selected -->
                                <xforms:trigger class="fr-select1-button-xforms-select" style="display: none">
                                    <xforms:label/>
                                    <xforms:dispatch ev:event="DOMActivate" name="xforms-select" target="fr-select1-button"/>
                                </xforms:trigger>

                                <!-- Detect change in itemset and call JavaScript -->
                                <xxforms:variable id="itemset-value" name="itemset-value" select="xxforms:itemset('hidden-select', 'json')"/>
                                <xxforms:script ev:event="xforms-value-changed" ev:target="itemset-value" id="itemset-changed">YAHOO.xbl.fr.Select1Button.instance(this).itemsetChanged();</xxforms:script>
                            </xforms:group>
                        </xforms:group>
                    </xforms:group>
                </xsl:template>

                <!-- Add xxbl:scope="outer" on copied xforms:itemset and xforms:item -->
                <xsl:template match="xforms:itemset | xforms:item">
                    <xsl:copy>
                        <xsl:attribute name="xxbl:scope">outer</xsl:attribute>
                        <xsl:apply-templates select="@* | node()"/>
                    </xsl:copy>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>

</xbl:xbl>