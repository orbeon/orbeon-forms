<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xh="http://www.w3.org/1999/xhtml"
         xmlns:xf="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:exf="http://www.exforms.org/exf/1-0"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl">

    <!--
        Component to represent a date control based on drop-down menus.
     -->
    <xbl:binding id="fr-dropdown-date-binding" element="fr|dropdown-date" xxbl:container="span" xxbl:mode="lhha binding value">

        <!-- Orbeon Form Builder Component Metadata -->
        <metadata xmlns="http://orbeon.org/oxf/xml/form-builder">
            <display-name lang="en">Dropdown Date</display-name>
            <display-name lang="fr">Date avec menus</display-name>
            <display-name lang="ru">Дата выпадающим меню</display-name>
            <display-name lang="it">Data a tendina</display-name>
            <display-name lang="de">Dropdown-Datum</display-name>
            <icon lang="en">
                <small-icon>/ops/images/xforms/calendar.png</small-icon>
                <large-icon>/ops/images/xforms/calendar.png</large-icon>
            </icon>
            <templates>
                <bind type="xf:date"/>
                <view>
                    <fr:dropdown-date>
                        <xf:label ref=""/>
                        <xf:hint ref=""/>
                        <xf:help ref=""/>
                        <xf:alert ref=""/>
                    </fr:dropdown-date>
                </view>
            </templates>
        </metadata>

        <xbl:resources>
            <xbl:style>
                .xbl-fr-dropdown-date .fr-component-group select.xforms-select1-appearance-minimal,
                    .xbl-fr-dropdown-date .fr-component-group span.xforms-select1-appearance-minimal select { width: auto }
            </xbl:style>
        </xbl:resources>
        <xbl:implementation>
            <!-- Local model -->
            <xf:model id="date-model">
                <xf:instance id="date-instance">
                    <date>
                        <!-- Individual components of the date -->
                        <year/>
                        <month/>
                        <day/>
                        <!-- Whether the resulting date is valid -->
                        <is-valid/>
                        <!-- Whether the values are readonly -->
                        <is-readonly/>
                    </date>
                </xf:instance>

                <!-- Make instance read-only when the form must be read-only -->
                <xf:bind ref="." readonly="is-readonly = 'true'"/>

                <!-- TODO: would need global instances! -->
                <xf:instance id="years-itemset">
                    <years/>
                </xf:instance>

                <xf:instance id="months-itemset">
                    <months/>
                </xf:instance>

                <xf:instance id="days-itemset">
                    <days/>
                </xf:instance>

                <xf:instance id="orbeon-resources" xxf:readonly="true">
                    <resources>
                        <resource xml:lang="en">
                            <year>Year</year>
                            <month>Month</month>
                            <day>Day</day>
                        </resource>
                        <resource xml:lang="fr">
                            <year>Année</year>
                            <month>Mois</month>
                            <day>Jour</day>
                        </resource>
                        <resource xml:lang="it">
                            <year>Anno</year>
                            <month>Mese</month>
                            <day>Giorno</day>
                        </resource>
                        <resource xml:lang="de">
                            <year>Jahr</year>
                            <month>Monat</month>
                            <day>Tag</day>
                        </resource>
                    </resources>
                </xf:instance>

                <!-- Initialize itemsets upon initialization -->
                <xf:action ev:event="xforms-model-construct-done">
                    <xf:var name="start-year" value="saxon:evaluate(xxf:property('oxf.xforms.xbl.fr.dropdown-date.start-year'))" as="xs:integer"/>
                    <xf:var name="end-year"   value="saxon:evaluate(xxf:property('oxf.xforms.xbl.fr.dropdown-date.end-year'  ))" as="xs:integer"/>
                    <xf:action iterate="($start-year to $end-year)">
                        <xf:var name="year" value="." as="xs:string"/>
                        <xf:insert context="instance('years-itemset')" origin="xxf:element('year', $year)"/>
                    </xf:action>
                    <xf:action iterate="(1 to 12)">
                        <xf:var name="month" value="." as="xs:string"/>
                        <xf:insert context="instance('months-itemset')" ref="*" origin="xxf:element('month', $month)"/>
                    </xf:action>
                    <xf:action iterate="(1 to 31)">
                        <xf:var name="day" value="." as="xs:string"/>
                        <xf:insert context="instance('days-itemset')" ref="*" origin="xxf:element('day', $day)"/>
                    </xf:action>
                </xf:action>
            </xf:model>
        </xbl:implementation>
        <xbl:template>
            <!-- Read external value -->
            <xf:var name="binding" value="xxf:binding('fr-dropdown-date-binding')"/>
            <xf:var name="value" as="xs:string" value="$binding/string()">
                <xf:action ev:event="xforms-value-changed xforms-enabled">
                    <!-- Only set local values if the bound node is an xs:date -->
                    <xf:action if="$value castable as xs:date">
                        <xf:setvalue ref="instance('date-instance')/year" value="year-from-date($binding)"/>
                        <xf:setvalue ref="instance('date-instance')/month" value="month-from-date($binding)"/>
                        <xf:setvalue ref="instance('date-instance')/day" value="day-from-date($binding)"/>
                    </xf:action>
                    <xf:action if="not($value castable as xs:date) and normalize-space($value) = ''">
                        <xf:setvalue ref="instance('date-instance')/year"/>
                        <xf:setvalue ref="instance('date-instance')/month"/>
                        <xf:setvalue ref="instance('date-instance')/day"/>
                    </xf:action>
                    <xf:action if="not($value castable as xs:date) and count(tokenize($value, '-')) ge 3">
                        <xf:action iterate="tokenize($value, '-')">
                            <xf:var name="position" value="position()" as="xs:integer"/>
                            <xf:setvalue ref="instance('date-instance')/*[$position]"
                                             value="if (context() castable as xs:integer) then xs:integer(context()) else ''"/>
                        </xf:action>
                    </xf:action>
                </xf:action>
            </xf:var>

            <!-- Propagate readonly -->
            <xf:var name="readonly" as="xs:boolean" value="exf:readonly($binding)">
                <xf:setvalue ev:event="xforms-enabled xforms-value-changed"
                             ref="instance('date-instance')/is-readonly" value="exf:readonly($binding)"/>
            </xf:var>

            <xf:group class="fr-component-group">
                <xf:group ref=".[not(is-readonly = 'true' and property('xxf:readonly-appearance') = 'static')]">
                    <!-- Don't show fields at all in static readonly mode -->
                    <!-- NOTE: navindex is copied to first field, but need one for second field too! -->
                    <xf:select1 ref="year" xbl:attr="navindex navindex=tabindex">
                        <xf:item>
                            <xf:label value="xxf:r('year')"/>
                            <xf:value/>
                        </xf:item>
                        <xf:itemset ref="instance('years-itemset')/year">
                            <xf:label ref="."/>
                            <xf:value ref="."/>
                        </xf:itemset>
                    </xf:select1>
                    <xf:select1 ref="month">
                        <xf:item>
                            <xf:label value="xxf:r('month')"/>
                            <xf:value/>
                        </xf:item>
                        <xf:itemset ref="instance('months-itemset')/month">
                            <xf:label ref="."/>
                            <xf:value ref="."/>
                        </xf:itemset>
                    </xf:select1>
                    <xf:select1 ref="day">
                        <xf:item>
                            <xf:label value="xxf:r('day')"/>
                            <xf:value/>
                        </xf:item>
                        <xf:itemset ref="instance('days-itemset')/day">
                            <xf:label ref="."/>
                            <xf:value ref="."/>
                        </xf:itemset>
                    </xf:select1>

                    <!-- React to update to local values -->
                    <xf:action ev:event="xforms-value-changed">
                        <xf:var name="c" value="normalize-space(string-join((year, month, day), ''))" as="xs:string"/>
                        <!-- Blank result -->
                        <xf:action if="$c = ''">
                            <xf:setvalue ref="is-valid" value="false()"/>
                            <xf:setvalue ref="$binding"/>
                        </xf:action>
                        <!-- Non-blank result -->
                        <xf:action if="$c != ''">
                            <!-- Compute date parts -->
                            <xf:var name="y" value="if (year castable as xs:integer) then format-number(xs:integer(year), '0000') else '____'" as="xs:string"/>
                            <xf:var name="m" value="if (month castable as xs:integer) then format-number(xs:integer(month), '00') else '__'" as="xs:string"/>
                            <xf:var name="d" value="if (day castable as xs:integer) then format-number(xs:integer(day), '00') else '__'" as="xs:string"/>

                            <!-- Create date string -->
                            <xf:var name="date-string" value="string-join(($y, $m, $d), '-')" as="xs:string"/>

                            <!-- Set value to format like 2008-02-31 or 0000-12-01 if parts are unknown -->
                            <xf:setvalue ref="is-valid" value="$date-string castable as xs:date"/>
                            <xf:setvalue ref="$binding" value="$date-string"/>
                        </xf:action>
                    </xf:action>
                </xf:group>
                <xf:group ref=".[is-readonly = 'true' and property('xxf:readonly-appearance') = 'static']">
                    <!-- Static readonly mode -->
                    <xf:output ref="$binding"/>
                </xf:group>
            </xf:group>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
