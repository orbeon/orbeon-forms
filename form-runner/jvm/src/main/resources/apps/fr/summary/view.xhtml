<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<html xmlns:xs="http://www.w3.org/2001/XMLSchema"
      xmlns:xf="http://www.w3.org/2002/xforms"
      xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
      xmlns:xi="http://www.w3.org/2001/XInclude"
      xmlns:xh="http://www.w3.org/1999/xhtml"
      xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
      xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
      xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
      xmlns="http://www.w3.org/1999/xhtml">

    <head>
        <!-- Make sure to use the source form's title -->
        <xh:title><xf:output value="$source-form-metadata/title[@xml:lang = xxf:lang()], $source-form-metadata/title"/></xh:title>
        <xh:link rel="stylesheet" href="/apps/fr/style/form-runner-summary.css" type="text/css" media="all"/>

        <!-- This page needs access to Form Builder permission -->
        <xi:include href="oxf:/apps/fr/includes/permissions-model.xml" xxi:omit-xml-base="true"/>

        <xi:include href="oxf:/apps/fr/includes/bulk-apply.xml" xxi:omit-xml-base="true"/>

        <!-- FR Summary page XForms model -->
        <xf:model id="fr-form-model" xxf:xpath-analysis="true">

            <xf:var name="parameters" value="xxf:instance('fr-parameters-instance')"/>

            <xf:var name="app"  value="$parameters/app/string()"/>
            <xf:var name="form" value="$parameters/form/string()"/>

            <xf:var name="is-fb"        value="$app = 'orbeon' and $form = 'builder'"/>
            <xf:var name="has-fb-roles" value="$is-fb and not(xxf:instance('fb-permissions')/@has-roles = 'false')"/>

            <xf:var
                name="tz"
                value="
                    for $offset in frf:defaultTimezoneToOffsetString()
                    return xs:dayTimeDuration($offset)"/>

            <xf:var
                name="app-query"
                as="element(query)?"
                value="
                    if ($has-fb-roles) then
                        instance('fr-search-instance')/query[
                            contains(@path, 'application-name') and
                            @summary-search-field = 'true'
                        ]
                    else
                        ()"/>

            <xf:var
                name="form-query"
                as="element(query)?"
                value="
                    if ($app-query) then
                        instance('fr-search-instance')/query[
                            contains(@path, 'form-name') and
                            @summary-search-field = 'true'
                        ]
                    else
                        ()"/>

            <xf:var
                name="has-fb-roles-for-all-apps"
                value="$has-fb-roles and exists(xxf:instance('fb-permissions')/app[@name = '*'])"/>

            <xf:var name="app-is-dropdown"  value="exists($app-query) and not($has-fb-roles-for-all-apps)"/>
            <xf:var name="current-app"      value="xxf:instance('fb-permissions')/app[@name = $app-query]"/>
            <xf:var name="form-is-dropdown" value="exists($form-query) and not($has-fb-roles-for-all-apps) and not($current-app/form[@name = '*'])"/>

            <xf:var
                name="initial-app-value"
                as="xs:string?"
                value="
                    if ($app-query) then
                        xxf:instance('fb-permissions')/app[1][not(@name = '*')]/@name
                    else
                        ()"/>

            <xf:var name="selection-is-one-document" value="count(xxf:split(instance('fr-selection-instance'))) = 1"/>
            <xf:var name="selection-data-or-draft"   value="if ($selection-is-one-document) then substring-before(instance('fr-selection-instance'), '/') else ()"/>
            <xf:var name="selection-document-id"     value="if ($selection-is-one-document) then substring-after (instance('fr-selection-instance'), '/') else ()"/>

            <!-- Source form -->
            <xf:instance id="fr-source-form-instance" xxf:readonly="false" xxf:exclude-result-prefixes="#all"><!-- Set to false so that xf:insert works -->
                <form xmlns=""/>
            </xf:instance>

            <xf:var
                name="source-form-metadata"
                value="instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-metadata']/*"/>

            <xf:var
                name="source-form-attachments"
                value="instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-attachments']/*"/>

            <xf:var
                name="has-pdf-template"
                value="$source-form-attachments/pdf/xxf:trim() != ''"/>

            <xf:var
                name="requested-version"
                as="xs:integer?"
                value="xs:integer(xxf:get-request-parameter(frf:FormVersionParam())[1][. castable as xs:integer])"/>

            <xf:var
                name="show-version-selector"
                value="
                    exists($requested-version) or
                    xxf:property(string-join(('oxf.fr.summary.show-version-selector', $app, $form), '.'))
                "/>

            <!-- NOTE: use xxf:cache="false" otherwise updates to the form won't work in the summary page -->
            <!-- A solution for this might be for read-form.xpl, which is able to use conditional GET, to run always, or to
                 improve submissions to handle conditional GET as well when using caching. -->
            <xf:submission
                id="fr-get-source-form-submission"
                method="get"
                serialization="none"
                resource="/fr/service/persistence/crud/{$app}/{$form}/form/form.xhtml"
                replace="instance"
                instance="fr-source-form-instance"
                xxf:readonly="true"
                xxf:cache="false"
                xxf:xinclude="true">

                <xf:header>
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="event('form-definition-version')"/>
                </xf:header>

                <!--
                    Update the current form definition version globally so that `fr:form-version()` will work too. But note that
                    the `resource` provider doesn't return a version, in particular, so we set it to `1`.
                 -->
                <xf:setvalue
                    event="xforms-submit-done"
                    ref="$parameters/form-version"
                    value="
                        (
                            event('response-headers')[
                                lower-case(name) = 'orbeon-form-definition-version'
                            ]/value[
                                . castable as xs:integer
                            ],
                            1
                        )[1]"/>

                <xf:action event="xforms-submit-error">
                    <!-- TODO: i18n -->
                    <xf:message>Error loading source form.</xf:message>
                </xf:action>

            </xf:submission>

            <!-- Standard Form Runner data instance -->
            <!-- TODO: Can we remove this? -->
            <xf:instance id="fr-form-instance" xxf:exclude-result-prefixes="#all">
                <_/>
            </xf:instance>

            <!-- Standard Form Runner resources instance -->
            <!-- Initially empty, but we copy the source form resources into there during initialization.
                 fr-persistence-model then has access to the form resources as if in the detail page. -->
            <xf:instance id="fr-form-resources" xxf:exclude-result-prefixes="#all">
                <resources xmlns=""/>
            </xf:instance>

            <!-- Instance to control the triggers' appearance -->
            <xf:instance id="fr-summary-triggers-instance" xxf:exclude-result-prefixes="#all">
                <_ xmlns="">
                    <enabled/>
                    <disabled/>
                </_>
            </xf:instance>

            <xf:bind ref="instance('fr-summary-triggers-instance')/disabled" readonly="true()"/>

            <xf:var name="parameters" value="xxf:instance('fr-parameters-instance')"/>

            <xf:action event="fr-summary-create">
                <xf:var
                    name="form-version-property"
                    value="xxf:property(string-join(('oxf.fr.summary.new.form-version', $app, $form), '.'))"/>
                <xf:var
                    name="form-version-param"
                    value="
                        if ($form-version-property = 'latest') then
                            ''
                        else
                            concat(
                                '?form-version=',
                                if ($form-version-property castable as xs:integer) then
                                    $form-version-property
                                else
                                    fr:form-version()
                            )
                    "/>
                <xf:load resource="/fr/{$app}/{$form}/new{$form-version-param}"/>
            </xf:action>

            <xf:action event="fr-summary-view" if="$selection-is-one-document">
                <xf:var
                    name="params"
                    value="if ($selection-data-or-draft = 'draft') then 'draft=true' else ()"/>
                <xf:load resource="/fr/{$app}/{$form}/view/{$selection-document-id}{if (exists($params)) then concat('?', string-join($params, '&amp;')) else ()}"/>
            </xf:action>

            <!-- Instance to track search results and paging -->
            <!-- NOTE: As of 2011-11-28, `app` and `form` are not set by us. We leave them in for now because the
                 built-in eXist, Oracle and MySQL implementations rely on them in the Form Runner page flow. -->
            <!-- Don't use `xxf:exclude-result-prefixes="#all"` as eXist search needs the `xh` and `xf` namespaces -->
            <xf:instance id="fr-search-instance">
                <search xmlns="">
                    <query/>
                    <page-size>5</page-size>
                    <page-number>1</page-number>
                    <lang/>
                </search>
            </xf:instance>

            <!-- Contains search labels -->
            <xf:instance id="fr-search-labels-instance" xxf:exclude-result-prefixes="#all">
                <search xmlns=""/>
            </xf:instance>

            <xf:bind ref="instance('fr-search-instance')">
                <!-- Don't send this to the server -->
                <xf:bind ref="query/(@summary-search-field | @summary-show-field)" relevant=". = 'true'"/>
                <!-- Set types so the search fields display the proper controls -->
                <xf:bind ref="query[ends-with(@type, ':date')]"     type="xf:date"/>
                <xf:bind ref="query[ends-with(@type, ':time')]"     type="xf:time"/>
                <xf:bind ref="query[ends-with(@type, ':dateTime')]" type="xf:dateTime"/>
                <xf:bind ref="query[ends-with(@type, ':decimal')]"  type="xf:decimal"/>

                <!-- Set default value for app and form if needed -->
                <!-- Do this declaratively so we don't depend on order of execution of submissions -->
                <xf:bind
                    ref="$app-query"
                    readonly="false()"
                    calculate="if (xxf:is-blank() and exists($initial-app-value)) then $initial-app-value else ."/>
                <!-- Adjust value for form if there is an app constraint and a form constraint -->
                <xf:bind
                    ref="$form-query"
                    readonly="false()"
                    calculate="
                        (
                            for $a in $current-app
                            return
                                for $current in .
                                    return
                                        if ($a/form[@name = ($current, '*')]) then
                                            .
                                        else
                                            $a/form[1]/@name,
                            .
                        )[1]"/>
                <!-- Force exact query match if there is an app constraint -->
                <xf:bind
                    ref="$app-query/@match"
                    readonly="false()"
                    calculate="if ($app-is-dropdown) then 'exact' else 'substring'"/>
                <!-- Force exact query match if there is a form constraint -->
                <xf:bind
                    ref="$form-query/@match"
                    readonly="false()"
                    calculate="if ($form-is-dropdown) then 'exact' else 'substring'"/>

            </xf:bind>

            <xf:instance id="fr-bulk-edit-instance">
                <bulk-edit xmlns="">
                    <query/>
                </bulk-edit>
            </xf:instance>

            <xf:instance id="fr-bulk-edit-clear-value-item" xmlns="">
                <_ xmlns="">
                    <value/>
                    <label/>
                </_>
            </xf:instance>

            <xf:action event="xforms-model-construct-done">
                <xf:setvalue ref="instance('fr-bulk-edit-clear-value-item')/label" value="$fr-resources/summary/labels/clear-value"/>
            </xf:action>

            <xf:instance id="fr-selection-instance" xxf:exclude-result-prefixes="#all">
                <_ xmlns=""/>
            </xf:instance>

            <!-- 1. Load form metadata -->
            <xf:action event="xforms-model-construct-done">
                <xf:dispatch name="fr-read-versions" targetid="fr-versioning-model">
                    <xf:property name="app"                        value="fr:app-name()"/>
                    <xf:property name="form"                       value="fr:form-name()"/>
                    <xf:property name="restrict-to-latest-version" value="not($show-version-selector)"/>
                    <xf:property name="all-forms"                  value="false()"/>
                </xf:dispatch>
            </xf:action>

            <!-- 2. Load source form -->
            <xf:action event="fr-versions-empty" observer="fr-versioning-model" type="xpath">
                frf:sendError(404)
            </xf:action>
            <xf:action event="fr-versions-read" observer="fr-versioning-model">

                <!-- 404 if requested version is not available -->
                <xf:action if="exists($requested-version) and not(event('versions') = $requested-version)" type="xpath">
                    frf:sendError(404)
                </xf:action>

                <xf:setvalue
                    ref="$parameters/form-version"
                    value="
                        if (empty($requested-version)) then
                            (: Pick latest available version :)
                            max(event('versions'))
                        else
                            (: Should be a NOP since the parameter is already stored :)
                            $requested-version"/>

                <xf:send submission="fr-get-source-form-submission">
                    <xf:property name="form-definition-version" value="fr:form-version()"/>
                </xf:send>

                <!-- Send a "Not Found" error if the form definition is not found OR if the form is not available. -->
                <!-- NOTE: `fr-read-versions` only returns available versions so we don't need to check availability here. -->
                <xf:action
                    if="empty(instance('fr-source-form-instance')/xh:head/xf:model) or
                        $source-form-metadata/available = 'false'"
                    type="xpath">

                    frf:sendError(404)
                </xf:action>

            </xf:action>

            <!-- 3. Check for authorized operations -->
            <xf:action event="xforms-submit-done" observer="fr-get-source-form-submission">

                <!-- Are we authorized to see all the data based because of our role? -->
                <xf:var
                    name="operations-from-role"
                    value="frf:authorizedOperationsBasedOnRolesXPath($source-form-metadata/permissions, $app, $form)"/>

                <!-- Check if the user doesn't have the permission to 'list'
                     https://github.com/orbeon/orbeon-forms/issues/5397 -->
                <xf:action
                    if="not(('*', 'list') = $operations-from-role)"
                    type="xpath">frf:sendError(403)</xf:action>

                <!-- Remember global operations -->
                <xf:setvalue
                    ref="xxf:instance('fr-authorized-operations')"
                    value="string-join($operations-from-role, ' ')"/>

            </xf:action>

            <!-- 4. Rest of initialization -->
            <xf:action event="xforms-submit-done" observer="fr-get-source-form-submission">

                <!-- Load resources -->
                <!-- Dereference `@src` for Form Builder if needed -->
                <xf:insert
                    ref="instance('fr-form-resources')"
                    origin="
                        let $resources-instance := instance('fr-source-form-instance')/xh:head/xf:model/xf:instance[@id = 'fr-form-resources']
                        return
                            if ($resources-instance/@src) then
                                doc($resources-instance/@src)
                            else
                                $resources-instance/*
                        "/>

                <!-- Update to current language -->
                <xf:dispatch name="fr-update-language" targetid="fr-resources-model"/>

                <!-- Set page size -->
                <xf:var name="page-size" value="instance('fr-search-instance')/page-size" as="element(page-size)"/>
                <xf:setvalue
                    ref="$page-size"
                    model="fr-persistence-model"
                    value="xxf:property(string-join(('oxf.fr.summary.page-size', $app, $form), '.'))"/>

                <!-- Create elements holding structured search data -->
                <xf:delete
                    ref="
                        instance('fr-search-labels-instance')/* |
                        instance('fr-search-instance')/query[exists(@name)]"/>

                <xf:insert
                    context="instance('fr-search-labels-instance')"
                    origin="frf:findIndexedControlsAsXML(instance('fr-source-form-instance')/root(), $app, $form, fr:user-roles())"/>

                <xf:insert
                    context="instance('fr-search-instance')"
                    ref="query"
                    origin="instance('fr-search-labels-instance')/query[@path]"/>

                <!-- Don't leave nested `<resources>`s -->
                <xf:delete
                    ref="instance('fr-search-instance')/query/resources"/>

                <!-- If requested to, only show drafts we can edit for never saved document -->
                <xf:insert
                    if="xxf:get-request-parameter('drafts-for-never-saved-document') = 'true'"
                    context="instance('fr-search-instance')"
                    origin="
                        xf:element('drafts', (xf:attribute('for-never-saved-document', 'true'), 'only')),
                        xf:element('operations', xf:attribute('any-of', 'update'))
                    "/>

                <!-- Use the same indexed controls for bulk edit -->
                <xf:delete
                    ref="instance('fr-bulk-edit-instance')/query"/>
                <xf:insert
                    context="instance('fr-bulk-edit-instance')"
                    ref="query"
                    origin="instance('fr-search-instance')/query[@path]"/>

                <!-- Initial values for bulk edit dropdowns -->
                <xf:action iterate="instance('fr-search-labels-instance')/query[@control = 'select1']">
                    <xf:var name="control-path"     value="@path"/>
                    <xf:var name="control-required" value="false()"/> <!-- TODO: retrieve actual value -->
                    <xf:var name="first-value"      value="resources[1]/item[1]/value"/>

                    <xf:action if="$control-required">
                        <xf:setvalue
                            ref   = "instance('fr-bulk-edit-instance')/query[@path = $control-path]"
                            value = "$first-value"/>
                    </xf:action>
                </xf:action>

                <!-- Query initial list of documents -->
                <xf:send submission="fr-summary-search-submission"/>

            </xf:action>

            <!-- 5. If roles are enabled but no role applies, the page is unauthorized.
                NOTE: Do this upon `xforms-ready` because `fb-permissions` instance is not ready upon
                `xforms-model-construct-done`. -->
            <xf:action
                event="xforms-ready"
                if="$has-fb-roles and not($has-fb-roles-for-all-apps) and empty($initial-app-value)"
                type="xpath">
                frf:sendError(403)
            </xf:action>

            <!-- Reset search selection and navigation -->
            <xf:action event="fr-reset-search">

                <xf:setvalue ref="instance('fr-selection-instance')"/>
                <xf:setindex repeat="documents-repeat" index="1"/>
                <xf:setvalue ref="instance('fr-search-instance')/page-number" value="1"/>

                <xf:send submission="fr-summary-search-submission"/>
            </xf:action>

            <!-- Summary data -->
            <!-- Don't use `xxf:exclude-result-prefixes="#all"` as eXist search needs the `xh` and `xf` namespaces -->
            <!-- With eXist, `return-all-indexed-fields="true"` is not supported, so pass the `<query>` elements anyway -->
            <xf:instance id="fr-search-results-instance">
                <documents xmlns="" search-total="0">
                    <!-- Content will be like this -->
                    <!--
                    <document name="" created="" last-modified="">
                        <id/>
                        <details>
                            <detail/>
                            <detail/>
                        </details>
                    </document>
                    -->
                </documents>
            </xf:instance>

            <!-- This submission doesn't validate as we allow sending incomplete date, time and dateTime -->
            <xf:submission
                id="fr-summary-search-submission"
                ref="instance('fr-search-instance')"
                validate="false"
                method="post"
                resource="/fr/service/persistence/search/{$app}/{$form}"
                replace="instance"
                instance="fr-search-results-instance">

                <xf:header>
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="if ($show-version-selector) then fr:form-version() else 'all'"/>
                </xf:header>

                <!-- Set language upon submitting -->
                <xf:action event="xforms-submit">
                    <!-- This works now that #122 is fixed https://github.com/orbeon/orbeon-forms/issues/122 -->
                    <!-- NOTE: xxf:lang() doesn't seem to work here -->
                    <xf:setvalue ref="lang" value="xxf:instance('fr-language-instance')"/>
                </xf:action>
                <xf:action event="xforms-submit-error">
                    <!-- TODO: i18n -->
                    <xf:message>Error performing search.</xf:message>
                </xf:action>
            </xf:submission>

            <!-- Update search if the UI language changes if we are Form Builder (the only case using lang in search for now) -->
            <!-- See https://github.com/orbeon/orbeon-forms/issues/1376 -->
            <xf:send
                observer="fr-language-selector"
                event="xforms-value-changed"
                if="$is-fb"
                submission="fr-summary-search-submission"/>

            <!-- Duplicate -->
            <xf:instance id="fr-duplicate" xmlns="" xxf:exclude-result-prefixes="#all"><document-id/></xf:instance>

            <!-- Read form data for the duplicate button -->
            <!-- NOTE: It would be nice if this could be done entirely with a process. -->
            <xf:submission
                id="call-duplicate-service"
                ref="instance('fr-duplicate')"
                method="post"
                action="/fr/service/{$app}/{$form}/duplicate"
                replace="instance">

                <xf:setvalue
                    event="xforms-submit"
                    ref="instance('fr-duplicate')"
                    value="event('document')"/>

                <xf:action event="xforms-submit-error">
                    <!-- TODO: i18n -->
                    <xf:message>Error performing duplication.</xf:message>
                </xf:action>

            </xf:submission>

        </xf:model>
        <!-- Needs to be after the first model as it makes use of `fr:app()`, etc. -->
        <xi:include href="oxf:/apps/fr/includes/versioning-model.xml"  xxi:omit-xml-base="true"/>
    </head>
    <body>
        <fr:view fluid="true">
            <fr:navbar/>

            <!-- These are the permissions granted to the current user based on the current roles. Because we
                 are not the Detail page, fr-authorized-operations does not contain permissions from the
                 persistence layer. -->
            <xf:var
                name="global-operations"
                value="xxf:split(xxf:instance('fr-authorized-operations'))"/>

            <xf:var name="enabled"  value="instance('fr-summary-triggers-instance')/enabled"/>
            <xf:var name="disabled" value="instance('fr-summary-triggers-instance')/disabled"/>

            <fr:row>
                <!--<fr:header>-->
                    <!--&lt;!&ndash; Make sure to use the source form's logo &ndash;&gt;-->
                    <!--<fr:logo paths="$source-form-metadata/logo[@xml:lang = xxf:lang()], $source-form-metadata/logo"/>-->
                    <!--<fr:title/>-->
                    <!--<fr:language-selector/>-->
                    <!--<fr:form-builder-doc/>-->
                    <!--<fr:goto-content/>-->
                <!--</fr:header>-->
                <fr:body>
                    <xf:group class="fr-summary-search">

                        <!-- Search also when user presses "enter" in a field -->
                        <!-- Do not reset selections when showing/hiding the bulk edit section -->
                        <xf:dispatch
                            event="DOMActivate"
                            if="event('xxf:targetid')!='fr-bulk-edit-button'"
                            name="fr-reset-search"
                            targetid="fr-form-model"/>

                        <!-- Search also when dropdown value changes -->
                        <xf:dispatch
                            event="xforms-value-changed"
                            target="search-select1 search-open-select1"
                            name="fr-reset-search"
                            targetid="fr-form-model"/>

                        <xf:var
                            name="versions"
                            model="fr-versioning-model"
                            value="
                                xxf:sort(
                                    instance('fr-versioning-form-metadata')/
                                        form[
                                            not(available = 'false')
                                        ]/
                                        form-version,
                                    .,
                                    'number',
                                    'descending'
                                )"/>

                        <xf:var
                            name="non-editable-documents-selected"
                            value="
                                let
                                    $document-names := for $document in xxf:split(instance('fr-selection-instance'))
                                                       return xxf:split($document, '/')[position() = last()],
                                    $document-operations := for $name in $document-names
                                                            return instance('fr-search-results-instance')/document[@name = $name]/@operations,
                                    $document-editable-statuses := for $operations in $document-operations
                                                                   return xxf:split($operations) = ('*', 'update'),
                                    $non-editable-document-count := count($document-editable-statuses[. = false()])
                                return
                                    $non-editable-document-count > 0
                            "/>

                        <xf:var
                            name="bulk-edit-enabled"
                            value="count(xxf:split(instance('fr-selection-instance'))) > 0 and not($non-editable-documents-selected)"/>

                        <xh:div class="fr-summary-search-top">

                            <xf:select1
                                appearance="minimal"
                                ref="$parameters/form-version[count($versions) gt 1]"
                                class="fr-summary-form-version">
                                <xf:label ref="$fr-resources/import/form-version/label" class="xforms-hidden"/>
                                <xf:itemset ref="$versions">
                                    <xf:label ref="xxf:format-message($fr-resources/summary/messages/version, xs:integer(.))"/>
                                    <xf:value ref="."/>
                                </xf:itemset>
                                <xf:action event="xforms-value-changed">

                                    <xf:send submission="fr-get-source-form-submission">
                                        <xf:property name="form-definition-version" value="fr:form-version()"/>
                                    </xf:send>

                                    <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>

                                    <xf:action type="javascript">
                                        <xf:param name="version" value="fr:form-version()"/>
                                        <xf:body>ORBEON.fr.private.API.updateLocationFormVersion(Number(version))</xf:body>
                                    </xf:action>

                                </xf:action>
                            </xf:select1>

                            <xh:div class="btn-group fr-summary-selection">
                                <!-- `data-toggle="dropdown"` for BS2 -->
                                <xh:button id="select-button" class="btn dropdown-toggle" data-toggle="dropdown" data-bs-toggle="dropdown" aria-expanded="false">
                                    <xf:output value="$fr-resources/summary/titles/selected"/>
                                    <xh:span class="badge badge-info" title="Documents Selected">
                                        <xf:output value="count(xxf:split(instance('fr-selection-instance')))"/>
                                    </xh:span>
                                    <xh:span class="caret"/>
                                </xh:button>
                                <xh:ul class="dropdown-menu" role="menu" aria-labelledBy="select-button">
                                    <xh:li class="dropdown-item" role="presentation">
                                        <xf:trigger appearance="minimal" role="menuitem">
                                            <xf:label ref="$fr-resources/summary/buttons/select-all"/>
                                            <xf:setvalue
                                                event="DOMActivate"
                                                ref="instance('fr-selection-instance')"
                                                propagate="stop"
                                                value="
                                                    string-join(
                                                        for $d in instance('fr-search-results-instance')/document
                                                        return
                                                            concat(if ($d/@draft = 'true') then 'draft' else 'data', '/', $d/@name)                          ,
                                                        ' '
                                                    )"/>
                                        </xf:trigger>
                                    </xh:li>
                                    <xh:li class="dropdown-item" role="presentation">
                                        <xf:trigger appearance="minimal" role="menuitem">
                                            <xf:label ref="$fr-resources/summary/buttons/deselect-all"/>
                                            <xf:setvalue
                                                event="DOMActivate"
                                                propagate="stop"
                                                ref="instance('fr-selection-instance')"/>
                                        </xf:trigger>
                                    </xh:li>
                                    <!-- `dropdown-item divider` for BS2 -->
                                    <xh:li class="dropdown-item divider dropdown-divider" role="presentation"/>
                                    <xh:li class="dropdown-item" role="presentation">
                                        <xf:trigger appearance="minimal" role="menuitem">
                                            <xf:label ref="$fr-resources/summary/buttons/select-saved"/>
                                            <xf:setvalue
                                                event="DOMActivate"
                                                propagate="stop"
                                                ref="instance('fr-selection-instance')"
                                                value="
                                                    string-join(
                                                        for $d in instance('fr-search-results-instance')/document[not(@draft = 'true')]
                                                        return
                                                            concat('data/', $d/@name),
                                                        ' '
                                                    )"/>
                                        </xf:trigger>
                                    </xh:li>
                                    <xh:li class="dropdown-item" role="presentation">
                                        <xf:trigger appearance="minimal" role="menuitem">
                                            <xf:label ref="$fr-resources/summary/buttons/select-drafts"/>
                                            <xf:setvalue
                                                event="DOMActivate"
                                                propagate="stop"
                                                ref="instance('fr-selection-instance')"
                                                value="
                                                    string-join(
                                                        for $d in instance('fr-search-results-instance')/document[@draft = 'true']
                                                        return
                                                            concat('draft/', $d/@name),
                                                        ' '
                                                    )"/>
                                        </xf:trigger>
                                    </xh:li>
                                </xh:ul>
                            </xh:div>

                            <xf:input
                                id="fr-search-free-input"
                                ref="if (case('fr-search-options-switch') = 'fr-search-free-case') then instance('fr-search-instance')/query else ''"
                                class="fr-summary-search-free-input"/>

                            <xf:trigger class="fr-summary-search-search-button">
                                <xf:label mediatype="text/html" value="$fr-resources/summary/search/search-forms"/>
                            </xf:trigger>

                            <!-- Don't allow showing search options if there are no search fields specified -->

                            <xf:trigger
                                appearance="full"
                                ref="if (instance('fr-search-instance')/query[@path and @summary-search-field = 'true']) then $enabled else $disabled"
                                class="fr-summary-search-show-button">

                                <!-- Switch label depending on which case is shown -->
                                <xf:label
                                    mediatype="text/html"
                                    ref="$fr-resources/summary/search/(if (case('fr-search-options-switch') = 'fr-search-free-case') then show-search-options else close-search-options)"/>
                                <xf:action event="DOMActivate">
                                    <!-- Clear all queries when switching -->
                                    <xf:setvalue iterate="instance('fr-search-instance')/query" ref="."/>

                                    <xf:toggle
                                        case="{
                                            if (case('fr-search-options-switch') = 'fr-search-free-case') then
                                                'fr-search-options-case'
                                            else
                                                'fr-search-free-case'
                                        }"/>
                                    <xf:setfocus
                                        control="{
                                            if (case('fr-search-options-switch') = 'fr-search-free-case') then
                                                'fr-search-free-input'
                                            else
                                                'fr-search-options-switch'
                                        }"/>
                                </xf:action>
                            </xf:trigger>

                            <!-- Bulk edit logic based on search options -->
                            <xf:switch caseref="$is-fb">
                                <xf:case value="true()"/>
                                <xf:case value="false()">
                                    <xf:trigger
                                        id="fr-bulk-edit-button"
                                        appearance="full"
                                        ref="if (instance('fr-bulk-edit-instance')/query[@path and @summary-edit-field = 'true']) then $enabled else $disabled"
                                        class="fr-summary-bulk-show-button">

                                        <xf:label
                                            mediatype="text/html"
                                            ref="$fr-resources/summary/bulk-edit/(if (case('fr-bulk-edit-switch') = 'fr-bulk-edit-closed') then show-bulk-edit else close-bulk-edit)"/>

                                        <xf:action event="DOMActivate">
                                            <xf:toggle
                                                case="{
                                                if (case('fr-bulk-edit-switch') = 'fr-bulk-edit-closed') then
                                                    'fr-bulk-edit-open'
                                                else
                                                    'fr-bulk-edit-closed'
                                            }"/>

                                            <xf:action if="case('fr-bulk-edit-switch') = 'fr-bulk-edit-open'">
                                                <xf:setfocus control="fr-bulk-edit-switch"/>
                                            </xf:action>
                                        </xf:action>
                                    </xf:trigger>
                                </xf:case>
                            </xf:switch>

                            <fr:pager
                                id="fr-pager"
                                page-size="{xxf:property(string-join(('oxf.fr.summary.page-size', $app, $form), '.'))}"
                                total-value="(instance('fr-search-results-instance')/@search-total, 0)[1]"
                                page-number-ref="instance('fr-search-instance')/page-number">

                                <xf:action event="fr-pager-changed">
                                    <xf:setindex
                                        repeat="documents-repeat"
                                        index="1"/>
                                    <xf:send
                                        submission="fr-summary-search-submission"/>
                                </xf:action>

                            </fr:pager>

                        </xh:div>

                        <!-- Search options -->

                        <xf:switch id="fr-search-options-switch">
                            <xf:case id="fr-search-free-case"/>
                            <xf:case id="fr-search-options-case">
                                <xh:fieldset class="fr-search-options">
                                    <xh:legend><xf:output ref="$fr-resources/summary/search/search-options"/></xh:legend>

                                    <!-- Special form builder search: use input or select1 for app/form name -->

                                    <!-- Application -->
                                    <xf:group ref="$app-query" class="fr-summary-search-item">
                                        <xf:var name="control-name" value="@name"/>
                                        <xf:var
                                            name="label"
                                            value="
                                                instance('fr-search-labels-instance')/
                                                    query[
                                                        @name = $control-name
                                                    ]/resources[
                                                        @lang = xxf:instance('fr-language-instance')
                                                    ]/label"/>
                                        <!-- Use an input if app name is a wildcard -->
                                        <xf:input ref=".[not($app-is-dropdown)]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                        </xf:input>
                                        <xf:select1 ref=".[$app-is-dropdown]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                            <xf:itemset ref="xxf:instance('fb-permissions')/app">
                                                <xf:label ref="@name"/>
                                                <xf:value ref="@name"/>
                                            </xf:itemset>

                                            <xf:action event="xforms-value-changed">
                                                <!-- Clear dependent form, actual value is recalculated just before submission if needed -->
                                                <xf:setvalue ref="$form-query"/>

                                                <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                                            </xf:action>
                                        </xf:select1>
                                    </xf:group>
                                    <!-- Form -->
                                    <xf:group ref="$form-query" class="fr-summary-search-item">
                                        <xf:var name="control-name" value="@name"/>
                                        <xf:var
                                            name="label"
                                            value="
                                                instance('fr-search-labels-instance')/
                                                    query[
                                                        @name = $control-name
                                                    ]/resources[
                                                        @lang = xxf:instance('fr-language-instance')
                                                    ]/label"/>
                                        <!-- Use an input if app name or form name is a wildcard -->
                                        <xf:input ref=".[not($form-is-dropdown)]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                        </xf:input>
                                        <xf:select1 ref=".[$form-is-dropdown]">
                                            <xf:label>
                                                <xf:output mediatype="text/html" value="$label"/>
                                            </xf:label>
                                            <xf:itemset ref="$current-app/form">
                                                <xf:label ref="@name"/>
                                                <xf:value ref="@name"/>
                                            </xf:itemset>

                                            <!-- Update search results when selection changes -->
                                            <xf:dispatch event="xforms-value-changed" name="fr-reset-search" targetid="fr-form-model"/>
                                        </xf:select1>
                                    </xf:group>
                                    <!-- Structured search over query terms that have summary-search-field set to 'true' -->
                                    <xf:repeat ref="instance('fr-search-instance')/query[@path and @summary-search-field = 'true']" id="search-repeat">
                                        <xf:var name="control-path"    value="@path"/>
                                        <xf:var name="control-control" value="@control"/>
                                        <xf:var
                                            name="resources"
                                            value="
                                                instance('fr-search-labels-instance')/
                                                    query[
                                                        @path = $control-path
                                                    ]/resources[
                                                        @lang = xxf:instance('fr-language-instance')
                                                    ]"/>
                                        <xf:var name="label" value="$resources/label"/>

                                        <xf:group
                                            ref="
                                                .[
                                                    not(
                                                        $has-fb-roles and (
                                                            contains(@path, 'application-name') or
                                                            contains(@path, 'form-name')
                                                        )
                                                    )
                                                ]"
                                            class="fr-summary-search-item {'fr-summary-search-item-wide'[$control-control = 'open-select1']}">

                                            <!-- Regular search field (exclude app/form name if we are Form Builder and we have roles) -->

                                            <!-- input -->
                                            <!-- Testing on control name is not ideal, see https://github.com/orbeon/orbeon-forms/issues/2077 -->
                                            <xf:input ref=".[@control = ('input', 'inplace-input', 'output')]">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </xf:input>
                                            <fr:number ref=".[@control = 'number']" field-width="full">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:number>
                                            <fr:currency ref=".[@control ='currency']" field-width="full">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:currency>
                                            <fr:date ref=".[@control ='date']" field-width="full">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:date>
                                            <fr:time ref=".[@control ='time']" field-width="full">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:time>
                                            <fr:datetime ref=".[@control ='datetime']" field-width="full">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </fr:datetime>
                                            <!-- textarea -->
                                            <xf:input ref=".[@control = 'textarea']">
                                                <xf:label mediatype="text/html" value="$label"/>
                                            </xf:input>
                                            <!-- select1 -->
                                            <xf:select1 ref=".[not($control-control = 'open-select1') and frf:isSingleSelectionControl(@control)]" id="search-select1">
                                                <xf:label mediatype="text/html" value="$label"/>
                                                <xf:item>
                                                    <xf:label ref="$fr-resources/summary/labels/any"/>
                                                    <xf:value/>
                                                </xf:item>
                                                <xf:itemset ref="$resources/item">
                                                    <xf:label ref="label"/>
                                                    <xf:value ref="value"/>
                                                </xf:itemset>
                                            </xf:select1>
                                            <!-- open select1 -->
                                            <fr:open-select1 ref=".[$control-control = 'open-select1']" id="search-open-select1" appearance="minimal">
                                                <xf:label mediatype="text/html" value="$label"/>
                                                <!-- Static values -->
                                                <xf:itemset ref="$resources/item">
                                                    <xf:label ref="label"/>
                                                    <xf:value ref="value"/>
                                                </xf:itemset>
                                                <!-- Also add distinct "other" values that are present on the page -->
                                                <xf:itemset
                                                    ref="
                                                        let $static-values := $resources/item/value/string()
                                                        return
                                                            distinct-values(
                                                                instance('fr-search-results-instance')/
                                                                document/details/detail[
                                                                    @path = $control-path and
                                                                    xxf:non-blank()
                                                                ]/string()
                                                            )[
                                                                not(. = $static-values)
                                                            ]">
                                                    <xf:label ref="."/>
                                                    <xf:value ref="."/>
                                                </xf:itemset>
                                            </fr:open-select1>
                                            <!-- select -->
                                            <fr:box-select ref=".[frf:isMultipleSelectionControl(@control)]" id="search-select">
                                                <xf:label mediatype="text/html" value="$label"/>
                                                <xf:item>
                                                    <xf:label ref="$fr-resources/summary/labels/any"/>
                                                    <xf:value/>
                                                </xf:item>
                                                <xf:itemset ref="$resources/item">
                                                    <xf:label ref="label"/>
                                                    <xf:value ref="value"/>
                                                </xf:itemset>
                                            </fr:box-select>
                                        </xf:group>
                                    </xf:repeat>
                                </xh:fieldset>
                            </xf:case>
                        </xf:switch>

                        <!-- Bulk edit -->

                        <xf:switch id="fr-bulk-edit-switch">
                            <xf:case id="fr-bulk-edit-closed"/>
                            <xf:case id="fr-bulk-edit-open">
                                <xh:fieldset class="fr-bulk-edit">
                                    <xh:legend><xf:output ref="$fr-resources/summary/bulk-edit/bulk-edit"/></xh:legend>
                                    <xf:repeat ref="instance('fr-bulk-edit-instance')/query[@path and @summary-edit-field = 'true']" id="bulk-repeat">
                                        <xf:var name="control-path"     value="@path"/>
                                        <xf:var name="control-control"  value="@control"/>
                                        <xf:var name="control-required" value="false()"/> <!-- TODO: retrieve actual value -->

                                        <xf:var
                                            name="resources"
                                            value="
                                            instance('fr-search-labels-instance')/
                                                query[
                                                    @path = $control-path
                                                ]/resources[
                                                    @lang = xxf:instance('fr-language-instance')
                                                ]"/>
                                        <xf:var name="label" value="$resources/label"/>

                                        <xf:var name="is-input-output" value="@control = ('input', 'inplace-input', 'output')"/>
                                        <xf:var name="is-number"       value="@control = 'number'"/>
                                        <xf:var name="is-currency"     value="@control = 'currency'"/>
                                        <xf:var name="is-date"         value="@control = 'date'"/>
                                        <xf:var name="is-time"         value="@control = 'time'"/>
                                        <xf:var name="is-datetime"     value="@control = 'datetime'"/>
                                        <xf:var name="is-textarea"     value="@control = 'textarea'"/>
                                        <xf:var name="is-select1"      value="not($control-control = 'open-select1') and frf:isSingleSelectionControl(@control)"/>
                                        <xf:var name="is-open-select1" value="$control-control = 'open-select1'"/>
                                        <xf:var name="is-select"       value="frf:isMultipleSelectionControl(@control)"/>
                                        <xf:var
                                            name="is-supported-control"
                                            value="
                                                $is-input-output or $is-number or $is-currency or
                                                $is-date or $is-time or $is-datetime or $is-textarea or
                                                $is-select1 or $is-open-select1 or $is-select"/>

                                        <xf:group
                                            ref=".[$is-supported-control]"
                                            class="fr-summary-bulk-edit-item {'fr-summary-bulk-edit-item-wide'[$is-open-select1]}">

                                            <xh:div class="fr-component-group">

                                                <xf:input ref=".[$is-input-output]">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </xf:input>
                                                <fr:number ref=".[$is-number]" field-width="full">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </fr:number>
                                                <fr:currency ref=".[$is-currency]" field-width="full">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </fr:currency>
                                                <fr:date ref=".[$is-date]" field-width="full">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </fr:date>
                                                <fr:time ref=".[$is-time]" field-width="full">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </fr:time>
                                                <fr:datetime ref=".[$is-datetime]" field-width="full">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </fr:datetime>
                                                <xf:input ref=".[$is-textarea]">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                </xf:input>
                                                <xf:select1 ref=".[$is-select1]" id="bulk-select1">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                    <xf:itemset ref="instance('fr-bulk-edit-clear-value-item')[not($control-required)]">
                                                        <xf:label ref="label"/>
                                                        <xf:value ref="value"/>
                                                    </xf:itemset>
                                                    <xf:itemset ref="$resources/item">
                                                        <xf:label ref="label"/>
                                                        <xf:value ref="value"/>
                                                    </xf:itemset>
                                                </xf:select1>
                                                <fr:open-select1 ref=".[$is-open-select1]" id="bulk-open-select1" appearance="minimal">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                    <xf:itemset ref="$resources/item">
                                                        <xf:label ref="label"/>
                                                        <xf:value ref="value"/>
                                                    </xf:itemset>
                                                    <xf:itemset
                                                        ref="
                                                        let $static-values := $resources/item/value/string()
                                                        return
                                                            distinct-values(
                                                                instance('fr-search-results-instance')/
                                                                document/details/detail[
                                                                    @path = $control-path and
                                                                    xxf:non-blank()
                                                                ]/string()
                                                            )[
                                                                not(. = $static-values)
                                                            ]">
                                                        <xf:label ref="."/>
                                                        <xf:value ref="."/>
                                                    </xf:itemset>
                                                </fr:open-select1>
                                                <fr:box-select ref=".[$is-select]" id="bulk-select">
                                                    <xf:label mediatype="text/html" value="$label"/>
                                                    <xf:itemset ref="instance('fr-bulk-edit-clear-value-item')[not($control-required)]">
                                                        <xf:label ref="label"/>
                                                        <xf:value ref="value"/>
                                                    </xf:itemset>
                                                    <xf:itemset ref="$resources/item">
                                                        <xf:label ref="label"/>
                                                        <xf:value ref="value"/>
                                                    </xf:itemset>
                                                </fr:box-select>

                                                <xf:trigger appearance="xxf:mini" ref="if ($bulk-edit-enabled) then . else ''" class="fr-summary-bulk-apply">
                                                    <xf:label ref="$fr-resources/summary/bulk-edit/apply"/>
                                                    <xf:action event="DOMActivate">
                                                        <xf:dispatch name="apply" targetid="fr-bulk-apply">
                                                            <xf:property name="app"       value="$app"/>
                                                            <xf:property name="form"      value="$form"/>
                                                            <xf:property name="documents" value="instance('fr-selection-instance')"/>
                                                            <xf:property name="path"      value="$control-path"/>
                                                            <xf:property name="value"     value="."/>
                                                        </xf:dispatch>
                                                    </xf:action>
                                                </xf:trigger>
                                            </xh:div>
                                        </xf:group>
                                    </xf:repeat>
                                </xh:fieldset>
                            </xf:case>
                        </xf:switch>
                    </xf:group>

                    <xf:group ref="instance('fr-search-results-instance')" xxf:update="full">

                        <xf:var name="show-created"          value="xxf:property(string-join(('oxf.fr.summary.show-created'       ,   $app, $form), '.'))"/>
                        <xf:var name="show-last-modified"    value="xxf:property(string-join(('oxf.fr.summary.show-last-modified' ,   $app, $form), '.'))"/>
                        <xf:var name="show-workflow-stage"   value="xxf:property(string-join(('oxf.fr.summary.show-workflow-stage',   $app, $form), '.'))"/>
                        <xf:var name="show-created-by"       value="xxf:property(string-join(('oxf.fr.summary.show-created-by',       $app, $form), '.'))"/>
                        <xf:var name="show-last-modified-by" value="xxf:property(string-join(('oxf.fr.summary.show-last-modified-by', $app, $form), '.'))"/>

                        <div class="fr-summary-table-div">
                            <xf:var name="have-drafts" value="exists(document[@draft = 'true'])"/>
                            <xf:var name="have-read-only" value="exists(document[not(xxf:split(@operations) = ('*', 'update'))])"/>
                            <xf:var name="labels-class" value="string-join(('fr-summary-repeat-labels', if ($have-drafts or $have-read-only) then () else 'xforms-hidden'), ' ')"/>
                            <!-- One column for each detail -->
                            <xf:var name="detail-positions" value="instance('fr-search-instance')/query[@name and @summary-show-field = 'true']/(count(preceding-sibling::query[@name]) + 1)"/>

                            <xh:table class="table table-bordered table-condensed">
                                <!-- scrollable="horizontal" width="940px" -->
                                <xh:thead>
                                    <xh:tr>
                                        <xh:th class="fr-summary-repeat-selection-checkbox"/>
                                        <xh:th class="{$labels-class}"/>
                                        <xf:group ref="''[$show-created]">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/created"/>
                                            </xh:th>
                                        </xf:group>
                                        <xf:group ref="''[$show-last-modified]">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/modified"/>
                                            </xh:th>
                                        </xf:group>
                                        <xf:group ref="''[$show-created-by]">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/created-by"/>
                                            </xh:th>
                                        </xf:group>
                                        <xf:group ref="''[$show-last-modified-by]">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/last-modified-by"/>
                                            </xh:th>
                                        </xf:group>
                                        <xf:group ref="''[$show-workflow-stage]">
                                            <xh:th>
                                                <xf:output value="$fr-resources/summary/titles/workflow-stage"/>
                                            </xh:th>
                                        </xf:group>
                                        <xf:group ref="''[empty($detail-positions)]">
                                            <xh:th/>
                                        </xf:group>
                                        <xf:repeat ref="instance('fr-search-labels-instance')/query[@summary-show-field = 'true']" id="fr-summary-repeat-column-number">
                                            <xh:th class="{if (@control = ('number', 'currency')) then 'fr-align-right' else ''}">
                                                <!-- Output showing as the header of the column -->
                                                <xf:output
                                                    mediatype="text/html"
                                                    value="resources[@lang = xxf:instance('fr-language-instance')]/label"/>
                                            </xh:th>
                                        </xf:repeat>
                                    </xh:tr>
                                </xh:thead>
                                <xh:tbody>

                                    <xf:var
                                        name="datelang"
                                        value="(xxf:lang()[frf:hasXPathNumberer(.)], 'en')[1]"/>

                                    <xf:repeat ref="1 to count(document)" id="documents-repeat"><!-- iterate over positions so that repeat iterations are not recreated  -->
                                        <!-- 1-based position in the current page -->
                                        <xf:var name="position" value="position()"/>
                                        <!-- Set context to current document -->
                                        <xf:group context="instance('fr-search-results-instance')/document[$position]" appearance="xxf:internal">
                                            <xf:var name="document" value="."/>

                                            <!-- Document name and href for edition -->
                                            <xf:var name="current-document-name" value="@name" as="xs:string"/>
                                            <!-- TODO: remove this once we can assume that all the persistence API implementations return @operations -->
                                            <xf:var
                                                name="current-document-operations"
                                                value="if (exists(@operations)) then xxf:split(@operations) else $global-operations" as="xs:string*"/>
                                            <xf:var
                                                name="edit-view-opt"
                                                value="
                                                    if ($current-document-operations = ('*', 'update')) then
                                                        'edit'
                                                    else if ($current-document-operations = 'read') then
                                                        'view'
                                                    else
                                                        ()"/>
                                            <xf:var
                                                name="req-parameters-opt"
                                                value="if ($document/@draft = 'true') then 'draft=true' else ()"/>
                                            <xf:var
                                                name="current-document-href-opt"
                                                value="
                                                    if (exists($edit-view-opt)) then
                                                        concat(
                                                            string-join(
                                                                (
                                                                    '/fr',
                                                                    $app,
                                                                    $form,
                                                                    $edit-view-opt,
                                                                    $current-document-name
                                                                ),
                                                                '/'
                                                            ),
                                                            if (exists($req-parameters-opt)) then
                                                                concat('?', string-join($req-parameters-opt, '&amp;'))
                                                            else
                                                                ''
                                                        )
                                                    else
                                                        ()"
                                            />
                                            <xh:tr class="{if (xxf:split(instance('fr-selection-instance')) = $current-document-name) then 'fr-summary-row-selected' else 'fr-summary-row-not-selected'}">
                                                <xh:td class="fr-summary-repeat-selection-checkbox">
                                                    <xf:select appearance="full" ref="instance('fr-selection-instance')" id="document-selection">
                                                        <xf:item>
                                                            <xf:label/>
                                                            <xf:value value="concat(if ($document/@draft = 'true') then 'draft' else 'data', '/', $current-document-name)"/>
                                                        </xf:item>
                                                    </xf:select>
                                                </xh:td>
                                                <xh:td class="{$labels-class}">
                                                    <xf:output ref=".[$document/@draft = 'true']" value="$fr-resources/summary/labels/draft" class="label"/>
                                                    <xf:output ref=".[not(xxf:split($document/@operations) = ('*', 'update'))]" value="$fr-resources/summary/labels/read-only" class="label"/>
                                                </xh:td>
                                                <xf:group ref="''[$show-created]">
                                                    <xf:var
                                                        name="created"
                                                        value="
                                                            for $v in
                                                                if (exists($tz)) then
                                                                    adjust-dateTime-to-timezone(
                                                                        xs:dateTime($document/@created[. castable as xs:dateTime]),
                                                                        $tz
                                                                    )
                                                                else
                                                                    adjust-dateTime-to-timezone(
                                                                        xs:dateTime($document/@created[. castable as xs:dateTime])
                                                                    )
                                                            return
                                                                if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                                then format-dateTime($v, $fr-resources/common/formats/within-day, $datelang, (), ())
                                                                else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                                then format-dateTime($v, $fr-resources/common/formats/day-this-year, $datelang, (), ())
                                                                else format-dateTime($v, $fr-resources/common/formats/short-date, $datelang, (), ())"/>
                                                    <xh:td class="fr-summary-created">
                                                        <xf:group ref=".[exists($current-document-href-opt)]">
                                                            <xh:a href="{$current-document-href-opt}">
                                                                <xf:output value="$created"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[empty($current-document-href-opt)]">
                                                            <xf:output value="$created"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:group>
                                                <xf:group ref="''[$show-last-modified]">
                                                    <xf:var
                                                        name="last-modified"
                                                        value="
                                                            for $v in
                                                                if (exists($tz)) then
                                                                    adjust-dateTime-to-timezone(
                                                                        xs:dateTime($document/@last-modified[. castable as xs:dateTime]),
                                                                        $tz
                                                                    )
                                                                else
                                                                    adjust-dateTime-to-timezone(
                                                                        xs:dateTime($document/@last-modified[. castable as xs:dateTime])
                                                                    )
                                                            return
                                                                if (current-dateTime() - $v lt xs:dayTimeDuration('P1D'))
                                                                then format-dateTime($v, $fr-resources/common/formats/within-day, $datelang, (), ())
                                                                else if (year-from-dateTime(current-dateTime()) = year-from-dateTime($v))
                                                                then format-dateTime($v, $fr-resources/common/formats/day-this-year, $datelang, (), ())
                                                                else format-dateTime($v, $fr-resources/common/formats/short-date, $datelang, (), ())"/>
                                                    <xh:td class="fr-summary-modified">
                                                        <xf:group ref=".[exists($current-document-href-opt)]">
                                                            <xh:a href="{$current-document-href-opt}">
                                                                <xf:output value="$last-modified"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[empty($current-document-href-opt)]">
                                                            <xf:output value="$last-modified"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:group>
                                                <xf:group ref="''[$show-created-by]">
                                                    <xh:td class="fr-td">
                                                        <xf:group ref=".[exists($current-document-href-opt)]">
                                                            <xh:a href="{$current-document-href-opt}">
                                                                <xf:output value="$document/@created-by"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[empty($current-document-href-opt)]">
                                                            <xf:output value="$document/@created-by"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:group>
                                                <xf:group ref="''[$show-last-modified-by]">
                                                    <xh:td class="fr-td">
                                                        <xf:group ref=".[exists($current-document-href-opt)]">
                                                            <xh:a href="{$current-document-href-opt}">
                                                                <xf:output value="$document/@last-modified-by"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[empty($current-document-href-opt)]">
                                                            <xf:output value="$document/@last-modified-by"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:group>
                                                <xf:group ref="''[$show-workflow-stage]">
                                                    <xh:td class="fr-td">
                                                        <xf:group ref=".[exists($current-document-href-opt)]">
                                                            <xh:a href="{$current-document-href-opt}">
                                                                <xf:output value="$document/@workflow-stage"/>
                                                            </xh:a>
                                                        </xf:group>
                                                        <xf:group ref=".[empty($current-document-href-opt)]">
                                                            <xf:output value="$document/@workflow-stage"/>
                                                        </xf:group>
                                                    </xh:td>
                                                </xf:group>
                                                <!-- Empty column if no summary fields looks nicer -->
                                                <xf:group ref="if (empty($detail-positions)) then '' else ()">
                                                    <xh:td/>
                                                </xf:group>
                                                <!-- Iterate over detail-positions so that repeat iterations are not recreated  -->
                                                <xf:repeat ref="$detail-positions" id="document-details-repeat">
                                                    <xf:var name="detail-position" value="."/>
                                                    <!-- Set context to current detail -->
                                                    <xf:group context="$document/details/detail[$detail-position]" appearance="xxf:internal">
                                                        <xh:td class="fr-summary-td {'fr-align-right'[instance('fr-search-instance')/query[$detail-position + 1]/@control = ('number', 'currency')]}">
                                                            <!-- NOTE: Doing everything in a single big output XPath expression has the benefit of producing much less markup -->
                                                            <xf:var
                                                                name="detail"
                                                                value="
                                                                    for $raw     in . return
                                                                    for $query   in instance('fr-search-instance')/query[$detail-position + 1] return
                                                                    for $control in $query/@control return
                                                                        if ($control = 'textarea') then
                                                                            if (string-length($raw) > 20) then
                                                                                concat(substring($raw, 1, 20), '...')
                                                                            else
                                                                                $raw
                                                                        else if (frf:isMultipleSelectionControl($control)) then
                                                                            string-join(
                                                                                for $code in xxf:split($raw) return
                                                                                    ($form-resources/*[local-name() = $query/@name]/item[value = $code]/label, $code)[1],
                                                                                ', '
                                                                            )
                                                                        else if (frf:isSingleSelectionControl($control)) then
                                                                            for $code in $raw return
                                                                                ($form-resources/*[local-name() = $query/@name]/item[value = $code]/label, $code)[1]
                                                                        else if ($control = 'secret') then
                                                                            if (normalize-space($raw) = '') then
                                                                                ''
                                                                            else
                                                                                '••••••••'
                                                                        else
                                                                            for $type in substring-after($query/@type, ':') return
                                                                                if ($type = 'date') then
                                                                                    if ($raw castable as xs:date) then
                                                                                        format-date(
                                                                                            xs:date($raw),
                                                                                            $fr-resources/summary/formats/date,
                                                                                            $datelang,
                                                                                            (),
                                                                                            ()
                                                                                        )
                                                                                    else
                                                                                        $raw
                                                                                else if ($type = 'time') then
                                                                                    if ($raw castable as xs:time) then
                                                                                        format-time(
                                                                                            xs:time($raw),
                                                                                            $fr-resources/summary/formats/time,
                                                                                            $datelang,
                                                                                            (),
                                                                                            ()
                                                                                        )
                                                                                    else
                                                                                        $raw
                                                                                else if ($type = 'dateTime') then
                                                                                    if ($raw castable as xs:dateTime) then
                                                                                        format-dateTime(
                                                                                            xs:dateTime($raw),
                                                                                            $fr-resources/summary/formats/dateTime,
                                                                                            $datelang,
                                                                                            (),
                                                                                            ()
                                                                                        )
                                                                                    else
                                                                                        $raw
                                                                                else if ($type = 'dayTimeDuration') then
                                                                                    if ($raw castable as xs:dayTimeDuration) then
                                                                                        string-join(
                                                                                            (
                                                                                                if (days-from-duration($raw) = 0) then
                                                                                                    ()
                                                                                                else
                                                                                                    concat(days-from-duration($raw), ' d'),
                                                                                                if (hours-from-duration($raw) = 0) then
                                                                                                    ()
                                                                                                else
                                                                                                    concat(hours-from-duration($raw), ' h'),
                                                                                                if (minutes-from-duration($raw) = 0) then
                                                                                                    ()
                                                                                                else
                                                                                                    concat(minutes-from-duration($raw), ' min'),
                                                                                                if (seconds-from-duration($raw) = 0) then
                                                                                                    ()
                                                                                                else
                                                                                                    concat(seconds-from-duration($raw), ' sec')
                                                                                             ),
                                                                                             ' '
                                                                                        )
                                                                                    else
                                                                                        $raw
                                                                                else
                                                                                    $raw
                                                                "/>
                                                            <xf:group ref=".[xxf:non-blank($edit-view-opt)]">
                                                                <!-- We use CSS to make the link area take the entire cell, without wrapping around the content -->
                                                                <xh:a href="{$current-document-href-opt}"/>
                                                            </xf:group>
                                                            <!-- https://github.com/orbeon/orbeon-forms/issues/2955 -->
                                                            <xf:switch
                                                                caseref="($is-fb and starts-with(normalize-space($detail), '&lt;div&gt;'))"
                                                                xxf:update="full">
                                                                <xf:case value="true()">
                                                                    <xf:output mediatype="text/html" value="$detail"/>
                                                                </xf:case>
                                                                <xf:case value="false()">
                                                                    <xf:output value="$detail"/>
                                                                </xf:case>
                                                            </xf:switch>
                                                        </xh:td>
                                                    </xf:group>
                                                </xf:repeat>
                                            </xh:tr>
                                        </xf:group>
                                    </xf:repeat>
                                    <xf:group ref=".[not(document)]">
                                        <xh:tr>
                                            <xh:td colspan="{7 + count(instance('fr-search-instance')/*[@summary-show-field = 'true'])}">
                                                <xf:output id="fr-no-form-data" class="alert" mediatype="text/html" value="xxf:serialize($fr-resources/summary/messages/no-form-found/node(), 'html')"/>
                                            </xh:td>
                                        </xh:tr>
                                    </xf:group>
                                </xh:tbody>
                            </xh:table>
                        </div>
                    </xf:group>
                </fr:body>
            </fr:row>
            <fr:row>
                <fr:version/>
            </fr:row>

            <fr:buttons>
                <xf:group model="fr-form-model" class="fr-buttons">

                    <xf:var
                        name="documents-selected"
                        value="instance('fr-search-results-instance')/document[concat(if (@draft = 'true') then 'draft' else 'data', '/', @name) = xxf:split(instance('fr-selection-instance'))]"/>

                    <!-- Take into account the global operations but also the operations returned by the persistence
                         layer for each selected form. This can only add to permissions, for example if the user is the
                         document owner. -->
                    <!-- TODO: If the user pages, then the <document> for the given selection is no longer there, and
                         therefore the operations not available. Should store the operations associated with each
                         selected document too, otherwise less documents might be found. -->
                    <xf:var name="documents-can-view"      value="empty($documents-selected[not(distinct-values(($global-operations, xxf:split(@operations))) = ('*', 'read'))])"/>
                    <xf:var name="documents-can-delete"    value="empty($documents-selected[not(distinct-values(($global-operations, xxf:split(@operations))) = ('*', 'delete'))])"/>

                    <xf:var name="doc-count"               value="count(instance('fr-search-results-instance')/document)"/>
                    <xf:var name="is-singleton"            value="$source-form-metadata/singleton = 'true'"/>
                    <xf:var name="singleton-limit-reached" value="$is-singleton and $doc-count > 0"/>
                    <xf:var name="new-visible"             value="$global-operations = ('*', 'create') and not($singleton-limit-reached)"/>
                    <xf:var name="view-enabled"            value="count($documents-selected)  = 1 and $documents-can-view"/>
                    <xf:var name="delete-enabled"          value="count($documents-selected) != 0 and $documents-can-delete"/>
                    <xf:var name="duplicate-enabled"       value="count($documents-selected) != 0 and
                                                                  $documents-can-view             and
                                                                  $new-visible                    and
                                                                  (: None of the selected documents is auto-saved :)
                                                                  count (
                                                                      for $selection in xxf:split(instance('fr-selection-instance'))
                                                                      return if (substring-before($selection, '/') = 'draft') then 1 else ()
                                                                  ) = 0
                                                                  "/>

                    <!-- Directly iterate over the tokenized property -->
                    <xf:repeat ref="xxf:split(xxf:property(string-join(('oxf.fr.summary.buttons', $app, $form), '.')))">
                        <xf:var name="button-name" value="."/>
                        <xh:span>
                            <!-- Home -->
                            <xf:group ref="if ($button-name = 'home') then $enabled else ()">
                                <xf:trigger ref="." class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/home"/>
                                    <xf:load event="DOMActivate" resource="/fr/"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Print/review button -->
                            <xf:group ref="if ($button-name = ('print', 'review')) then if ($view-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref="." class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/review"/>
                                    <xf:action event="DOMActivate">
                                        <!-- FIXME: assert(only one document selected) -->
                                        <xf:dispatch targetid="fr-form-model" name="fr-summary-view"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                            <!-- Export buttons -->
                            <xf:group
                                ref="
                                    for $b in $button-name[. = ('pdf', 'tiff', 'excel-export', 'xml-export')]
                                    return
                                        let $disallowed :=
                                            (
                                                $button-name = ('tiff', 'excel-export', 'xml-export') or
                                                $button-name = 'pdf' and $has-pdf-template
                                            ) and
                                                not(fr:is-pe())
                                        return
                                            if ($disallowed) then
                                                (: If CE then don't show buttons for PE feature :)
                                                ()
                                            else if ($view-enabled and $selection-data-or-draft = 'data') then
                                                $enabled
                                            else
                                                (: Not sure it makes sense to create a PDF for a draft and the PDF
                                                   functionality right now doesn't support creating a PDF for a draft :)
                                                $disabled">
                                <fr:href-button
                                        ref="."
                                        href="{frf:buildSummaryLinkButton($app, $form, $button-name, $selection-document-id, xxf:instance('fr-language-instance'))}"
                                        class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/*[name() = $button-name]"/>
                                </fr:href-button>
                            </xf:group>
                            <!-- Test button -->
                            <xf:group ref="if ($button-name = 'test') then if ($view-enabled) then $enabled else $disabled else ()">
                                <fr:href-button
                                        ref="."
                                        href="/fr/{$app}/{$form}/test/{normalize-space(instance('fr-selection-instance'))}"
                                        class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="'Test'"/><!-- TODO: i18n -->
                                </fr:href-button>
                            </xf:group>
                            <!-- Delete button -->
                            <xf:group ref="if ($button-name = 'delete') then if ($delete-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref="." class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/delete"/>
                                    <!-- Open delete confirmation dialog -->
                                    <xf:dispatch event="DOMActivate" name="fr-show" targetid="delete-confirmation-dialog"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Import button -->
                            <xf:group ref="if ($button-name = 'import' and $new-visible) then $enabled else ()">
                                <xf:trigger ref="." class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/import"/>
                                    <xf:load event="DOMActivate" resource="/fr/{$app}/{$form}/import"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- New button -->
                            <xf:group ref="if ($button-name = 'new' and $new-visible) then $enabled else ()">
                                <xf:trigger ref="." appearance="xxf:primary" class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/new"/>
                                    <xf:dispatch event="DOMActivate" targetid="fr-form-model" name="fr-summary-create"/>
                                </xf:trigger>
                            </xf:group>
                            <!-- Duplicate button -->
                            <xf:group ref="if ($button-name = 'duplicate') then if ($duplicate-enabled) then $enabled else $disabled else ()">
                                <xf:trigger ref="." class="fr-{$button-name}-button">
                                    <xf:label mediatype="text/html" value="$fr-resources/buttons/duplicate"/>
                                    <xf:action event="DOMActivate">
                                        <xf:action iterate="xxf:split(instance('fr-selection-instance'))">
                                            <xf:send submission="call-duplicate-service">
                                                <xf:property name="document" value="substring-after(., '/')"/>
                                            </xf:send>
                                        </xf:action>
                                        <!-- Reset search selection and navigation -->
                                        <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                                    </xf:action>
                                </xf:trigger>
                            </xf:group>
                        </xh:span>
                    </xf:repeat>
                </xf:group>
            </fr:buttons>

        </fr:view>
        <!-- Delete confirmation dialog -->
        <fr:alert-dialog id="delete-confirmation-dialog" close="true">
            <fr:label ref="$fr-resources/summary/titles/delete-confirmation"/>
            <fr:message value="$fr-resources/summary/messages/delete-confirmation"/>
            <fr:negative-choice/>
            <fr:positive-choice>
                <xf:action event="DOMActivate">
                    <!-- Parse the selected rows -->
                    <xf:action iterate="xxf:split(instance('fr-selection-instance'))">
                        <xf:var name="document" value="." as="xs:string"/>
                        <xf:dispatch name="fr-delete-data" targetid="fr-persistence-model">
                            <!-- Each value is `data/12345` or `draft/67890` -->
                            <xf:property name="document-data-or-draft-id" value="$document"/>
                        </xf:dispatch>
                    </xf:action>
                    <!-- Reset search selection and navigation -->
                    <xf:dispatch name="fr-reset-search" targetid="fr-form-model"/>
                </xf:action>
            </fr:positive-choice>
        </fr:alert-dialog>
    </body>
</html>
