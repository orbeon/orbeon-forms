<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<group description="XForms Actions" xmlns:p="http://www.orbeon.com/oxf/pipeline"
       xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:xs="http://www.w3.org/2001/XMLSchema"
       xmlns:xh="http://www.w3.org/1999/xhtml"
       xmlns:oxf="http://www.orbeon.com/oxf/processors"
       xmlns:xi="http://www.w3.org/2001/XInclude"
       xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
       xmlns:xf="http://www.w3.org/2002/xforms"
       xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
       xmlns:ev="http://www.w3.org/2001/xml-events"
       xmlns:xbl="http://www.w3.org/ns/xbl"
       xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <test description="Interaction of context and iterate" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>

                <xh:head>
                    <xf:model>
                        <xf:instance id="instance">
                            <instance>
                                <nested/>
                                <one-line/>
                                <no-insert/>
                            </instance>
                        </xf:instance>

                        <xf:action ev:event="xforms-model-construct-done">

                            <!-- Straight forward insert -->
                            <xf:action iterate="for $i in (1 to 3) return .">
                                <xf:insert context="nested" origin="xf:element('item')"/>
                            </xf:action>

                            <!-- Does the same thing as the previous, in one line (the iterate doesn't change the context of the insert since it return ".") -->
                            <xf:insert context="one-line"
                                    iterate="for $i in (1 to 3) return ."
                                    origin="xf:element('item')"/>

                            <!-- This should not do any insert as the iterate changes the context to a simple type -->
                            <xf:insert context="no-insert"
                                    iterate="for $i in (1 to 3) return 42"
                                    origin="xf:element('item')"/>

                        </xf:action>
                    </xf:model>
                </xh:head>
                <xh:body>
                </xh:body>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="xf-1">
                                <instance>
                                    <nested>
                                        <item/>
                                        <item/>
                                        <item/>
                                    </nested>
                                    <one-line>
                                        <item/>
                                        <item/>
                                        <item/>
                                    </one-line>
                                    <no-insert/>
                                </instance>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="iterate attribute on action and context() function" name="oxf:pipeline">
        <input name="config">
            <p:config xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <p:param name="response" type="output"/>

                <p:processor name="oxf:pipeline">
                    <p:input name="config" href="wrap-xforms-state.xpl"/>
                    <p:input name="document">
                        <xh:html>
                            <xh:head>
                                <xf:model id="main-model">
                                    <xf:instance id="main-instance">
                                        <instance xmlns=""/>
                                    </xf:instance>

                                    <xf:instance id="template-instance" xxf:readonly="true">
                                        <book xmlns="">
                                            <title/>
                                            <author/>
                                        </book>
                                    </xf:instance>

                                    <xf:instance id="source-instance" xxf:readonly="true">
                                        <instance xmlns="">
                                            <title>Don Quixote de la Mancha</title>
                                            <author>Miguel de Cervantes Saavedra</author>
                                            <title>Jacques le fataliste et son maître</title>
                                            <author>Denis Diderot</author>
                                            <title>Childhood's End</title>
                                            <author>Arthur C. Clarke</author>
                                        </instance>
                                    </xf:instance>

                                    <!-- Show how you can easily reformat data from one instance to the other -->
                                    <xf:action ev:event="xforms-ready" iterate="instance('source-instance')/title">
                                        <xf:insert context="instance('main-instance')" ref="book" origin="instance('template-instance')"/>
                                        <!-- Make things a bit trickier by changing the context -->
                                        <xf:action context="context()/following-sibling::author">
                                            <xf:setvalue ref="instance('main-instance')/book[last()]/title" value="context()/preceding-sibling::title[1]"/>
                                            <xf:setvalue ref="instance('main-instance')/book[last()]/author" value="context()"/>
                                        </xf:action>
                                    </xf:action>
                                </xf:model>
                            </xh:head>
                            <xh:body>

                            </xh:body>
                        </xh:html>
                    </p:input>
                    <p:output name="response" ref="response"/>
                </p:processor>

            </p:config>
        </input>
        <output name="response">
            <xxf:event-response xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="main-instance" model-id="main-model">
                                <instance>
                                    <book>
                                        <title>Don Quixote de la Mancha</title>
                                        <author>Miguel de Cervantes Saavedra</author>
                                    </book>
                                    <book>
                                        <title>Jacques le fataliste et son maître</title>
                                        <author>Denis Diderot</author>
                                    </book>
                                    <book>
                                        <title>Childhood's End</title>
                                        <author>Arthur C. Clarke</author>
                                    </book>
                                </instance>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="iterate and context() function on strings" name="oxf:pipeline">
        <input name="config">
            <p:config xmlns:oxf="http://www.orbeon.com/oxf/processors" xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <p:param name="response" type="output"/>

                <p:processor name="oxf:pipeline">
                    <p:input name="config" href="wrap-xforms-state.xpl"/>
                    <p:input name="document">
                        <xh:html>
                            <xh:head>
                                <xf:model id="main-model">

                                <xf:instance id="url" xxf:readonly="true">
                                    <url>http://example.com/?orbeon=foo&amp;forms=bar&amp;version=3.6</url>
                                </xf:instance>

                                <xf:instance id="name">
                                    <name/>
                                </xf:instance>

                                <xf:instance id="element-template" xxf:readonly="true">
                                    <element name=""/>
                                </xf:instance>

                                <xf:action ev:event="xforms-ready" iterate="tokenize(substring-after(instance('url'), '?'), '&amp;')">
                                    <xf:insert context="instance('name')" origin="instance('element-template')" ref="element"/>
                                    <xf:setvalue ref="instance('name')/element[last()]/@name" value="substring-before(context(), '=')"/>
                                    <xf:setvalue ref="instance('name')/element[last()]" value="substring-after(context(), '=')"/>
                                </xf:action>
                                </xf:model>
                            </xh:head>
                            <xh:body>

                            </xh:body>
                        </xh:html>
                    </p:input>
                    <p:output name="response" ref="response"/>
                </p:processor>

            </p:config>
        </input>
        <output name="response">
            <xxf:event-response xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="name" model-id="main-model">
                                <name>
                                    <element name="orbeon">foo</element>
                                    <element name="forms">bar</element>
                                    <element name="version">3.6</element>
                                </name>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="Simple XPath script" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html xmlns:xxf="http://orbeon.org/oxf/xml/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema">
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <value/>
                                <value/>
                            </values>
                        </xf:instance>

                        <xf:action type="xpath" ev:event="xforms-model-construct-done">
                            xxf:set-request-attribute('foo', 42)
                        </xf:action>

                        <xf:action type="xpath" ev:event="xforms-model-construct-done">
                            xxf:set-session-attribute('bar', 43)
                        </xf:action>

                        <xf:setvalue ev:event="xforms-ready" ref="value[1]" value="xxf:get-request-attribute('foo')"/>
                        <xf:setvalue ev:event="xforms-ready" ref="value[2]" value="xxf:get-session-attribute('bar')"/>

                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="model">
                                <values>
                                    <value>42</value>
                                    <value>43</value>
                                </values>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="xf:setvalue with empty context vs. empty sequence value" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html xmlns:xxf="http://orbeon.org/oxf/xml/xforms" xmlns:xs="http://www.w3.org/2001/XMLSchema">
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <value>foo</value>
                                <value>bar</value>
                                <value>baz</value>
                            </values>
                        </xf:instance>
                        <!-- Must NOP -->
                        <xf:setvalue ev:event="xforms-model-construct-done" context="()" ref="value[1]" value="42"/>
                        <!-- SHOULD set specified value but DOES NOT as of 2011-05-15 because empty context prevents ref to evaluate to non-empty -->
                        <xf:setvalue ev:event="xforms-model-construct-done" context="()" ref="instance()/value[2]" value="42"/>
                        <!-- Must set an empty value -->
                        <xf:setvalue ev:event="xforms-model-construct-done" ref="value[3]" value="()"/>

                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response xmlns:xxf="http://orbeon.org/oxf/xml/xforms">
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="model">
                                <values>
                                    <value>foo</value>
                                    <value>bar</value>
                                    <value/>
                                </values>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="Combine iterate, while and if" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance1">
                            <values>
                                <value/>
                                <value/>
                            </values>
                        </xf:instance>

                        <xf:instance id="instance2">
                            <values>
                                <value/>
                                <bar/>
                                <value/>
                            </values>
                        </xf:instance>

                        <xf:instance id="instance3">
                            <values>
                                <value/>
                                <foo/>
                                <value/>
                            </values>
                        </xf:instance>

                        <xf:setvalue
                            ev:event="xforms-model-construct-done"
                            iterate="for $i in ('instance1', 'instance2', 'instance3') return instance($i)"
                            if="not(exists(bar))"
                            while="value = ''"
                            ref="value[. = '']"
                            value="count(preceding::value) + 1"/>
                    </xf:model>
                </xh:head>
                <xh:body>
                </xh:body>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance1" model-id="model">
                                <values>
                                    <value>1</value>
                                    <value>2</value>
                                </values>
                            </instance>
                            <instance id="instance3" model-id="model">
                                <values>
                                    <value>1</value>
                                    <foo/>
                                    <value>2</value>
                                </values>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="Backward-compatibility for xxf:iterate and exf:iterate" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <iterate/>
                                <xxforms-iterate/>
                                <exforms-iterate/>
                            </values>
                        </xf:instance>

                        <xf:action ev:event="xforms-model-construct-done" iterate="1 to 3">
                            <xf:setvalue ref="instance()/iterate" value="concat(., ' ', context())"/>
                        </xf:action>
                        <xf:action ev:event="xforms-model-construct-done" xxf:iterate="1 to 3">
                            <xf:setvalue ref="instance()/xxforms-iterate" value="concat(., ' ', context())"/>
                        </xf:action>
                        <xf:action ev:event="xforms-model-construct-done" exf:iterate="1 to 3" xmlns:exf="http://www.exforms.org/exf/1-0">
                            <xf:setvalue ref="instance()/exforms-iterate" value="concat(., ' ', context())"/>
                        </xf:action>

                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="model">
                                <values>
                                    <iterate>1 2 3</iterate>
                                    <xxforms-iterate>1 2 3</xxforms-iterate>
                                    <exforms-iterate>1 2 3</exforms-iterate>
                                </values>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="xf:setvisited" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <name/>
                            </values>
                        </xf:instance>

                        <xf:action ev:event="xforms-ready">
                            <xxf:setvisited control="input1" visited="true"/>
                            <xxf:setvisited control="input2" visited="false"/>
                            <xxf:setvisited control="group1" visited="true" recurse="true"/>
                            <xxf:setvisited control="group2" visited="true" recurse="false"/>
                        </xf:action>

                    </xf:model>
                </xh:head>
                <xh:body>
                    <xf:input ref="name" id="input1"/>
                    <xf:input ref="name" id="input2"/>
                    <xf:group id="group1">
                        <xf:input ref="name" id="input11"/>
                        <xf:input ref="()" id="input12"/>
                    </xf:group>
                    <xf:group id="group2">
                        <xf:input ref="name" id="input21"/>
                        <xf:input ref="()" id="input22"/>
                    </xf:group>
                </xh:body>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state/>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values>
                        <xxf:control id="input1" visited="true"/>
                        <xxf:control id="group1" visited="true"/>
                        <xxf:control id="input11" visited="true"/>
                        <xxf:control id="input12" relevant="false"/>
                        <xxf:control id="group2" visited="true"/>
                        <xxf:control id="input22" relevant="false"/>
                    </xxf:control-values>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="#684: xxforms:if / xxforms:while don't work anymore" name="oxf:pipeline">
        <!-- See: https://github.com/orbeon/orbeon-forms/issues/684 -->
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <condition/>
                            </values>
                        </xf:instance>

                        <xf:instance id="events">
                            <events/>
                        </xf:instance>

                        <xf:action ev:event="xforms-model-construct-done">
                            <xf:setvalue ref="condition">true</xf:setvalue>
                            <xf:dispatch targetid="model" name="if"/>
                            <xf:dispatch targetid="model" name="xxf-if"/>
                            <xf:dispatch targetid="model" name="exf-if"/>

                            <xf:setvalue ref="condition">false</xf:setvalue>
                            <xf:dispatch targetid="model" name="if"/>
                            <xf:dispatch targetid="model" name="xxf-if"/>
                            <xf:dispatch targetid="model" name="exf-if"/>
                        </xf:action>

                        <xf:insert ev:event="if"     if="instance()/condition = 'true'"  context="instance('events')" ref="*" origin="xf:element('if-true')"/>
                        <xf:insert ev:event="xxf-if" if="instance()/condition = 'true'"  context="instance('events')" ref="*" origin="xf:element('xxf-if-true')"/>
                        <xf:insert ev:event="exf-if" if="instance()/condition = 'true'"  context="instance('events')" ref="*" origin="xf:element('exf-if-true')"/>

                        <xf:insert ev:event="if"     if="instance()/condition = 'false'" context="instance('events')" ref="*" origin="xf:element('if-false')"/>
                        <xf:insert ev:event="xxf-if" if="instance()/condition = 'false'" context="instance('events')" ref="*" origin="xf:element('xxf-if-false')"/>
                        <xf:insert ev:event="exf-if" if="instance()/condition = 'false'" context="instance('events')" ref="*" origin="xf:element('exf-if-false')"/>
                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="model">
                                <values>
                                    <condition>false</condition>
                                </values>
                            </instance>
                            <instance id="events" model-id="model">
                                <events>
                                    <if-true/>
                                    <xxf-if-true/>
                                    <exf-if-true/>
                                    <if-false/>
                                    <xxf-if-false/>
                                    <exf-if-false/>
                                </events>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="#746: NPE in xf:load with AVT" name="oxf:pipeline">
        <!-- See: https://github.com/orbeon/orbeon-forms/issues/746 -->
        <!-- See: https://github.com/orbeon/orbeon-forms/issues/972 -->
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <values>
                                <condition/>
                            </values>
                        </xf:instance>

                        <!-- Must not NPE here -->
                        <xf:load ev:event="xforms-model-construct-done" resource="{()}"/>
                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state/>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                    <xxf:load resource="/orbeon/doc/" show="replace"/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="#837: Support xxforms-replace event" name="oxf:pipeline">
        <!-- See: https://github.com/orbeon/orbeon-forms/issues/837 -->
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">
                        <xf:instance id="instance">
                            <e1/>
                        </xf:instance>

                        <xf:submission
                            id="replace-instance"
                            ref="instance()"
                            action="echo:"
                            method="post"
                            replace="instance"/>

                        <xf:submission
                            id="replace-ref"
                            ref="instance()"
                            action="echo:"
                            method="post"
                            replace="instance"
                            targetref="instance()"/>

                        <xf:action ev:event="xforms-model-construct-done">
                            <xf:insert ref="instance()" origin="xf:element('e2')"/>
                            <xf:send submission="replace-instance"/>
                            <xf:insert ref="instance()" origin="xf:element('e3')"/>
                            <xf:send submission="replace-ref"/>
                        </xf:action>

                        <xf:message ev:event="xxforms-replace" value="string-join((name(event('former-node')), name(event('current-node'))), '-')"/>
                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance" model-id="model">
                                <e3/>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                    <xxf:message level="modal">e1-e2</xxf:message>
                    <xxf:message level="modal">e2-e2</xxf:message>
                    <xxf:message level="modal">e2-e3</xxf:message>
                    <xxf:message level="modal">e3-e3</xxf:message>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="#1546: Default value overrides existing when switching to view mode" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model1">
                        <xf:instance id="instance1">
                            <value/>
                        </xf:instance>

                        <xf:bind ref="instance()" xxf:default="42"/>

                        <xf:action event="xforms-ready">
                            <xf:setvalue ref="instance()" value="123"/>
                            <xf:recalculate xxf:deferred="true"/>
                        </xf:action>
                    </xf:model>
                    <xf:model id="model2">
                        <xf:instance id="instance2">
                            <value/>
                        </xf:instance>

                        <xf:bind ref="instance()" xxf:default="42"/>

                        <xf:action event="xforms-ready">
                            <xf:setvalue ref="instance()" value="123"/>
                            <xf:recalculate xxf:defaults="true"/>
                        </xf:action>
                    </xf:model>
                </xh:head>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="instance1" model-id="model1">
                                <value>123</value>
                            </instance>
                            <instance id="instance2" model-id="model2">
                                <value>42</value>
                            </instance>
                        </instances>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values/>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

    <test description="#4392: Toggling a case should toggle the ancestor cases as well" name="oxf:pipeline">
        <input name="config" href="wrap-xforms-state.xpl"/>
        <input name="document">
            <xh:html>
                <xh:head>
                    <xf:model id="model">

                        <xf:instance id="events">
                            <events/>
                        </xf:instance>

                        <xf:action event="xforms-ready">

                            <xf:var name="switches" value="'s1', 's1c1s1', 's1c2s1'"/>

                            <xf:message value="string-join(for $s in $switches return case($s), ' ')"/>

                            <xf:toggle case="s1c2"/>
                            <xf:message value="string-join(for $s in $switches return case($s), ' ')"/>

                            <xf:toggle case="s1c1"/>
                            <xf:message value="string-join(for $s in $switches return case($s), ' ')"/>

                            <xf:toggle case="s1c2s1c2"/>
                            <xf:message value="string-join(for $s in $switches return case($s), ' ')"/>

                            <xf:toggle case="s1c1s1c2"/>
                            <xf:message value="string-join(for $s in $switches return case($s), ' ')"/>

                        </xf:action>
                    </xf:model>
                </xh:head>
                <xh:body>

                    <xf:insert
                        event="xforms-select xforms-deselect"
                        context="instance()"
                        ref="*"
                        origin="xf:element(event('xxf:type'), xf:attribute('target', event('xxf:targetid')))"/>

                    <xf:switch id="s1">
                        <xf:case id="s1c1">
                            <xf:switch id="s1c1s1">
                                <xf:case id="s1c1s1c1"/>
                                <xf:case id="s1c1s1c2"/>
                            </xf:switch>
                        </xf:case>
                        <xf:case id="s1c2">
                            <xf:switch id="s1c2s1">
                                <xf:case id="s1c2s1c1"/>
                                <xf:case id="s1c2s1c2"/>
                            </xf:switch>
                        </xf:case>
                    </xf:switch>
                </xh:body>
            </xh:html>
        </input>
        <output name="response">
            <xxf:event-response>
                <xxf:dynamic-state>
                    <dynamic-state>
                        <instances>
                            <instance id="events" model-id="model">
                                <events>
                                    <xforms-deselect target="s1c1"/>
                                    <xforms-select target="s1c2"/>
                                    <xforms-deselect target="s1c2"/>
                                    <xforms-select target="s1c1"/>
                                    <xforms-deselect target="s1c2s1c1"/>
                                    <xforms-select target="s1c2s1c2"/>
                                    <xforms-deselect target="s1c1"/>
                                    <xforms-select target="s1c2"/>
                                    <xforms-deselect target="s1c1s1c1"/>
                                    <xforms-select target="s1c1s1c2"/>
                                    <xforms-deselect target="s1c2"/>
                                    <xforms-select target="s1c1"/>
                                </events>
                            </instance>
                        </instances>
                        <controls>
                            <control effective-id="s1" case-id="s1c1"/>
                            <control effective-id="s1c1s1" case-id="s1c1s1c2"/>
                            <control effective-id="s1c2s1" case-id="s1c2s1c2"/>
                        </controls>
                    </dynamic-state>
                </xxf:dynamic-state>
                <xxf:action>
                    <xxf:control-values>
                        <xxf:control id="s1">
                            <xxf:case id="s1c1" visibility="visible"/>
                            <xxf:case id="s1c2" visibility="hidden"/>
                        </xxf:control>
                        <xxf:control id="s1c1s1">
                            <xxf:case id="s1c1s1c2" visibility="visible"/>
                            <xxf:case id="s1c1s1c1" visibility="hidden"/>
                        </xxf:control>
                        <xxf:control id="s1c2s1">
                            <xxf:case id="s1c2s1c2" visibility="visible"/>
                            <xxf:case id="s1c2s1c1" visibility="hidden"/>
                        </xxf:control>
                    </xxf:control-values>
                    <xxf:message level="modal">s1c1 s1c1s1c1 s1c2s1c1</xxf:message>
                    <xxf:message level="modal">s1c2 s1c1s1c1 s1c2s1c1</xxf:message>
                    <xxf:message level="modal">s1c1 s1c1s1c1 s1c2s1c1</xxf:message>
                    <xxf:message level="modal">s1c2 s1c1s1c1 s1c2s1c2</xxf:message>
                    <xxf:message level="modal">s1c1 s1c1s1c2 s1c2s1c2</xxf:message>
                </xxf:action>
            </xxf:event-response>
        </output>
    </test>

</group>
