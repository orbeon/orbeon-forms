<!--
    Copyright (C) 2004 Orbeon, Inc.

    This program is free software; you can redistribute it and/or modify it under the terms of the
    GNU Lesser General Public License as published by the Free Software Foundation; either version
    2.1 of the License, or (at your option) any later version.

    This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
    without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
    See the GNU Lesser General Public License for more details.

    The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
-->
<group description="Converters" xmlns:p="http://www.orbeon.com/oxf/pipeline" xmlns:oxf="http://www.orbeon.com/oxf/processors">

    <!--
    TODO: o all converters (XML, HTML, Text, XSL:FO)
          o check that content-type incl. encoding attribute is correctly generated

    -->

    <test description="XML conversion" name="oxf:xml-converter">
        <input name="data" href="claim-1.xml"/>
        <input name="config">
            <config>
                <content-type>application/xml</content-type>
                <encoding>iso-8859-1</encoding>
                <version>1.0</version>
            </config>
        </input>
        <output name="data">
            <document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" content-type="application/xml; charset=iso-8859-1">&lt;?xml version="1.0" encoding="iso-8859-1"?&gt; &lt;claim xmlns="http://orbeon.org/oxf/examples/bizdoc/claim"&gt; &lt;insured-info&gt; &lt;general-info&gt; &lt;name-info&gt; &lt;title-prefix&gt;Dr.&lt;/title-prefix&gt; &lt;last-name&gt;Doe&lt;/last-name&gt; &lt;first-name&gt;John&lt;/first-name&gt; &lt;title-suffix/&gt; &lt;/name-info&gt; &lt;address&gt; &lt;address-detail&gt; &lt;street-name&gt;N Columbus Dr.&lt;/street-name&gt; &lt;street-number&gt;511&lt;/street-number&gt; &lt;unit-number/&gt; &lt;/address-detail&gt; &lt;city&gt;Chicago&lt;/city&gt; &lt;state-province&gt;IL&lt;/state-province&gt; &lt;postal-code&gt;60611&lt;/postal-code&gt; &lt;country&gt;USA&lt;/country&gt; &lt;email&gt;jdoe@acme.org&lt;/email&gt; &lt;/address&gt; &lt;/general-info&gt; &lt;person-info&gt; &lt;gender-code&gt;M&lt;/gender-code&gt; &lt;birth-date&gt;1972-10-01&lt;/birth-date&gt; &lt;marital-status-code&gt;C&lt;/marital-status-code&gt; &lt;occupation&gt;Manager&lt;/occupation&gt; &lt;/person-info&gt; &lt;family-info&gt; &lt;children&gt; &lt;child&gt; &lt;birth-date&gt;2003-02-02&lt;/birth-date&gt; &lt;first-name&gt;Marco&lt;/first-name&gt; &lt;/child&gt; &lt;child&gt; &lt;birth-date/&gt; &lt;first-name/&gt; &lt;/child&gt; &lt;/children&gt; &lt;comments&gt;No comments at this point!&lt;/comments&gt; &lt;/family-info&gt; &lt;claim-info&gt; &lt;accident-type&gt;FOOT&lt;/accident-type&gt; &lt;accident-date&gt;2004-07-06&lt;/accident-date&gt; &lt;rate/&gt; &lt;/claim-info&gt; &lt;/insured-info&gt; &lt;/claim&gt;</document>
        </output>
    </test>

    <test description="HTML conversion" name="oxf:html-converter">
        <input name="data" href="hello3-view.xhtml"/>
        <input name="config">
            <config>
                <content-type>text/html</content-type>
                <encoding>iso-8859-1</encoding>
                <public-doctype>-//W3C//DTD HTML 4.01 Transitional//EN</public-doctype>
                <version>4.01</version>
            </config>
        </input>
        <output name="data">
            <document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" content-type="text/html; charset=iso-8859-1">&lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt; &lt;html&gt; &lt;head&gt; &lt;title&gt;Hello World XForms&lt;/title&gt; &lt;xf:model&gt; &lt;xf:instance&gt; &lt;first-name&gt;&lt;/first-name&gt; &lt;/xf:instance&gt; &lt;/xf:model&gt; &lt;/head&gt; &lt;body&gt; &lt;p&gt; Please enter your first name: &lt;xf:input ref="/first-name" incremental="true"&gt;&lt;/xf:input&gt; &lt;/p&gt; &lt;p&gt; &lt;xf:output value="if (normalize-space(/first-name) = '') then '' else concat('Hello, ', /first-name, '!')"&gt;&lt;/xf:output&gt; &lt;/p&gt; &lt;/body&gt; &lt;/html&gt;</document>
        </output>
    </test>

    <test description="Text conversion" name="oxf:text-converter">
        <input name="data">
            <text>
                This is just plain text. It will be output without the <em>text</em> and <em>em</em>
                elements.
            </text>
        </input>
        <input name="config">
            <config/>
        </input>
        <output name="data">
            <document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" content-type="text/plain; charset=UTF-8">
                This is just plain text. It will be output without the text and em elements.
            </document>
        </output>
    </test>

    <test description="XML CP-1252 conversion" name="oxf:pipeline">
        <input name="config">
            <p:config xmlns:oxf="http://www.orbeon.com/oxf/processors">
                <p:param type="output" name="result"/>
                <p:processor name="oxf:xslt">
                    <p:input name="data"><_/></p:input>
                    <p:input name="config">
                        <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:template match="/">
                                <xsl:element name="document" inherit-namespaces="no">
                                    <xsl:for-each select="127 to 159">
                                        <xsl:value-of select="codepoints-to-string(.)"/>
                                    </xsl:for-each>
                                </xsl:element>
                            </xsl:template>
                        </xsl:stylesheet>
                    </p:input>
                    <p:output name="data" id="data"/>
                </p:processor>
                <p:processor name="oxf:xml-converter">
                    <p:input name="data" href="#data"/>
                    <p:input name="config">
                        <config>
                            <method>p:org.orbeon.saxon.event.XML1252Emitter</method>
                            <omit-xml-declaration>true</omit-xml-declaration>
                        </config>
                    </p:input>
                    <p:output name="data" ref="result"/>
                </p:processor>
            </p:config>
        </input>
        <output name="result">
            <document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" content-type="application/xml; charset=UTF-8">&lt;document&gt;&amp;#127;&amp;#8364;&amp;#129;&amp;#8218;&amp;#402;&amp;#8222;&amp;#8230;&amp;#8224;&amp;#8225;&amp;#710;&amp;#8240;&amp;#352;&amp;#8249;&amp;#338;&amp;#141;&amp;#381;&amp;#143;&amp;#144;&amp;#8216;&amp;#8217;&amp;#8220;&amp;#8221;&amp;#8226;&amp;#8211;&amp;#8212;&amp;#732;&amp;#8482;&amp;#353;&amp;#8250;&amp;#339;&amp;#157;&amp;#382;&amp;#376;&lt;/document&gt;</document>
        </output>
    </test>

    <test description="HTML CP-1252 conversion" name="oxf:pipeline">
        <input name="config">
            <p:config xmlns:oxf="http://www.orbeon.com/oxf/processors">
                <p:param type="output" name="result"/>
                <p:processor name="oxf:xslt">
                    <p:input name="data"><_/></p:input>
                    <p:input name="config">
                        <xsl:stylesheet version="2.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">
                            <xsl:template match="/">
                                <xsl:element name="html" inherit-namespaces="no">
                                    <xsl:element name="body" inherit-namespaces="no">
                                        <xsl:for-each select="127 to 159">
                                            <xsl:value-of select="codepoints-to-string(.)"/>
                                        </xsl:for-each>
                                    </xsl:element>
                                </xsl:element>
                            </xsl:template>
                        </xsl:stylesheet>
                    </p:input>
                    <p:output name="data" id="data"/>
                </p:processor>
                <p:processor name="oxf:xml-converter">
                    <p:input name="data" href="#data"/>
                    <p:input name="config">
                        <config>
                            <method>p:org.orbeon.saxon.event.HTML1252Emitter</method>
                            <version>4.01</version>
                            <encoding>UTF-8</encoding>
                        </config>
                    </p:input>
                    <p:output name="data" ref="result"/>
                </p:processor>
            </p:config>
        </input>
        <output name="result">
            <document xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="xs:string" content-type="application/xml; charset=UTF-8">&lt;html&gt;&lt;body&gt;&amp;#8364;&amp;#129;&amp;#8218;&amp;#402;&amp;#8222;&amp;#8230;&amp;#8224;&amp;#8225;&amp;#710;&amp;#8240;&amp;#352;&amp;#8249;&amp;#338;&amp;#141;&amp;#381;&amp;#143;&amp;#144;&amp;#8216;&amp;#8217;&amp;#8220;&amp;#8221;&amp;#8226;&amp;#8211;&amp;#8212;&amp;#732;&amp;#8482;&amp;#353;&amp;#8250;&amp;#339;&amp;#157;&amp;#382;&amp;#376;&lt;/body&gt;&lt;/html&gt;</document>
        </output>
    </test>

    <test description="Converters forward top-level serializer PIs (see #334)" name="oxf:pipeline">
        <input name="config">
            <p:config>
                <p:param type="output" name="result"/>
                <p:processor name="oxf:xml-converter">
                    <p:input name="data" href="with-top-level-pi.xml"/>
                    <p:input name="config">
                        <config><omit-xml-declaration>true</omit-xml-declaration></config>
                    </p:input>
                    <p:output name="data" ref="result"/>
                </p:processor>
            </p:config>
        </input>
        <output name="result">
            <document xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xs="http://www.w3.org/2001/XMLSchema" xsi:type="xs:string" content-type="application/xml; charset=UTF-8"><?orbeon-serializer status-code="500"?>
&lt;root/&gt;</document>
        </output>
    </test>

</group>
