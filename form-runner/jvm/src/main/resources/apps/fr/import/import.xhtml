<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xh:html
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xf="http://www.w3.org/2002/xforms"
    xmlns:xxf="http://orbeon.org/oxf/xml/xforms"
    xmlns:xh="http://www.w3.org/1999/xhtml"
    xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
    xmlns:frf="java:org.orbeon.oxf.fr.FormRunner"
    lang="{xxf:instance('fr-fr-language-instance')}"
    xml:lang="{xxf:instance('fr-fr-language-instance')}">

    <xh:head>
        <xh:link rel="stylesheet" href="/apps/fr/style/form-runner-import.css" type="text/css" media="all"/>
        <xf:model
            id="fr-form-model"
            xxf:xpath-analysis="true"
            xxf:submission-poll-delay="2000"
            xxf:function-library="org.orbeon.oxf.fr.library.FormRunnerFunctionLibrary">

            <xf:var name="app"  value="fr:app-name()"/>
            <xf:var name="form" value="fr:form-name()"/>

            <xf:var
                name="versioning-supported-on-data-side"
                value="xxf:non-blank($app) and frf:isFormDefinitionVersioningSupported($app, $form)"/>

            <xf:var
                name="allow-invalid-documents"
                value="xxf:property(string-join(('oxf.fr.import.allow-invalid-documents', $app, $form), '.')) = true()"/>

            <xf:var
                name="restrict-to-latest-version"
                value="xxf:property(string-join(('oxf.fr.import.restrict-to-latest-version', $app, $form), '.')) = true()"/>

            <xf:var
                name="allowed-formats"
                value="
                    let $all-formats := ('excel-headings', 'excel-named-ranges', 'xml-form-structure-and-data'),
                        $req-allowed-formats :=
                            xxf:split(xxf:get-request-parameter('allowed-formats'))[
                                . = $all-formats
                            ],
                        $prop-allowed-formats :=
                            xxf:split(xxf:property(string-join(('oxf.fr.import.allowed-formats', $app, $form), '.')))[
                                . = $all-formats
                            ]
                    return
                        if (empty($req-allowed-formats)) then
                            $prop-allowed-formats
                        else
                            $req-allowed-formats[. = $prop-allowed-formats]
                    "/>

            <xf:var
                name="show-start-over-button"
                value="xxf:property(string-join(('oxf.fr.import.show-start-over-button', $app, $form), '.')) = true()"/>

            <xf:var
                name="show-app-form-names"
                value="xxf:property(string-join(('oxf.fr.import.show-app-form-names', $app, $form), '.')) = true()"/>

            <xf:action event="xforms-model-construct-done">

                <xf:action if="not(fr:is-pe())" type="xpath">
                    frf:sendError(404)
                </xf:action>

                <xf:send submission="fb-read-form-metadata"/>

                <xf:action if="empty(instance('fb-publish-form-metadata')/*)" type="xpath">
                    frf:sendError(404)
                </xf:action>

                <!-- Deal with default for `selected-version` -->
                <xf:setvalue
                    ref="instance('fr-form-instance')/version/selected-version"
                    value="
                        if (not($versioning-supported-on-data-side)) then
                            (: No support on the data side so we always pass 1 as version :)
                            1
                        else if (count(instance('fb-publish-form-metadata')/form/form-version) gt 1) then
                            (: Support on the data side and multiple possible versions so leave blank for the user to select :)
                            ''
                        else
                            (: Support on the data side and only one possible version so skip the selection :)
                            instance('fb-publish-form-metadata')/form/form-version"/>

                <!-- If we selected a version automatically, then run the search -->
                <xf:send
                    if="xxf:non-blank(instance('fr-form-instance')/version/selected-version/string())"
                    submission="fr-import-search-submission">
                    <xf:property
                        name="form-version"
                        value="instance('fr-form-instance')/version/selected-version"/>
                </xf:send>

            </xf:action>

            <xf:dispatch
                event="xforms-ready"

                name="fr-import-clear-validation-and-import"
                targetid="fr-form-model"/>

            <!-- Main data -->
            <xf:instance id="fr-form-instance" xxf:expose-xpath-types="true">
                <wizard current="1">
                    <version>
                        <selected-version/>
                        <existing-comment/>
                    </version>
                    <upload>
                        <file mediatype="" filename="" size=""/>
                        <file-format/>
                    </upload>
                    <validate>
                        <!-- 'not-started' | 'started' | 'succeeded' | 'failed' -->
                        <validating>not-started</validating>
                        <stats>
                            <total/>
                            <processed/>
                            <succeeded/>
                        </stats>
                    </validate>
                    <import>
                        <keep-existing-records>true</keep-existing-records>
                        <import-invalid-data>false</import-invalid-data>
                        <!-- 'not-started' | 'started' | 'succeeded' | 'failed' -->
                        <importing>not-started</importing>
                        <stats>
                            <total/>
                            <processed/>
                            <succeeded/>
                        </stats>
                    </import>
                </wizard>
            </xf:instance>

            <xf:bind ref="instance('fr-form-instance')">
                <xf:bind
                    ref="version"
                    id="version-bind"
                    relevant="
                        $versioning-supported-on-data-side and
                        $latest-version gt 0               and
                        count(instance('fb-publish-form-metadata')/form/form-version) gt 1">
                    <xf:bind
                        ref="selected-version"
                        type="xs:integer"
                        required="true()"/>
                    <xf:bind
                        ref="existing-comment"
                        readonly="true()"/>
                </xf:bind>
                <xf:bind ref="upload" id="upload-bind">
                    <xf:bind
                        ref="file"
                        id="file-bind"
                        name="file"
                        required="true()"
                        constraint="
                            xxf:upload-mediatypes(
                                string-join(
                                    (
                                        if ($allowed-formats = 'xml-form-structure-and-data') then
                                            ('text/xml', 'application/xml')
                                        else
                                            (),
                                        if ($allowed-formats = ('excel-headings', 'excel-named-ranges')) then
                                            'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
                                        else
                                            ()
                                    ),
                                    ' '
                                )
                            )"/>
                    <xf:bind
                            ref="file-format"
                            id="file-format-bind"
                            name="file-format"
                            calculate="
                                if ($file/@mediatype = ('text/xml', 'application/xml')) then
                                    'xml-form-structure-and-data'
                                else if ($file/@mediatype = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet') then
                                    $allowed-formats[. = ('excel-headings', 'excel-named-ranges')][1]
                                else
                                    ."/>
                </xf:bind>
                <xf:bind ref="validate" id="validate-bind">
                    <xf:bind ref="validating" constraint="$validation-completed"/>
                    <xf:bind ref="stats/(total | processed | succeeded)" type="xs:integer" readonly="true()"/>
                    <xf:bind ref="stats/(all-values-count | set-values-count | counts/@*)" type="xs:integer" readonly="true()"/>
                    <xf:bind ref="stats/errors" id="validate-stats-errors-bind"/>
                </xf:bind>
                <xf:bind ref="import" id="import-bind" relevant="not($file-format = ('excel-named-ranges', 'xml-form-structure-and-data'))">
                    <xf:bind id="fr-keep-existing-records-bind" ref="keep-existing-records"/>
                    <xf:bind id="fr-import-invalid-data-bind"   ref="import-invalid-data"/>

                    <xf:bind ref="importing"  constraint="$import-completed"/>
                    <xf:bind ref="stats/*"    type="xs:integer" readonly="true()"/>
                </xf:bind>
            </xf:bind>

            <!-- Validation and import status -->
            <xf:var name="validation-done"      context="instance('fr-form-instance')/validate/validating" value=". = 'succeeded'"/>
            <xf:var name="validation-completed" context="instance('fr-form-instance')/validate/stats"      value="$validation-done and total = processed"/>
            <xf:var name="validation-canceled"  context="instance('fr-form-instance')/validate/stats"      value="$validation-done and not($validation-completed)"/>

            <xf:var name="import-done"          context="instance('fr-form-instance')/import/importing"    value=". = 'succeeded'"/>
            <xf:var name="import-completed"     context="instance('fr-form-instance')/import/stats"        value="$import-done and total = processed"/>
            <xf:var name="import-canceled"      context="instance('fr-form-instance')/import/stats"        value="$import-done and not($import-completed)"/>

            <xf:action event="fr-import-clear-validation-and-import">

                <xf:dispatch
                    name="fr-import-clear-import"
                    targetid="fr-form-model"/>

                <xf:action context="validate">
                    <xf:setvalue ref="validating">not-started</xf:setvalue>
                    <xf:setvalue iterate="stats/*" ref="."/>
                    <xf:delete ref="stats/_"/>
                </xf:action>
            </xf:action>

            <xf:action event="fr-import-clear-import">

                <xf:action type="xpath">
                    xxf:set-session-attribute('org.orbeon.fr.import.total',     ()),
                    xxf:set-session-attribute('org.orbeon.fr.import.processed', ()),
                    xxf:set-session-attribute('org.orbeon.fr.import.skipped',   ()),
                    xxf:set-session-attribute('org.orbeon.fr.import.cancel',    ())
                </xf:action>

                <xf:action context="import">
                    <xf:setvalue ref="importing">not-started</xf:setvalue>
                    <xf:setvalue iterate="stats/*" ref="."/>
                </xf:action>
            </xf:action>

            <!-- Validate data to import -->
            <xf:submission
                id="fr-import-validate-submission"
                ref="instance('fr-form-instance')/upload"
                method="post"
                mode="asynchronous"
                action="/fr/service/{
                        $app
                    }/{
                        $form
                    }/validate?form-version={
                        instance('fr-form-instance')/version/selected-version
                    }&amp;document-id={
                        xxf:get-request-parameter('document-id')
                    }"
                replace="instance"
                instance="fr-form-instance"
                targetref="validate/stats">

                <!-- Reset stats -->
                <xf:action event="xforms-submit" context="instance('fr-import-batch-stats')">
                    <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                    <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                </xf:action>

                <!-- Validation status -->
                <xf:setvalue event="xforms-submit"       ref="instance('fr-form-instance')/validate/validating">started</xf:setvalue>
                <xf:setvalue event="xforms-submit-done"  ref="instance('fr-form-instance')/validate/validating">succeeded</xf:setvalue>
                <xf:setvalue event="xforms-submit-error" ref="instance('fr-form-instance')/validate/validating">failed</xf:setvalue>

                <xf:message  event="xforms-submit-error" if="event('response-status-code') != 403" value="xxf:r('import.error-messages.validating',   '|fr-fr-resources|')"/>
                <xf:message  event="xforms-submit-error" if="event('response-status-code') = 403"  value="xxf:r('import.error-messages.unauthorized', '|fr-fr-resources|')"/>

            </xf:submission>

            <!-- Import data -->
            <xf:submission
                id="fr-import-import-submission"
                ref="instance('fr-form-instance')/upload"
                method="post"
                mode="asynchronous"
                action="/fr/service/{
                        $app
                    }/{
                        $form
                    }/import?form-version={
                        instance('fr-form-instance')/version/selected-version
                    }&amp;import-invalid-data={
                        bind('fr-import-invalid-data-bind')
                    }"
                replace="instance"
                instance="fr-form-instance"
                targetref="import/stats">

                <!-- Reset stats -->
                <xf:action event="xforms-submit" context="instance('fr-import-batch-stats')">
                    <xf:setvalue iterate="total, processed, succeeded" ref="." value="0"/>
                    <xf:setvalue iterate="progress, start-time, eta"   ref="."/>
                </xf:action>

                <!-- Import status -->
                <xf:setvalue event="xforms-submit"       ref="instance('fr-form-instance')/import/importing">started</xf:setvalue>
                <xf:setvalue event="xforms-submit-done"  ref="instance('fr-form-instance')/import/importing">succeeded</xf:setvalue>
                <xf:setvalue event="xforms-submit-error" ref="instance('fr-form-instance')/import/importing">failed</xf:setvalue>

                <xf:message  event="xforms-submit-error" value="xxf:r('import.error-messages.importing', '|fr-fr-resources|')"/>
            </xf:submission>

            <!-- Delete all data in the given form -->
            <xf:submission
                id="fr-import-delete-data-submission"
                method="delete"
                serialization="none"
                action="/fr/service/persistence/crud/{$app}/{$form}/data/"
                replace="none">

                <!-- Start import once data is successfully deleted -->
                <xf:send event="xforms-submit-done" submission="fr-import-import-submission"/>

                <!-- Error -->
                <xf:message  event="xforms-submit-error" value="xxf:r('import.error-messages.deleting', '|fr-fr-resources|')"/>
            </xf:submission>

            <!-- Submit the form data to the form's `new` page -->
            <xf:submission
                id="fr-import-submit-new-form-submission"
                ref="bind('validate-bind')/stats/form"
                method="post"
                serialization="application/xml"
                action="/fr/{$app}/{$form}/new{
                    let $doc := xxf:get-request-parameter('document-id')
                    return
                        if (xxf:non-blank($doc)) then
                            concat('/', xxf:trim($doc))
                        else
                            ''
                }?data-format-version=edge&amp;fr-show-relevant-errors=true{
                    let $prop   := xxf:property(string-join(('oxf.fr.import.forward-parameters', $app, $form), '.')),
                        $params := xxf:split($prop),
                        $tuples :=
                            for $name  in $params,
                                $value in xxf:get-request-parameter($name)
                            return
                                concat($name, '=', encode-for-uri($value))
                    return
                        if (empty($tuples)) then
                            ''
                        else
                            concat(
                                '&amp;',
                                string-join(
                                    $tuples,
                                    '&amp;'
                                )
                            )
                }"
                replace="all"/>

            <!-- Statistics gathered upon polling event -->
            <xf:instance id="fr-import-batch-stats" xxf:expose-xpath-types="true">
                <stats>
                    <total>0</total>
                    <processed>0</processed>
                    <succeeded>0</succeeded>

                    <invalid-count>0</invalid-count>
                    <progress/>
                    <start-time/>
                    <eta/>
                </stats>
            </xf:instance>

            <xf:bind ref="instance('fr-import-batch-stats')">
                <xf:bind
                    ref="*"
                    readonly="true()"/>
                <xf:bind
                    ref="invalid-count"
                    type="xs:integer"
                    calculate="../processed - ../succeeded"
                    id="fr-import-invalid-count-bind"/>
                <xf:bind
                    ref="progress"
                    calculate="if (../total != 0) then xs:decimal(../processed) div xs:decimal(../total) else 0"/>
                <xf:bind
                    ref="start-time"
                    calculate="if (. = '' and ../total != 0) then current-dateTime() else ."/>
                <xf:bind
                    ref="eta"
                    calculate="
                        if (../start-time != '' and ../processed != 0 and xs:decimal(../progress) != 0) then
                            (current-dateTime() - xs:dateTime(../start-time)) * ((1.0 - ../progress) div ../progress)
                        else
                            ''"/>
            </xf:bind>

            <!-- Update progress upon poll event -->
            <xf:dispatch
                event="xxforms-poll"
                observer="#document"

                name="fr-import-update-stats"
                targetid="fr-form-model"
            />

            <!-- Also update upon completion of submission ih case there was no poll event -->
            <xf:dispatch
                event="xforms-submit-done"
                observer="fr-import-validate-submission fr-import-import-submission"

                name="fr-import-update-stats"
                targetid="fr-form-model"
            />

            <xf:action
                event="fr-import-update-stats"
                context="instance('fr-form-instance')/(import/importing, validate/validating)[. = ('started', 'succeeded')][1]"
                if="exists(.)">

                <!-- Update both in `fr-import-batch-stats` and in the current validate/import data -->
                <xf:var
                    name="parents"
                    value="../stats, instance('fr-import-batch-stats')"/>

                <xf:action iterate="'total', 'processed', 'succeeded'">

                    <xf:var
                        name="name"
                        value="."/>

                    <xf:var
                        name="value"
                        value="
                        (
                            xxf:get-session-attribute(concat('org.orbeon.fr.import.', $name))[
                                . castable as xs:integer
                            ],
                            0
                        )[1]"/>

                    <xf:setvalue
                        iterate="$parents"
                        ref="*[name() = $name]"
                        value="$value"/>

                </xf:action>
            </xf:action>

            <!-- Search request -->
            <xf:instance id="fr-import-search-request">
                <search>
                    <!-- Free text search query -->
                    <query/>
                    <!-- Paging -->
                    <page-size>1</page-size>
                    <page-number>1</page-number>
                    <!-- Language -->
                    <lang/>
                </search>
            </xf:instance>

            <!-- Search response -->
            <xf:instance id="fr-import-search-response" xxf:expose-xpath-types="true"><dummy/></xf:instance>

            <xf:bind ref="instance('fr-import-search-response')">
                <xf:bind ref="@search-total" type="xs:integer"/>
            </xf:bind>

            <!-- Search submission -->
            <xf:submission
                id="fr-import-search-submission"
                ref="instance('fr-import-search-request')"
                validate="false"
                method="post"
                resource="/fr/service/persistence/search/{$app}/{$form}"
                replace="instance"
                instance="fr-import-search-response">

                <!-- To retrieve a specific version -->
                <xf:header ref="event('form-version')[xxf:non-blank()]">
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="."/>
                </xf:header>

                <!-- Set language upon submitting -->
                <xf:action event="xforms-submit">
                    <xf:setvalue ref="lang" value="xxf:instance('fr-language-instance')"/>
                </xf:action>
                <xf:message event="xforms-submit-error" value="xxf:r('import.error-messages.reading-form-data', '|fr-fr-resources|')"/>
            </xf:submission>

            <!-- Metadata -->
            <xf:instance id="fr-form-metadata" xxf:readonly="true">
                <metadata xmlns="">
                    <application-name>orbeon</application-name>
                    <form-name>runner</form-name>
                    <title xml:lang="en">Import Data</title>
                    <title xml:lang="de">Form Runner Excel Importieren</title>
                    <title xml:lang="fr">Import de données</title>
                    <description/>
                    <author>Orbeon, Inc.</author>
                    <created-with-version>2018.2</created-with-version>
                </metadata>
            </xf:instance>

            <!-- Standard Form Runner resources instance -->
            <!-- Handled specially in `resources-model.xml` -->
            <xf:instance id="fr-form-resources">
                <resources xmlns=""/>
            </xf:instance>

            <!-- START: Shared with `dialog-publish.xml` -->
            <xf:instance id="fb-publish-instance" xxf:expose-xpath-types="true">
                <publish>
                    <latest-version>-1</latest-version> <!-- set on `xforms-model-construct-done` by `fb-read-form-metadata` -->
                </publish>
            </xf:instance>

            <xf:bind ref="instance('fb-publish-instance')">
                <xf:bind
                    ref="latest-version"
                    type="xs:integer"/>
            </xf:bind>

            <xf:var
                name="latest-version"
                value="instance('fb-publish-instance')/latest-version/data(.)"/>

            <xf:instance id="fb-publish-form-metadata">
                <dummy/>
            </xf:instance>

            <xf:submission
                id="fb-read-form-metadata"
                method="get"
                serialization="none"
                resource="{
                    frf:createFormMetadataPathAndQuery(
                        $app,
                        $form,
                        not($restrict-to-latest-version),
                        false()
                    )
                }"
                replace="instance"
                instance="fb-publish-form-metadata">

                <xf:action event="xforms-submit-done">
                    <xf:action
                        context="instance('fb-publish-form-metadata')"
                        if="exists(form)">

                        <xf:var name="i" value="."/>

                        <!--
                            Persistence might not return any version information if it doesn' support versioning. So we
                            insert one version which defaults to "1".
                            NOTE: In this case, the API must return only one `<form>` element!
                        -->
                        <xf:insert
                            context="$i/form"
                            if="empty(form-version)"
                            ref="*"
                            origin="xf:element('form-version', 1)"/>

                        <xf:setvalue
                            ref="instance('fb-publish-instance')/latest-version"
                            value="
                                max(
                                    $i//form/form-version[
                                        . castable as xs:integer
                                    ]/xs:integer(.)
                                )"/>

                    </xf:action>

                </xf:action>

                <xf:message event="xforms-submit-error" value="xxf:r('import.error-messages.reading-form-metadata', '|fr-fr-resources|')"/>

            </xf:submission>

            <xf:submission
                id="fb-read-form-definition"
                method="get"
                serialization="none"
                resource="{frf:createFormDefinitionBasePath($app, $form)}/form.xhtml"
                replace="none">

                <!-- To retrieve a specific version -->
                <xf:header ref="event('form-version')[xxf:non-blank()]">
                    <xf:name>Orbeon-Form-Definition-Version</xf:name>
                    <xf:value value="."/>
                </xf:header>

                <xf:action event="xforms-submit-done">
                    <xf:var
                        name="response-metadata"
                        value="frf:metadataInstanceRootOpt(event('response-body'))"/>
                    <xf:setvalue
                        ref="instance('fr-form-instance')/version/existing-comment"
                        value="$response-metadata/version-comment/string()"/>
                    <xf:setvalue
                        ref="instance('fr-form-instance')/available"
                        value="not($response-metadata/available = 'false')"/>
                </xf:action>

                <xf:message
                    event="xforms-submit-error"
                    if="not(event('response-status-code') = (404, 410))"
                    value="xxf:r('import.error-messages.reading-form-definition', '|fr-fr-resources|')"/>

                <xf:setvalue
                    event="xforms-submit-error"
                    ref="instance('fr-form-instance')/version/existing-comment"/>

            </xf:submission>

            <!-- END: Shared with `dialog-publish.xml` -->

            <!-- Current Form Runner language -->
            <!-- TODO: Provide XPath function! -->
            <xf:var
                name="fr-lang"
                model="fr-resources-model"
                value="$fr-lang"/>

        </xf:model>
    </xh:head>
    <xh:body>
        <fr:view>
            <fr:body>
                <fr:section id="version-section" bind="version-bind">
                    <xf:label ref="xxf:r('import.form-version.label', '|fr-fr-resources|')"/>

                    <fr:grid>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output value="frf:formTitleFromMetadataElem(instance('fb-publish-form-metadata')/form[form-version = instance('fr-form-instance')/version/selected-version], $fr-lang)">
                                    <xf:label ref="xxf:r('home.titles.title', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td>
                                <xf:output value="$app">
                                    <xf:label ref="xxf:r('import.application-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output value="$form">
                                    <xf:label ref="xxf:r('import.form-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <fr:dropdown-select1 ref="selected-version">
                                    <xf:label ref="xxf:r('import.form-version.label', '|fr-fr-resources|')"/>
                                    <xf:alert ref="xxf:r('import.form-version.alert', '|fr-fr-resources|')"/>
                                    <!-- All existing versions sorted from newest to oldest -->
                                    <xf:itemset
                                        ref="
                                            xxf:sort(
                                                instance('fb-publish-form-metadata')/form/form-version[string(.) castable as xs:integer]/xs:integer(.),
                                                .,
                                                'number',
                                                'descending'
                                            )">
                                        <xf:label value="."/>
                                        <xf:value value="."/>
                                    </xf:itemset>

                                    <xf:action event="xforms-value-changed">
                                        <xf:var name="value" value="string(.)"/>

                                        <xf:dispatch
                                            name="fr-import-clear-validation-and-import"
                                            targetid="fr-form-model"/>

                                        <xf:action if="not($value castable as xs:integer)">
                                            <xf:setvalue ref="instance('fr-import-search-response')/@search-total"/>
                                        </xf:action>
                                        <xf:action if="$value castable as xs:integer">
                                            <xf:send submission="fb-read-form-definition">
                                                <xf:property name="form-version" value="$value"/>
                                            </xf:send>
                                            <xf:send submission="fr-import-search-submission">
                                                <xf:property name="form-version" value="$value"/>
                                            </xf:send>
                                        </xf:action>
                                    </xf:action>

                                </fr:dropdown-select1>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:textarea  ref="existing-comment">
                                    <xf:label ref="xxf:r('import.version-comment.label', '|fr-fr-resources|')"/>
                                </xf:textarea>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output
                                    class="alert alert-info"
                                    value="
                                        if (instance('fr-import-search-response')/@search-total/string() castable as xs:integer) then
                                            xxf:format-message(
                                                xxf:r('import.existing-records-message', '|fr-fr-resources|'),
                                                (
                                                    instance('fr-import-search-response')/@search-total/data(.),
                                                    $app,
                                                    $form,
                                                    instance('fr-form-instance')/version/selected-version/string()
                                                )
                                            )
                                        else
                                            xxf:r('import.na', '|fr-fr-resources|')">
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                    </fr:grid>
                </fr:section>
                <fr:section id="upload-section" bind="upload-bind">
                    <xf:label ref="xxf:r('import.upload.label', '|fr-fr-resources|')"/>

                    <fr:grid>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output value="frf:formTitleFromMetadataElem(instance('fb-publish-form-metadata')/form[form-version = instance('fr-form-instance')/version/selected-version], $fr-lang)">
                                    <xf:label ref="xxf:r('home.titles.title', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$app">
                                    <xf:label ref="xxf:r('import.application-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$form">
                                    <xf:label ref="xxf:r('import.form-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="instance('fr-form-instance')/version/selected-version">
                                    <xf:label ref="xxf:r('import.form-version.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output
                                    class="alert alert-info"
                                    ref=".[not($versioning-supported-on-data-side)]"
                                    value="
                                        if (instance('fr-import-search-response')/@search-total/string() castable as xs:integer) then
                                            xxf:format-message(
                                                xxf:r('import.existing-records-message', '|fr-fr-resources|'),
                                                (
                                                    instance('fr-import-search-response')/@search-total/data(.),
                                                    $app,
                                                    $form,
                                                    instance('fr-form-instance')/version/selected-version/string()
                                                )
                                            )
                                        else
                                            xxf:r('import.na', '|fr-fr-resources|')">
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                    </fr:grid>

                    <fr:grid>
                        <xh:tr>
                            <xh:td colspan="3">

                                <fr:attachment ref="file" >
                                    <xf:label ref="xxf:r('import.file.label', '|fr-fr-resources|')"/>
                                    <xf:hint
                                        ref="
                                            string-join(
                                                (
                                                    xxf:r('import.file.excel-headings-format',               '|fr-fr-resources|')[$allowed-formats = 'excel-headings'],
                                                    xxf:r('import.file.excel-named-ranges-format',           '|fr-fr-resources|')[$allowed-formats = 'excel-named-ranges'],
                                                    xxf:r('import.file.xml-form-structure-and-data-format',  '|fr-fr-resources|')[$allowed-formats = 'xml-form-structure-and-data']
                                                ),
                                                ', '
                                            )"/>
                                    <xf:alert ref="xxf:r('import.file.alert', '|fr-fr-resources|')"/>

                                    <!-- 2021-03-26: This event does not get dispatched! -->
                                    <xf:dispatch
                                        event="xforms-value-changed"

                                        name="fr-import-clear-validation-and-import"
                                        targetid="fr-form-model"/>

                                </fr:attachment>

                            </xh:td>
                        </xh:tr>
                    </fr:grid>
                </fr:section>
                <fr:section id="validate-section" bind="validate-bind">
                    <xf:label ref="xxf:r('import.validation.label', '|fr-fr-resources|')"/>

                    <xf:var name="validating" value="validating = 'started'"/>

                    <!-- Start validation immediately-->
                    <xf:send
                        observer="validate-section-case"
                        event="xforms-select"
                        if="not(validating = 'started') and not($validation-done)"

                        submission="fr-import-validate-submission"/>

                    <fr:grid>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output value="frf:formTitleFromMetadataElem(instance('fb-publish-form-metadata')/form[form-version = instance('fr-form-instance')/version/selected-version], $fr-lang)">
                                    <xf:label ref="xxf:r('home.titles.title', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$app">
                                    <xf:label ref="xxf:r('import.application-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$form">
                                    <xf:label ref="xxf:r('import.form-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="instance('fr-form-instance')/version/selected-version">
                                    <xf:label ref="xxf:r('import.form-version.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                    </fr:grid>

                    <!-- This is here so we can make the section invalid until validation has completed. -->
                    <fr:hidden ref="validating">
                        <xf:label ref="xxf:r('import.validation.label', '|fr-fr-resources|')"/>
                        <xf:alert ref="xxf:r('import.validation.alert', '|fr-fr-resources|')"/>
                    </fr:hidden>

                    <fr:grid>
                        <xh:tr>
                            <xh:td>
                                <xf:trigger ref=".[$validation-canceled]">
                                    <xf:label ref="xxf:r('import.start-validation.label', '|fr-fr-resources|')"/>
                                    <xf:action event="DOMActivate">
                                        <xf:dispatch
                                            name="fr-import-clear-validation-and-import"
                                            targetid="fr-form-model"/>
                                        <xf:send
                                            submission="fr-import-validate-submission"/>
                                    </xf:action>
                                </xf:trigger>
                            </xh:td>
                        </xh:tr>
                    </fr:grid>
                    <xf:group ref="stats[$validating or $validation-done]">
                        <xf:group ref=".[not(bind('file-format-bind') = ('excel-named-ranges', 'xml-form-structure-and-data'))]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td>
                                        <!-- TODO: i18n: not sure why `{xxf:r('import.rows', '|fr-fr-resources|')}` in suffix doesn't work. -->
                                        <fr:number ref="total" suffix="rows">
                                            <xf:label ref="xxf:r('import.total', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                    <xh:td>
                                        <fr:number ref="succeeded" suffix="rows">
                                            <xf:label ref="xxf:r('import.valid', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                    <xh:td>
                                        <fr:number ref="bind('fr-import-invalid-count-bind')" suffix="rows">
                                            <xf:label ref="xxf:r('import.invalid', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                        <xf:group ref=".[bind('file-format-bind') = ('excel-named-ranges', 'xml-form-structure-and-data')]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td>
                                        <fr:number ref="all-values-count">
                                            <xf:label ref="xxf:r('import.fields-found', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                    <xh:td>
                                        <fr:number ref="set-values-count">
                                            <xf:label ref="xxf:r('import.values-found', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                    <xh:td>
                                        <fr:number ref="counts/@error">
                                            <xf:label ref="xxf:r('import.errors', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                    <xh:td>
                                        <fr:number ref="counts/@warning">
                                            <xf:label ref="xxf:r('import.warnings', '|fr-fr-resources|')"/>
                                        </fr:number>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                    </xf:group>

                    <xf:group ref=".[$validating]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <xf:output
                                        value="
                                            for $ds in instance('fr-import-batch-stats')/eta
                                            return
                                                if ($ds castable as xs:dayTimeDuration) then
                                                    for $d in xs:dayTimeDuration($ds)
                                                    return
                                                        xxf:format-message(
                                                            xxf:r('import.eta-message', '|fr-fr-resources|'),
                                                            (
                                                                hours-from-duration($d),
                                                                minutes-from-duration($d),
                                                                round(seconds-from-duration($d))
                                                            )
                                                        )
                                                else
                                                    '-'">
                                        <xf:label ref="xxf:r('import.eta', '|fr-fr-resources|')"/>
                                    </xf:output>
                                </xh:td>
                            </xh:tr>
                            <xh:tr>
                                <xh:td colspan="2">
                                    <xh:div class="progress progress-striped">
                                        <xh:div class="bar" style="width: {format-number(instance('fr-import-batch-stats')/progress, '###%')}"/>
                                    </xh:div>
                                </xh:td>
                                <xh:td>
                                    <xf:trigger class="import-cancel-validation-trigger">
                                        <xf:label ref="xxf:r('import.cancel-validation.label', '|fr-fr-resources|')"/>
                                        <xf:action event="DOMActivate" type="xpath">
                                            xxf:set-session-attribute('org.orbeon.fr.import.cancel', true())
                                        </xf:action>
                                    </xf:trigger>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <!-- Validation results when available -->
                    <xf:group context="stats" ref=".[$validation-done]">

                        <xf:var
                            name="format-invalid"
                            value="exists(bind('validate-stats-errors-bind')/error)"/>

                        <xf:var
                            name="some-invalid"
                            value="bind('fr-import-invalid-count-bind') gt 0"/>

                        <xf:group ref=".[not($validation-canceled)]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xf:group bind="validate-stats-errors-bind" class="alert alert-error">
                                            <xh:ul>
                                                <xf:repeat ref="error">
                                                    <xh:li><xf:output value="."/></xh:li>
                                                </xf:repeat>
                                            </xh:ul>
                                        </xf:group>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xf:group
                                            ref=".[not($format-invalid)]"
                                            class="alert alert-{if ($some-invalid) then 'warning' else 'success'}">
                                            <xf:output
                                                value="
                                                    if (bind('file-format-bind') = ('excel-named-ranges', 'xml-form-structure-and-data')) then
                                                        if ($some-invalid) then
                                                            xxf:format-message(
                                                                xxf:r('import.invalid-document-message', '|fr-fr-resources|'),
                                                                ()
                                                            )
                                                        else
                                                            xxf:format-message(
                                                                xxf:r('import.valid-document-message', '|fr-fr-resources|'),
                                                                ()
                                                            )
                                                    else
                                                        if ($some-invalid) then
                                                            xxf:format-message(
                                                                xxf:r('import.invalid-records-message', '|fr-fr-resources|'),
                                                                for $n in (bind('fr-import-invalid-count-bind'), processed)
                                                                    return xs:integer($n)
                                                            )
                                                        else
                                                            xxf:format-message(
                                                                xxf:r('import.valid-records-message', '|fr-fr-resources|'),
                                                                xs:integer(processed)
                                                            )"
                                            />
                                        </xf:group>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                        <xf:group ref=".[$validation-canceled]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="alert alert-warning">
                                            <xf:output value="xxf:r('import.validation-canceled', '|fr-fr-resources|')"/>
                                        </xh:span>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                    </xf:group>

                </fr:section>
                <fr:section id="import-section" bind="import-bind">
                    <xf:label ref="xxf:r('import.import.label', '|fr-fr-resources|')"/>

                    <fr:grid>
                        <xh:tr>
                            <xh:td colspan="3">
                                <xf:output value="frf:formTitleFromMetadataElem(instance('fb-publish-form-metadata')/form[form-version = instance('fr-form-instance')/version/selected-version], $fr-lang)">
                                    <xf:label ref="xxf:r('home.titles.title', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                        <xh:tr>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$app">
                                    <xf:label ref="xxf:r('import.application-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="$form">
                                    <xf:label ref="xxf:r('import.form-name.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                            <xh:td>
                                <xf:output ref=".[$show-app-form-names]" value="instance('fr-form-instance')/version/selected-version">
                                    <xf:label ref="xxf:r('import.form-version.label', '|fr-fr-resources|')"/>
                                </xf:output>
                            </xh:td>
                        </xh:tr>
                     </fr:grid>

                    <xf:var name="importing" value="importing = 'started'"/>

                    <xf:group ref=".[not($importing) and not($import-done)]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <xf:select1
                                        appearance="full"
                                        ref="
                                            for $t in instance('fr-import-search-response')/@search-total[string(.) castable as xs:integer][data(.) gt 0]
                                            return
                                                bind('fr-keep-existing-records-bind')">
                                        <xf:label ref="xxf:r('import.existing-records.label', '|fr-fr-resources|')"/>
                                        <xf:itemset ref="xxf:resource-elements('import.existing-records.item', '|fr-fr-resources|')">
                                            <xf:label ref="."/>
                                            <xf:value ref="if (@id = 0) then 'true' else 'false'"/>
                                        </xf:itemset>
                                    </xf:select1>
                                </xh:td>
                                <xh:td>
                                    <xf:select1
                                        appearance="full"
                                        ref="
                                            bind('fr-import-invalid-data-bind')[
                                                $allow-invalid-documents and
                                                bind('fr-import-invalid-count-bind') gt 0
                                            ]">
                                        <xf:label ref="xxf:r('import.invalid-data.label', '|fr-fr-resources|')"/>
                                        <xf:itemset ref="xxf:resource-elements('import.invalid-data.item', '|fr-fr-resources|')">
                                            <xf:label ref="."/>
                                            <xf:value ref="if (@id = 0) then 'false' else 'true'"/>
                                        </xf:itemset>
                                    </xf:select1>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <fr:grid>
                        <xh:tr>
                            <xh:td>
                                <xf:trigger ref=".[not($importing) and not($import-done) or $import-canceled]">
                                    <xf:label ref="xxf:r('import.start-import.label', '|fr-fr-resources|')"/>
                                    <xf:action event="DOMActivate">

                                        <xf:dispatch
                                            name="fr-import-clear-import"
                                            targetid="fr-form-model"/>

                                        <xf:send
                                            if="bind('fr-keep-existing-records-bind') = true()"
                                            submission="fr-import-import-submission"/>
                                        <xf:send
                                            if="bind('fr-keep-existing-records-bind') = false()"
                                            submission="fr-import-delete-data-submission"/>
                                    </xf:action>
                                </xf:trigger>
                            </xh:td>
                        </xh:tr>
                    </fr:grid>

                    <xf:group ref="stats[$importing or $import-done]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <fr:number ref="total" suffix="rows">
                                        <xf:label ref="xxf:r('import.total', '|fr-fr-resources|')"/>
                                        <xf:alert/>
                                    </fr:number>
                                </xh:td>
                                <xh:td>
                                    <fr:number ref="succeeded" suffix="rows">
                                        <xf:label ref="xxf:r('import.imported', '|fr-fr-resources|')"/>
                                    </fr:number>
                                </xh:td>
                                <xh:td>
                                    <fr:number ref="bind('fr-import-invalid-count-bind')" suffix="rows">
                                        <xf:label ref="xxf:r('import.skipped', '|fr-fr-resources|')"/>
                                    </fr:number>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <xf:group ref=".[$importing]">
                        <fr:grid>
                            <xh:tr>
                                <xh:td>
                                    <xf:output
                                        value="
                                            for $ds in instance('fr-import-batch-stats')/eta
                                            return
                                                if ($ds castable as xs:dayTimeDuration) then
                                                    for $d in xs:dayTimeDuration($ds)
                                                    return
                                                        xxf:format-message(
                                                            xxf:r('import.eta-message', '|fr-fr-resources|'),
                                                            (
                                                                hours-from-duration($d),
                                                                minutes-from-duration($d),
                                                                round(seconds-from-duration($d))
                                                            )
                                                        )
                                                else
                                                    '-'">
                                        <xf:label ref="xxf:r('import.eta', '|fr-fr-resources|')"/>
                                    </xf:output>
                                </xh:td>
                            </xh:tr>
                            <xh:tr>
                                <xh:td colspan="2">
                                    <xh:div class="progress progress-striped">
                                        <xh:div
                                            class="bar"
                                            style="width: {
                                                format-number(
                                                    if (instance('fr-import-batch-stats')/total != 0) then
                                                        xs:decimal(instance('fr-import-batch-stats')/processed) div
                                                                xs:decimal(instance('fr-import-batch-stats')/total)
                                                     else
                                                        0,
                                                    '###%'
                                                )
                                        }"/>
                                    </xh:div>
                                </xh:td>
                                <xh:td>
                                    <xf:trigger class="import-cancel-import-trigger">
                                        <xf:label ref="xxf:r('import.cancel-import.label', '|fr-fr-resources|')"/>
                                        <xf:action event="DOMActivate" type="xpath">
                                            xxf:set-session-attribute('org.orbeon.fr.import.cancel', true())
                                        </xf:action>
                                    </xf:trigger>
                                </xh:td>
                            </xh:tr>
                        </fr:grid>
                    </xf:group>

                    <!-- Import results when available -->
                    <xf:group ref="stats[$import-done]">
                        <!-- Validation results -->

                        <xf:var name="skipped" value="processed - succeeded"/>

                        <xf:group ref=".[not($import-canceled)]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="alert alert-success">
                                            <xf:output
                                                value="
                                                    xxf:format-message(
                                                        xxf:r('import.import-complete-message', '|fr-fr-resources|'),
                                                        (
                                                            data(succeeded),
                                                            $skipped
                                                        )
                                                    )"/>
                                        </xh:span>
                                    </xh:td>
                                </xh:tr>
                                <xh:tr>
                                    <xh:td>
                                        <xf:trigger ref=".[$show-start-over-button]">
                                            <xf:label ref="xxf:r('import.start-over.label', '|fr-fr-resources|')"/>
                                            <xf:action event="DOMActivate">
                                                <xf:load resource="import"/>
                                            </xf:action>
                                        </xf:trigger>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>
                        <xf:group ref=".[$import-canceled]">
                            <fr:grid>
                                <xh:tr>
                                    <xh:td colspan="2">
                                        <xh:span class="alert alert-warning">
                                            <xf:output value="xxf:r('import.import-canceled', '|fr-fr-resources|')"/>
                                        </xh:span>
                                        <xf:trigger ref=".[$show-start-over-button]">
                                            <xf:label ref="xxf:r('import.start-over.label', '|fr-fr-resources|')"/>
                                            <xf:action event="DOMActivate">
                                                <xf:load resource="import"/>
                                            </xf:action>
                                        </xf:trigger>
                                    </xh:td>
                                </xh:tr>
                            </fr:grid>
                        </xf:group>

                    </xf:group>
                </fr:section>

            </fr:body>
            <fr:inner-buttons>
                <fr:wizard-prev-button/>
                <fr:wizard-next-button/>
                <xf:group ref=".[bind('file-format-bind') = ('excel-named-ranges', 'xml-form-structure-and-data')]">
                    <xf:submit
                        ref="if ($validation-completed) then . else ''"
                        submission="fr-import-submit-new-form-submission">
                        <xf:label ref="xxf:r('import.review-data.label', '|fr-fr-resources|')"/>
                    </xf:submit>
                </xf:group>
            </fr:inner-buttons>
        </fr:view>
    </xh:body>
</xh:html>